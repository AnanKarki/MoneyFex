//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FAXER.PORTAL.DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using System.Data.Entity.ModelConfiguration.Conventions;
    using FAXER.PORTAL.Models;
    using FAXER.PORTAL.Areas.Agent.AgentServices;
    using FAXER.PORTAL.Areas.Admin.Controllers;
    using FAXER.PORTAL.Areas.Admin.ViewModels;
    using System.Collections.Generic;
    using System.Data.SqlClient;
    using FAXER.PORTAL.Areas.Agent.Models;

    public partial class FAXEREntities : DbContext
    {
        public FAXEREntities() : base("name=FAXEREntities")
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            // modelBuilder.Entity<FaxingCardTransaction>()
            //.HasRequired<MFTCCardInformation>(p => p.MFTCCardInformation)
            //.WithMany()
            //.WillCascadeOnDelete(false);

            modelBuilder.Conventions.Remove<PluralizingTableNameConvention>();
            modelBuilder.Entity<ExchangeRate>().Property(e => e.CountryRate1).HasPrecision(38, 20);
            modelBuilder.Entity<ExchangeRate>().Property(e => e.Rate).HasPrecision(38, 20);
            try
            {

            }
            catch (Exception ex)
            {
            }
        }
        #region Admin

        public virtual DbSet<RecipientTransactionCount> RecipientTransactionCount { get; set; }
        public virtual DbSet<SenderTransactionCount> SenderTransactionCount { get; set; }
        public virtual DbSet<TransactionStatementNote> TransactionStatementNote { get; set; }
        public virtual DbSet<SenderRegisteredByAgent> SenderRegisteredByAgent { get; set; }
        public virtual DbSet<ReceiverDocumentation> ReceiverDocumentation { get; set; }

        public virtual DbSet<TransactionAmountLimit> TransactionAmountLimit { get; set; }
        public virtual DbSet<PayoutFlowControl> PayoutFlowControl { get; set; }
        public virtual DbSet<PayoutFlowControlDetails> PayoutFlowControlDetails { get; set; }
        public virtual DbSet<MobileNotification> MobileNotification { get; set; }
        #endregion

        public virtual DbSet<SystemExchangeRateType> SystemExchangeRateType { get; set; }
        public virtual DbSet<AgentAccountBalance> AgentAccountBalance { get; set; }
        public virtual DbSet<AgentFundAccount> AgentFundAccount { get; set; }
        public virtual DbSet<AgentTransferLimit> AgentTransferLimit { get; set; }
        public virtual DbSet<AgentTransferLimitHistory> AgentTransferLimitHistory { get; set; }
        public virtual DbSet<TransferExchangeRateByCurrency> TransferExchangeRateByCurrency { get; set; }
        public virtual DbSet<IntroductoryRateByCurrency> IntroductoryRateByCurrency { get; set; }
        public virtual DbSet<IntroductoryFeeByCurrency> IntroductoryFeeByCurrency { get; set; }
        public virtual DbSet<TransferFeePercentageByCurrency> TransferFeePercentageByCurrency { get; set; }
        public virtual DbSet<CustomerPaymentFee> CustomerPaymentFee { get; set; }
        public virtual DbSet<IntroductoryFeeHistory> IntroductoryFeeHistory { get; set; }
        public virtual DbSet<IntroductoryFee> IntroductoryFee { get; set; }
        public virtual DbSet<AgentCommissionHisotry> AgentCommissionHisotry { get; set; }
        public virtual DbSet<TransferExchangeRateHistory> TransferExchangeRateHistory { get; set; }
        public virtual DbSet<TransferFeePercentageHistory> TransferFeePercentageHistory { get; set; }
        public virtual DbSet<TransferFeePercentage> TransferFeePercentage { get; set; }
        public virtual DbSet<SpreadRateHistory> SpreadRateHistory { get; set; }
        public virtual DbSet<SpreadRate> SpreadRate { get; set; }
        public virtual DbSet<AgentNewDocument> AgentNewDocument { get; set; }
        public virtual DbSet<AgentInformation> AgentInformation { get; set; }
        public virtual DbSet<AgentLogin> AgentLogin { get; set; }
        public virtual DbSet<KiiPayBusinessInformation> KiiPayBusinessInformation { get; set; }
        public virtual DbSet<KiiPayBusinessLogin> KiiPayBusinessLogin { get; set; }

        public virtual DbSet<KiiPayBusinessUserPersonalInfo> KiiPayBusinessUserPersonalInfo { get; set; }
        public virtual DbSet<Suppliers> Suppliers { get; set; }
        public virtual DbSet<KiiPayBusinessLocalTransactionWithSuppliers> KiiPayBusinessLocalTransactionWithSuppliers { get; set; }
        public virtual DbSet<KiiPayBusinessInternationalTransactionWithSuppliers> KiiPayBusinessInternationalTransactionWithSuppliers { get; set; }
        public virtual DbSet<KiiPayBusinessLocalTopUpWithSuppliers> KiiPayBusinessLocalTopUpWithSuppliers { get; set; }
        public virtual DbSet<KiiPayBusinessInternationalTopUpWithSuppliers> KiiPayBusinessInternationalTopUpWithSuppliers { get; set; }

        public virtual DbSet<Commission> Commission { get; set; }
        public virtual DbSet<Continent> Continent { get; set; }
        public virtual DbSet<ControlTable> ControlTable { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<Currency> Currency { get; set; }
        public virtual DbSet<ExchangeRate> ExchangeRate { get; set; }
        public virtual DbSet<FaxerInformation> FaxerInformation { get; set; }
        public virtual DbSet<FaxerLogin> FaxerLogin { get; set; }

        public virtual DbSet<FaxerActivityLog> FaxerActivityLog { get; set; }

        public virtual DbSet<SenderKiiPayPersonalWalletPayment> FaxingCardTransaction { get; set; }
        public virtual DbSet<FaxingNonCardTransaction> FaxingNonCardTransaction { get; set; }
        public virtual DbSet<IdentityCardType> IdentityCardType { get; set; }
        public virtual DbSet<KiiPayBusinessWalletInformation> KiiPayBusinessWalletInformation { get; set; }
        public virtual DbSet<KiiPayPersonalWalletInformation> KiiPayPersonalWalletInformation { get; set; }
        public virtual DbSet<NonCardReceive> NonCardReceive { get; set; }
        public virtual DbSet<PaymentMethods> PaymentMethods { get; set; }

        // cash pick up Receiver Details 
        public virtual DbSet<ReceiversDetails> ReceiversDetails { get; set; }
        public virtual DbSet<SavedCard> SavedCard { get; set; }
        public virtual DbSet<KiiPayPersonalWalletWithdrawalFromAgent> UserCardWithdrawl { get; set; }
        public virtual DbSet<UserCardPurchase> UserCardPurchase { get; set; }
        public virtual DbSet<SenderKiiPayBusinessPaymentInformation> FaxerMerchantPaymentInformation { get; set; }
        public virtual DbSet<SenderKiiPayBusinessPaymentTransaction> FaxerMerchantPaymentTransaction { get; set; }
        public virtual DbSet<BecomeAnAgent> BecomeAnAgent { get; set; }
        public virtual DbSet<ReceiverNonCardWithdrawl> ReceiverNonCardWithdrawl { get; set; }
        public virtual DbSet<RefundNonCardFaxMoneyByAgent> RefundNonCardFaxMoneyByAgent { get; set; }

        public virtual DbSet<AgentFaxMoneyInformation> AgentFaxMoneyInformation { get; set; }
        public virtual DbSet<FaxingUpdatedInformation> FaxingUpdatedInformation { get; set; }

        public virtual DbSet<CardTopUpCreditDebitInformation> CardTopUpCreditDebitInformation { get; set; }

        public virtual DbSet<StaffInformation> StaffInformation { get; set; }



        public virtual DbSet<StaffLogin> StaffLogin { get; set; }
        public virtual DbSet<StaffAddresses> StaffAddresses { get; set; }
        public virtual DbSet<StaffEmployment> StaffEmployment { get; set; }
        public virtual DbSet<StaffLoginHistory> StaffLoginHistory { get; set; }
        public virtual DbSet<StaffTraining> StaffTraining { get; set; }

        public virtual DbSet<StaffHolidays> StaffHolidays { get; set; }
        public virtual DbSet<StaffNotice> StaffNotice { get; set; }
        public virtual DbSet<PublicHolidays> PublicHolidays { get; set; }


        public virtual DbSet<KiiPayBusinessLocalTransaction> KiiPayBusinessLocalTransaction { get; set; }
        public virtual DbSet<KiiPayBusinessWalletWithdrawlFromAgent> MFBCCardWithdrawls { get; set; }

        public virtual DbSet<AgentAlerts> AgentAlerts { get; set; }
        public virtual DbSet<BusinessAlerts> BusinessAlerts { get; set; }
        public virtual DbSet<BecomeAMerchant> BecomeAMerchant { get; set; }
        public virtual DbSet<AgentCommission> AgentCommission { get; set; }
        public virtual DbSet<ReFundNonCardFaxMoneyByAdmin> ReFundNonCardFaxMoneyByAdmins { get; set; }
        public virtual DbSet<RefundOnDeletedMFTCCard> RefundOnDeletedMFTCCard { get; set; }
        public virtual DbSet<DeletedMFTCCards> DeletedMFTCCards { get; set; }
        public virtual DbSet<DeletedMFBCCards> DeletedMFBCCards { get; set; }
        public virtual DbSet<RefundOnDeletedMFBCCard> RefundOnDeletedMFBCCard { get; set; }
        public virtual DbSet<FaxerMerchantPaymentByStaffCardInfo> FaxerMerchantPaymentByStaffCardInfo { get; set; }

        public virtual DbSet<KiiPayPersonalUserInformation> KiiPayPersonalUserInformation { get; set; }

        public virtual DbSet<KiiPayPersonalUserLogin> KiiPayPersonalUserLogin { get; set; }

        public virtual DbSet<KiiPayPersonalNationalKiiPayBusinessPayment> KiiPayPersonalNationalKiiPayBusinessPayment { get; set; }
        public virtual DbSet<City> City { get; set; }

        public virtual DbSet<AgentCommissionPayment> AgentCommissionPayment { get; set; }
        public virtual DbSet<Career> Career { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<FaxingUpdatedInformationByAdmin> FaxingUpdatedInformationByAdmin { get; set; }

        public virtual DbSet<BankToBankMFTCCardTopUp> BankToBankMFTCCardTopUp { get; set; }

        public virtual DbSet<BankToBankFaxerMerchantPayment> BankToBankFaxerMerchantPayment { get; set; }

        public virtual DbSet<BankToBankFaxingNonCardTransaction> BankToBankFaxingNonCardTransaction { get; set; }

        public virtual DbSet<MFTCAutoTopUpTransactionLog> MFTCAutoTopUpTransactionLog { get; set; }

        public virtual DbSet<MerchantAutoPaymentTransactionLog> MerchantAutoPaymentTransactionLog { get; set; }

        public virtual DbSet<KiiPayPersonalWalletInterMoneyTransfered> MFTCCardInterMoneyTransfered { get; set; }
        public virtual DbSet<StaffEmail> StaffEmail { get; set; }
        public virtual DbSet<StaffPayslip> StaffPayslip { get; set; }

        public virtual DbSet<AgentNote> AgentNote { get; set; }

        public virtual DbSet<FaxerNote> FaxerNote { get; set; }

        public virtual DbSet<BusinessNote> BusinessNote { get; set; }

        public virtual DbSet<TopUpSomeoneElseCardTransaction> TopUpSomeoneElseCardTransaction { get; set; }
        public virtual DbSet<BanktoBankTransferTopUpSomeoneElseCard> BanktoBankTransferTopUpSomeoneElseCard { get; set; }

        public virtual DbSet<JobApplicant> JobApplicant { get; set; }

        public virtual DbSet<OtherMFTCCardAutoTopUpInformation> OtherMFTCCardAutoTopUpInformation { get; set; }
        public virtual DbSet<AgentLocations> AgentLocations { get; set; }
        public virtual DbSet<PartnerInformation> PartnerInformation { get; set; }

        public virtual DbSet<BankAccount> BankAccount { get; set; }

        public virtual DbSet<BaankAccountCreditUpdateByAgent> BaankAccountCreditUpdateByAgent { get; set; }

        public virtual DbSet<KiiPayPersonalWalletPaymentByKiiPayBusiness> KiiPayPersonalWalletPaymentByKiiPayBusiness { get; set; }
        public virtual DbSet<AddMoneyToKiiPayPersonalWallet> AddMoneyToKiiPayPersonalWallet { get; set; }

        public virtual DbSet<KiiPayBusinessInternationalPaymentTransaction> KiiPayBusinessInternationalPaymentTransaction { get; set; }

        public virtual DbSet<MerchantNonCardReceiverDetails> MerchantNonCardReceiverDetail { get; set; }

        public virtual DbSet<MerchantNonCardTransaction> MerchantNonCardTransaction { get; set; }

        public virtual DbSet<KiiPayPersonalInternationalKiiPayBusinessPayment> KiiPayPersonalInternationalKiiPayBusinessPayment { get; set; }

        public virtual DbSet<KiiPayPersonalWalletPaymentByKiiPayPersonal> KiiPayPersonalWalletPaymentByKiiPayPersonal { get; set; }

        public virtual DbSet<CardUserReceiverDetails> CardUserReceiverDetails { get; set; }

        public virtual DbSet<CardUserNonCardTransaction> CardUserNonCardTransaction { get; set; }


        public virtual DbSet<CardUserNonCardWithdrawal> CardUserNonCardWithdrawal { get; set; }


        public virtual DbSet<MerchantNonCardWithdrawal> MerchantNonCardWithdrawal { get; set; }


        public virtual DbSet<FaxerAccountProfileUpdatedLogHistory> FaxerAccountProfileUpdatedLogHistory { get; set; }

        public virtual DbSet<NonCardTransactionStatusChangeLog> NonCardTransactionStatusChangeLog { get; set; }


        public virtual DbSet<KiiPayPersonalWalletWithdrawalCode> KiiPayPersonalWalletWithdrawalCode { get; set; }
        public virtual DbSet<KiiPayBusinessWalletWithdrawalCode> KiiPayBusinessWalletWithdrawalCode { get; set; }

        public virtual DbSet<KiiPayBusinessInvoiceMaster> KiiPayBusinessInvoiceMaster { get; set; }
        public virtual DbSet<KiiPayBusinessInvoiceDetail> KiiPayBusinessInvoiceDetail { get; set; }

        public virtual DbSet<RegistrationVerificationCode> RegistrationVerificationCode { get; set; }

        public virtual DbSet<AgentDailyTransactionStatementLog> AgentDailyTransactionStatementLog { get; set; }
        public virtual DbSet<VirtualAccountDepositByAgent> VirtualAccountDepositByAgent { get; set; }

        public virtual DbSet<SmsCharge> SmsFee { get; set; }
        public virtual DbSet<KiiPayBusinessWalletDepositByAgent> BusinessAccountDepositByAgent { get; set; }
        public virtual DbSet<CashWithdrawalByStaff> CashWithdrawalByStaff { get; set; }
        public virtual DbSet<CashWithdrawalByAgent> CashWithdrawalByAgent { get; set; }

        public virtual DbSet<AgentStaffInformation> AgentStaffInformation { get; set; }

        public virtual DbSet<AgentStaffLogin> AgentStaffLogin { get; set; }

        public virtual DbSet<AgentCashWithdrawalCode> AgentCashWithdrawalCode { get; set; }
        public virtual DbSet<ComplianceCommission> ComplianceCommission { get; set; }

        public virtual DbSet<SARForm> SARForm { get; set; }
        public virtual DbSet<ReasonForSuspicion> ReasonForSuspicion { get; set; }

        public virtual DbSet<SARForm_ReasonForSuspicion> SARForm_ReasonForSuspicions { get; set; }

        public virtual DbSet<ThirdPartyMoneyTransfer> ThirdPartyMoneyTransfer { get; set; }


        public virtual DbSet<LargeFundMoneyTransferFormData> LargeFundMoneyTransferFormData { get; set; }


        public virtual DbSet<AgentAMLTrainingRecordMaster> AgentAMLTrainingRecordMaster { get; set; }
        public virtual DbSet<AgentAMLTrainingRecordDetails> AgentAMLTrainingRecordDetail { get; set; }

        public virtual DbSet<SourceOfFundDeclarationFormData> SourceOfFundDeclarationFormData { get; set; }
        public virtual DbSet<KiiPayPersonalRequestForPayment> KiiPayPersonalRequestForPayment { get; set; }
        public virtual DbSet<KiiPayPersonalRefundedTransaction> KiiPayPersonalRefundedTransaction { get; set; }
        public virtual DbSet<KiiPayPersonalWalletStatement> KiiPayPersonalWalletStatement { get; set; }
        public virtual DbSet<KiiPayPersonalBusinessStandingOrderInfo> KiiPayPersonalBusinessStandingOrderInfo { get; set; }
        public virtual DbSet<SavedBank> SavedBank { get; set; }
        public virtual DbSet<KiiPayPerosnalToMobileWalletTransfer> KiiPayPerosnalToMobileWalletTransfer { get; set; }
        public virtual DbSet<KiiPayPersonalToBankAccountTransfer> KiiPayPersonalToBankAccountTransfer { get; set; }

        #region Kii Pay Business 

        public virtual DbSet<KiiPayBusinessWalletMoneyDepositByDebitCreditCard> DepositMoneyintoKiiPayBusinessWalletByDebitCreditCard { get; set; }
        public virtual DbSet<AddMoneyToKiiPayBusinessWallet> AddMoneyToKiiPayBusinessWallet { get; set; }
        public virtual DbSet<KiiPayBusinessECardInfo> KiiPayBusinessECardInfo { get; set; }

        public virtual DbSet<KiiPayBusinessBusinessStandingOrderInfo> KiiPayBusinessBusinessStandingOrderInfo { get; set; }


        public virtual DbSet<KiiPayBusinessKiiPayPersonalStandingOrderInfo> KiiPayBusinessKiiPayPersonalStandingOrderInfo { get; set; }
        public virtual DbSet<KiiPayPersonalKiiPayPersonalStandingOrderInfo> KiiPayPersonalKiiPayPersonalStandingOrderInfo { get; set; }
        public virtual DbSet<KiiPayBusinessRefundedTransaction> RefundedTransaction { get; set; }

        public virtual DbSet<KiiPayBusinessWalletStatement> KiiPayBusinessWalletStatement { get; set; }



        #endregion




        #region Sender 

        public virtual DbSet<SenderKiiPayPersonalAccount> SenderKiiPayPersonalAccount { get; set; }
        public virtual DbSet<SenderRequestAPayment> SenderRequestAPayment { get; set; }
        public virtual DbSet<BusinessRelatedInformation> BusinessRelatedInformation { get; set; }
        public virtual DbSet<SocialMediaTracking> SocialMediaTracking { get; set; }
        public virtual DbSet<MoneyFexBankAccountLog> MoneyFexBankAccountLog { get; set; }

        #endregion




        #region Notification 

        public DbSet<Notification> Notification { get; set; }

        #endregion

        #region Bank
        public virtual DbSet<Bank> Bank { get; set; }
        public virtual DbSet<BankBranch> BankBranch { get; set; }


        #endregion

        #region Mobile Transfer

        public DbSet<MobileMoneyTransfer> MobileMoneyTransfer { get; set; }

        public DbSet<MobileWalletOperator> MobileWalletOperator { get; set; }

        #endregion
        public virtual DbSet<PayBill> PayBill { get; set; }
        public virtual DbSet<TopUpToSupplier> TopUpToSupplier { get; set; }
        public virtual DbSet<SupplierStandingOrderPayment> SupplierStandingOrderPayment { get; set; }
        public virtual DbSet<BankAccountDeposit> BankAccountDeposit { get; set; }
        #region Log
        public virtual DbSet<Logger> Logger { get; set; }

        // Bank Deposit Transaction Status Log
        public virtual DbSet<BankDepositResponseStatus> BankDepositResponseStatus { get; set; }
        public virtual DbSet<BankDepositTransactionResponseResult> BankDepositTransactionResponseResult { get; set; }

        // Mobile Money Transaction Status Log
        public virtual DbSet<MobileMoneyTransferResposeStatus> MobileMoneyTransferResposeStatus { get; set; }
        public virtual DbSet<MobileMoneyTransferTransactionResponseResult> MobileMoneyTransferTransactionResponseResult { get; set; }
        //cash Pick up Transaction Status Log
        public virtual DbSet<CashPickUpResponseStatus> CashPickUpResponseStatus { get; set; }
        public virtual DbSet<CashPickUpTransactionResponseResult> CashPickUpTransactionResponseResult { get; set; }
        public virtual DbSet<Transact365ApiResponseTransationLog> Transact365ApiResponseTransationLog { get; set; }
        public virtual DbSet<MoneyWaveApiTransactionResponseLog> MoneyWaveApiTransactionResponseLog { get; set; }

        #endregion
        public virtual DbSet<IntroductoryRate> IntroductoryRate { get; set; }

        public virtual DbSet<IntroductoryRateHistory> IntroductoryRateHistory { get; set; }

        public virtual DbSet<BankAcceptingCurrency> BankAcceptingCurrency { get; set; }
        public virtual DbSet<TransferServiceMaster> TransferServiceMaster { get; set; }
        public virtual DbSet<TransferServiceDetails> TransferServiceDetails { get; set; }

        public virtual DbSet<TransferServiceByCurrencyMaster> TransferServiceByCurrencyMaster { get; set; }
        public virtual DbSet<TransferServiceByCurrencyDetails> TransferServiceByCurrencyDetails { get; set; }
        public virtual DbSet<ManualDepositEnable> ManualDepositEnable { get; set; }
        public virtual DbSet<LogosUpload> LogosUpload { get; set; }
        public virtual DbSet<LogoAssign> LogoAssign { get; set; }
        public virtual DbSet<LogoAssignDetails> LogoAssignDetails { get; set; }
        public virtual DbSet<BlacklistedReceiver> BlacklistedReceiver { get; set; }
        public virtual DbSet<AdminRegisteredAgentStaff> AdminRegisteredAgentStaff { get; set; }
        public virtual DbSet<BusinessLimit> BusinessLimit { get; set; }
        public virtual DbSet<BusinessLimtiHistory> BusinessLimtiHistory { get; set; }
        public virtual DbSet<SenderBusinessDocumentation> SenderBusinessDocumentation { get; set; }
        public virtual DbSet<StaffDocumentation> StaffDocumentation { get; set; }
        public virtual DbSet<FeedBacks> FeedBacks { get; set; }
        public virtual DbSet<APIProvider> APIProvider { get; set; }
        public virtual DbSet<APIProviderSelection> APIProviderSelection { get; set; }
        public virtual DbSet<APIProviderSelectionByCurrency> APIProviderSelectionByCurrency { get; set; }

        public virtual DbSet<TransferLimit> TransferLimit { get; set; }
        public virtual DbSet<PayoutProvider> PayoutProvider { get; set; }
        public virtual DbSet<PayoutProviderDetails> PayoutProviderDetails { get; set; }
        public virtual DbSet<PaymentSelection> PaymentSelection { get; set; }
        public virtual DbSet<PayoutProviderRate> PayoutProviderRate { get; set; }
        public virtual DbSet<CardProcessor> CardProcessor { get; set; }
        public virtual DbSet<CardProcessorSelection> CardProcessorSelection { get; set; }



        #region Credit Card Usage Information 

        public virtual DbSet<CreditDebitCardUsageLimit> CreditDebitCardUsageLimit { get; set; }
        public virtual DbSet<CreditCardUsageLog> CreditCardUsageLog { get; set; }
        public virtual DbSet<SecureTradingApiResponseTransactionLog> SecureTradingApiResponseTransactionLog { get; set; }

        public virtual DbSet<ThreeDRequestLog> ThreeDRequestLog { get; set; }

        public virtual DbSet<CreditCardAttemptLimit> CreditCardAttemptLimit { get; set; }
        public virtual DbSet<CreditCardAttemptLog> CreditCardAttemptLog { get; set; }
        #endregion
        #region receiver
        public virtual DbSet<Recipients> Recipients { get; set; }
        public virtual DbSet<ReceiverLimit> ReceiverLimit { get; set; }
        public virtual DbSet<ReceiverLimitHistory> ReceiverLimitHistory { get; set; }
        #endregion

        public virtual DbSet<ReinitializeTransaction> ReinitializeTransaction { get; set; }
        public virtual DbSet<RefundHistory> RefundHistory { get; set; }

        #region Aux Agent Rate Limits
        public virtual DbSet<AuxAgentExchangeRateLimit> AuxAgentExchangeRateLimit { get; set; }
        public virtual DbSet<AuxAgentTransferFeeLimit> AuxAgentTransferFeeLimit { get; set; }
        #endregion

        #region Transaction Summary Session table

        public virtual DbSet<SessionTransactionSummary> SessionTransactionSummary { get; set; }
        public virtual DbSet<SessionSenderAndReceiverDetial> SessionSenderAndReceiverDetial { get; set; }
        public virtual DbSet<SessionKiiPayTransferPaymentSummary> SessionKiiPayTransferPaymentSummary { get; set; }
        public virtual DbSet<SessionPaymentMethod> SessionPaymentMethod { get; set; }
        public virtual DbSet<SessionCreditDebitCardViewModel> SessionCreditDebitCardViewModel { get; set; }
        public virtual DbSet<SessionSenderMoneyFexBankDeposit> SessionSenderMoneyFexBankDeposit { get; set; }
        public virtual DbSet<SessionSenderCashPickUp> SessionSenderCashPickUp { get; set; }
        public virtual DbSet<SessionCashPickUpReceiverDetailsInformation> SessionCashPickUpReceiverDetailsInformation { get; set; }
        public virtual DbSet<SessionSenderMobileMoneyTransfer> SessionSenderMobileMoneyTransfer { get; set; }
        public virtual DbSet<SessionReceiverDetailsInformation> SessionReceiverDetailsInformation { get; set; }
        public virtual DbSet<SessionSenderBankAccountDeposit> SessionSenderBankAccountDeposit { get; set; }

        #endregion



        /// <summary>
        /// MonthlySumarry nTable Added
        /// Author: Umesh Timsian
        /// </summary>
        public virtual DbSet<MonthlySummary> MonthlySummary { get; set; }

        public virtual DbSet<WhatsAppMessage> WhatsAppMessage { get; set; }
        public virtual DbSet<TransactionError> TransactionError { get; set; }
        public virtual DbSet<ManualApprovalTransactionCountry> ManualApprovalTransactionCountry { get; set; }


        #region Stored Procedures
        public virtual List<SenderTransactionHistoryList> SP_GetBankAccountDepositStatement(int SenderId, int Year, int Month, int skip, int take)
        {
            return this.Database.SqlQuery<SenderTransactionHistoryList>("EXEC Sp_BankAccountDepositStatement @SenderId,@Year,@Month ,@skip ,@take",
                new SqlParameter("@SenderId", SenderId),
                  new SqlParameter("@Year", Year),
                new SqlParameter("@Month", Month),
                new SqlParameter("@skip", skip),
                new SqlParameter("@take", take)
                ).ToList();
        }

        public virtual Sp_GetBankDepositReceiptNo_result Sp_GetBankDepositReceiptNo_result(bool IsManualDeposit)
        {
            return this.Database.SqlQuery<Sp_GetBankDepositReceiptNo_result>("EXEC SP_GenerateBankAccountDepositReceiptNo @IsManualDeposit",
                new SqlParameter("@IsManualDeposit", IsManualDeposit)
                ).FirstOrDefault();
        }

        public virtual List<SenderDocumentationViewModel> Sp_GetSenderDocumentDetails(Areas.Admin.ViewModels.SearchParamViewModels.SenderDocumentSearchParamVm searchParam)
        {
            return this.Database.SqlQuery<SenderDocumentationViewModel>("EXEC SP_GETSENDERDOCUMENTDETAILS @Country, @City ,@SenderName,@AccountNo,@Telephone,@Status,@email ,@PageNumber , @PageSize",
                new SqlParameter("@Country", searchParam.Country),
                new SqlParameter("@City", searchParam.City),
                new SqlParameter("@SenderName", searchParam.SenderName),
                new SqlParameter("@AccountNo", searchParam.AccountNo),
                new SqlParameter("@Telephone", searchParam.Telephone),
                new SqlParameter("@Status", searchParam.Status),
                new SqlParameter("@email", searchParam.Email),
                new SqlParameter("@PageNumber", searchParam.PageNumber),
                new SqlParameter("@PageSize", searchParam.PageSize)
                ).ToList();
        }

        public virtual List<ViewRegisteredFaxersViewModel> Sp_GetRegisteredSenderDetails(Areas.Admin.Services.SenderRegisteredSearchParamVm searchParam)
        {
            return this.Database.SqlQuery<ViewRegisteredFaxersViewModel>("EXEC SP_GETREGISTEREDSENDERDETAILS @Country,@City,@SenderName,@AccountNo,@Address," +
                                                                         "@Telephone,@Status,@Email,@DateRange,@FromDate,@ToDate ,@PageNumber , @PageSize",
                new SqlParameter("@Country", searchParam.Country),
                new SqlParameter("@City", searchParam.City),
                new SqlParameter("@SenderName", searchParam.SenderName),
                new SqlParameter("@AccountNo", searchParam.AccountNo),
                new SqlParameter("@Address", searchParam.Address),
                new SqlParameter("@Telephone", searchParam.Telephone),
                new SqlParameter("@Status", searchParam.Status),
                new SqlParameter("@Email", searchParam.Email),
                new SqlParameter("@DateRange", searchParam.DateRange),
                new SqlParameter("@FromDate", searchParam.FromDate),
                new SqlParameter("@ToDate", searchParam.ToDate),
                new SqlParameter("@PageNumber", searchParam.PageNumber),
                new SqlParameter("@PageSize", searchParam.PageSize)
                ).ToList();
        }

        public virtual List<SenderTransactionHistoryList> Sp_GetTransactionStatementOfSender(Areas.Admin.ViewModels.SearchParamViewModels.SenderTransactionSearchParamVm searchParam)
        {
            return this.Database.SqlQuery<SenderTransactionHistoryList>("EXEC SP_GETRECENTTRANSACTIONOFSENDER @TransactionServiceType, @senderId ,@SendingCountry," +
                                                                        "@ReceivingCountry  ,@SenderName  ,@SenderEmail ,@DateRange,@FromDate ,@ToDate,@ReceiverName ," +
                                                                        "@searchString,@Status ,@PhoneNumber ,@SendingCurrency ,@TransactionWithAndWithoutFee ," +
                                                                        "@ResponsiblePerson,@SearchByStatus ,@MFCode ,@PageNum,@PageSize,@IsBusiness ",
                new SqlParameter("@TransactionServiceType", searchParam.TransactionServiceType),
                new SqlParameter("@senderId", searchParam.senderId),
                new SqlParameter("@SendingCountry", searchParam.SendingCountry),
                new SqlParameter("@ReceivingCountry", searchParam.ReceivingCountry),
                new SqlParameter("@SenderName", searchParam.SenderName),
                new SqlParameter("@SenderEmail", searchParam.SenderEmail),
                new SqlParameter("@DateRange", searchParam.DateRange),
                new SqlParameter("@FromDate", searchParam.FromDate),
                new SqlParameter("@ToDate", searchParam.ToDate),
                new SqlParameter("@ReceiverName", searchParam.ReceiverName),
                new SqlParameter("@searchString", searchParam.searchString),
                new SqlParameter("@Status", searchParam.Status),
                new SqlParameter("@PhoneNumber", searchParam.PhoneNumber),
                new SqlParameter("@SendingCurrency", searchParam.SendingCurrency),
                new SqlParameter("@TransactionWithAndWithoutFee", searchParam.TransactionWithAndWithoutFee),
                new SqlParameter("@ResponsiblePerson", searchParam.ResponsiblePerson),
                new SqlParameter("@SearchByStatus", searchParam.SearchByStatus),
                new SqlParameter("@MFCode", searchParam.MFCode),
                new SqlParameter("@PageNum", searchParam.PageNum),
                new SqlParameter("@PageSize", searchParam.PageSize),
                new SqlParameter("@IsBusiness", searchParam.IsBusiness)
                ).ToList();
        }
        public virtual List<DailyTransactionStatementListVm> Sp_GetTransactionStatementOfAgent(Areas.Admin.ViewModels.SearchParamViewModels.SenderTransactionSearchParamVm searchParam)
        {
            return this.Database.SqlQuery<DailyTransactionStatementListVm>("EXEC SP_GETRECENTTRANSACTIONOFAGENT @SendingCountry," +
                "@ReceivingCountry, @FromDate , @ToDate ,@Status ,@PayingStaffId ,@SenderName," +
                "@ReceiverName,@ReceiptNo,@PageNum,@PageSize",
                new SqlParameter("@SendingCountry", searchParam.SendingCountry),
                new SqlParameter("@ReceivingCountry", searchParam.ReceivingCountry),
                new SqlParameter("@FromDate", searchParam.FromDate),
                new SqlParameter("@ToDate", searchParam.ToDate),
                new SqlParameter("@Status", searchParam.Status),
                new SqlParameter("@PayingStaffId", searchParam.senderId),
                new SqlParameter("@SenderName", searchParam.SenderName),
                new SqlParameter("@ReceiverName", searchParam.ReceiverName),
                new SqlParameter("@ReceiptNo", searchParam.searchString),
                new SqlParameter("@PageNum", searchParam.PageNum),
                new SqlParameter("@PageSize", searchParam.PageSize)
                ).ToList();
        }

        #endregion
        /// Author Umesh
        #region Context 
        public virtual DbSet<Context> Context { get; set; }
        public object SectionIds { get; private set; }
        #endregion
    }

    public class Sp_GetBankDepositReceiptNo_result
    {

        public string ReceiptNo { get; set; }

    }
    public class SP_GetBankAccountDepositStatement_result
    {
        public int Id { get; set; }
        public string ReceiverName { get; set; }
        public string SenderName { get; set; }

        public string SenderTelephoneNo { get; set; }
        public string FaxerAccountNo { get; set; }
        public string SenderCountryName { get; set; }
        public string FaxerCountry { get; set; }
        public string FaxerAddress { get; set; }
        public string Date { get; set; }
        public DateTime TransactionDate { get; set; }
        public string AccountNumber { get; set; }
        public string TransactionIdentifier { get; set; }
        int _bankId;
        public int BankId
        {
            get { return _bankId; }
            set
            {
                _bankId = value;
            }
        }

    }
}
