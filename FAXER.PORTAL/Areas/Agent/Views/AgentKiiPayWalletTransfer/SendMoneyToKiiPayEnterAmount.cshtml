@model FAXER.PORTAL.Areas.Agent.Models.SendMoneyToKiiPayEnterAmountViewModel
@{
    ViewBag.Title = "SendMoneyToKiiPayEnterAmount";
    Layout = "~/Areas/Agent/Views/Shared/_New_Agent_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(x => x.Fee)
    @Html.HiddenFor(x => x.ExchangeRate)
    @Html.HiddenFor(x => x.TotalAmount)
    @Html.HiddenFor(model => model.WalletName)
    @Html.HiddenFor(model => model.SendingCurrency)
    @Html.HiddenFor(model => model.ReceivingCurrency)
    @Html.HiddenFor(model => model.Currency)
    @Html.HiddenFor(model => model.SendingCurrencySymbol)
    @Html.HiddenFor(model => model.ReceivingCurrencySymbol)
    @Html.HiddenFor(model => model.AgentCommission)

    <!--  -->
    <div class="real_form pattern2 pdt40 ">
        <div class="container">

            <div class="row">

                <div class="col-lg-6 col-lg-offset-3 col-md-6 col-md-offset-3 ">
                    <div class="login_signup mb50 clearfix text-center">
                        @Html.ValidationMessage("Insufficientfund", "", new { @class = "text-danger" })

                        @*<div class="flex-container amount-group flex-middle">
                                <div>
                                    <div class="userimage  ">
                                        <img src="~/Content/Images/user.svg" alt="">
                                    </div>
                                </div>
                                <div>
                                    <span class="font-30 text-primary">@Model.WalletName</span>
                                </div>
                            </div>*@

                        @*<div class="amount-group mb5  row ">

                                <div class="col-lg-5">
                                    <label>Sending Amount</label>
                                    @Html.TextBoxFor(model => model.SendingAmount, new { @class = "amount", type = "number", placeholder = Model.SendingCurrencySymbol + "0.00", @id = "SendingAmount", @onKeyUp = "GetPaymentSummary(false)", @step = ".01" })

                                    <div class="gbpusd">
                                        @Model.SendingCurrency
                                    </div>
                                    <div class="clearfix"></div>
                                    @Html.ValidationMessageFor(model => model.SendingAmount, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-lg-2">
                                    <span class="text-primary font-20">OR</span>
                                </div>
                                <div class="col-lg-5">
                                    <label>Receiving Amount</label>
                                    @Html.TextBoxFor(model => model.ReceivingAmount, new { @class = "amount", type = "number", placeholder = Model.ReceivingCurrencySymbol + "0.00", @id = "ReceivingAmount", @onKeyUp = "GetPaymentSummary(true)", @step = ".01" })

                                    <div class="gbpusd">
                                        @Model.ReceivingCurrency
                                    </div>
                                    <div class="clearfix"></div>
                                    @Html.ValidationMessageFor(model => model.ReceivingAmount, "", new { @class = "text-danger" })
                                </div>
                            </div>*@


                        <div class="pinside20">

                            <div class="exchange-rate-wraper-new">
                                <h2>
                                    1&nbsp;<span data-outbound-currency="GBP" name="SendingCurrencyCode"></span>&nbsp;=&nbsp;<span name="ExchangeRate"></span>&nbsp;<span class="exchange-rate" data-inbound-currency="GHS" name="ReceivingCurrency"></span>
                                </h2>
                            </div>

                        </div>


                        <div class="pinside20">

                            <!--  -->
                            <div class="mf-form-calculator">
                                <span class="mf-calculator-label">You send  </span>
                                <input type="number" id="SendingAmount" class="primary-placeholder" required placeholder="0.00" name="SendingAmount" onkeyup="GetPaymentSummary(false)" step="any">
                                <div class="mf-currency text-right dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="true">
                                    <span class="mf-currency-select" data-currency="GBP" id="sendingCountry">GBP&nbsp;&nbsp; from United Kingdom</span>
                                    <div class="arrow-wrapper"><span class="select-arrow"></span></div>
                                </div>
                                <!--  -->
                                <!--  -->


                            </div>
                            <!--  -->
                            <!--  -->
                            <div class="mf-form-calculator">
                                <span class="mf-calculator-label">They receive</span>
                                <input type="number" class=" primary-placeholder" id="ReceivingAmount" placeholder="0.00" name="ReceivingAmount" onkeyup="GetPaymentSummary(true)" step="any">


                                <div class="mf-currency text-right dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="true">
                                    <span class="mf-currency-select" data-currency="GBP" id="ReceivingCountry">NGN &nbsp;&nbsp;Nigeria</span>
                                    <div class="arrow-wrapper"><span class="select-arrow"></span></div>
                                </div>
                                <!--  -->


                                <div class="currency-dropdown dropdown-menu" aria-labelledby=" dropdown-toggle" id="receivingCountryList">
                                    <ul>
                                        <li class="currency-dropdown_option" id="GB" onclick="OnReceivingCountryChange('GB')">
                                            <div class="currency-dropdown_option_flag flag-icon   flag-icon-gb"></div>
                                            <span class="currency-dropdown_option_text">GBP&nbsp;&nbsp; United Kingdom</span>
                                        </li>

                                        <li class="currency-dropdown_option " id="NG" onclick="OnReceivingCountryChange('NG')">
                                            <div class="currency-dropdown_option_flag flag-icon flag-icon-ng "></div>
                                            <span class="currency-dropdown_option_text">NGN&nbsp;&nbsp; Nigeria</span>
                                        </li>

                                        <li class="currency-dropdown_option " id="CM" onclick="OnReceivingCountryChange('CM')">
                                            <div class="currency-dropdown_option_flag flag-icon flag-icon-cm "></div>
                                            <span class="currency-dropdown_option_text">XAF&nbsp;&nbsp; Cameroon</span>
                                        </li>
                                        <li class="currency-dropdown_option " id="GH" onclick="OnReceivingCountryChange('GH')">
                                            <div class="currency-dropdown_option_flag flag-icon flag-icon-gh "></div>
                                            <span class="currency-dropdown_option_text">GHS&nbsp;&nbsp; Ghana</span>
                                        </li>

                                    </ul>
                                </div>
                                <!--  -->
                            </div>
                            <!--  -->

                        </div>



                        <div class="pinside20">

                            <div class="estimate-calculator" style="">
                                <div class="wrapper">

                                    <dl>
                                        <dt>Fee</dt>
                                        <dd class="fee" id="Fee" data-outbound-currency="USD"><span name="SendingCurrencySymbol"> @Model.SendingCurrencySymbol</span><span name="Fee">@Model.Fee</span></dd>
                                    </dl>
                                    <dl>
                                        <dt>You pay</dt>
                                        <dd class="fee" data-outbound-currency="USD" id="TotalAmount"> <span name="SendingCurrencySymbol">@Model.SendingCurrencySymbol </span><span name="TotalAmount">@Model.TotalAmount</span></dd>
                                    </dl>
                                    <dl>
                                        <dt>They receive</dt>
                                        <dd class="fee" data-outbound-currency="USD"> <span name="ReceivingAmount">@Model.ReceivingAmount</span> <span name="ReceivingCurrency">@Model.ReceivingCurrency </span></dd>
                                    </dl>
                                    <div class="clearfix">

                                    </div>
                                </div>

                            </div>
                        </div>

                        <div class="clearfix"></div>
                        <div class="pinside20">
                            <div class="estimate-calculator">
                                <div class="wrapper">
                                    <dl>
                                        <dt>Agent Commission for this transaction</dt>
                                        <dd class="fee text-secondary" data-outbound-currency="USD">@Model.SendingCurrencySymbol <span name="AgentCommission">@Model.AgentCommission</span></dd>


                                    </dl>

                                    <div class="clearfix"></div>
                                </div>
                            </div>
                        </div>

                        @*<div class="exchange-rate-holder">
                                Exchange rate
                                <span data-outbound-currency="GBP"><span name="SendingCurrencyCode">@Model.Currency </span>1</span> = <span class="exchange-rate" data-inbound-currency="GHS"><span name="ReceivingCurrency">@Model.ReceivingCurrency</span> <span name="ExchangeRate"> @Model.ExchangeRate</span></span>
                            </div>*@

                        <div class="amount-group  mb30">
                            @Html.TextBoxFor(model => model.PaymentReference, new { @class = "reference", placeholder = "Enter Payment Reference " })
                            @Html.ValidationMessageFor(model => model.PaymentReference, "", new { @class = "text-danger" })


                        </div>

                        <div class="form-group text-left">
                            <label>@Html.CheckBoxFor(model => model.IsConfirm) I confirm that the information required to transfer money into this wallet account has been fully verified by myself</label>
                            @Html.ValidationMessage("IsConfirm", "", new { @class = "text-danger" })
                        </div>

                        <div class="clearfix"></div>

                        <div class="text-center   clearfix">
                            <hr>

                            <button type="submit" class="btn btn-primary btn-lg  mb30 " id="submit">Send This Amount <i class="fa fa-chevron-right" aria-hidden="true"></i></button>
                            <!-- back btn -->
                            <div class="clearfix ">

                                <center>
                                    <a href="@Url.Action("SendMoneToKiiPayWallet","AgentKiiPayWalletTransfer")" class=" "><i class="fa fa-chevron-left" aria-hidden="true"></i> Go Back </a>
                                </center>
                            </div>
                            <!-- back btn end-->
                        </div>
                    </div>

                    <!--  -->

                </div>

            </div>
        </div>
    </div>
}
@if (ViewBag.AgentResult.Status == FAXER.PORTAL.Common.ResultStatus.Warning)
{
    <div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="onload" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">×</button>
                    <h4 class="modal-title">MoneyFex Service-Alert</h4>
                </div>
                <div class="modal-body">

                    <div class="row">
                        <div class="col-lg-3">
                            <div class="icon_al">
                                <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>
                            </div>
                        </div>
                        <div class="col-lg-9">
                            <h4>@ViewBag.AgentResult.Message</h4>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal">Close alert window</button>

                </div>
            </div>
        </div>
    </div>
}
@section Scripts{

    <script type="text/javascript">



        //$("#submit").click(function () {

        //    $("#loader").show();
        //    $("form").submit();
        //})

          $("#SendingAmount").val('@Model.SendingAmount');

        var selectedSendingCountry = "";
        var selectedReceivingCountry = "";
        var SendingCountry = "";
        var ReceivingCountry = "NG";

        GetPaymentSummary(false);
        function OnReceivingCountryChange(val) {
            $("#ReceivingCountry").text($($(event.currentTarget).find('span')[0]).text());
            selectedReceivingCountry = val;
            $("#SendingAmount").val(1);
            SendingCountry = selectedSendingCountry;
            ReceivingCountry = selectedReceivingCountry;
            GetPaymentSummary(false);
        }
            function OnSendingCountryChange(val) {
            $("#sendingCountry").text($($(event.currentTarget).find('span')[0]).text());
            selectedSendingCountry = val;
            $("#SendingAmount").val(1);
                SendingCountry = selectedSendingCountry;
                ReceivingCountry = selectedReceivingCountry;
                GetPaymentSummary(false);
        }
        function GetPaymentSummary(IsReceivingAmount) {
            debugger;
            var SendingAmount = $("#SendingAmount").val();
            var ReceivingAmount = $("#ReceivingAmount").val();

            if (SendingAmount == "") {

                SendingAmount = 0;
            }
            if (ReceivingAmount == "") {

                ReceivingAmount = 0;
            }
            //GetPaymentSummary
            $.getJSON("/Agent/AgentKiiPayWalletTransfer/GetPaymentSummary?SendingAmount=" + SendingAmount
                + "&ReceivingAmount=" + ReceivingAmount + "&IsReceivingAmount=" + IsReceivingAmount + "&receiverCountry=" + ReceivingCountry, function (result) {

                    for (var item in result) {

                        var selector = '[name="' + item + '"]';
                        $(selector).val(result[item]);
                        $(selector).text(result[item]);
                    }


                })
        }


        $("#SendingAmount").focus(function () {

            if ($("#SendingAmount").val() <= 1) {

                $("#SendingAmount").val("");
                $("#ReceivingAmount").val("");
            }


        })

        $("#ReceivingAmount").focus(function () {

            if ($("#SendingAmount").val() <= 1) {

                $("#SendingAmount").val("");
                $("#ReceivingAmount").val("");
            }

        })

    </script>
}
