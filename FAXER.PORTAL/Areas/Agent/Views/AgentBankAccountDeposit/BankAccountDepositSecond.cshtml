@model FAXER.PORTAL.Models.SenderBankAccountDepositVm


@{
    /**/

    ViewBag.Title = "Index";
    Layout = "/Areas/Agent/Views/Shared/_New_Agent_Layout.cshtml";
}


@using (Html.BeginForm())
{
    <div class="real_form pattern2 pdt40 ">
        <div class="container">

            <div class="row">

                <div class="col-lg-6 col-lg-offset-3 col-md-6 col-md-offset-3 ">


                    <div class="login_signup mb50 clearfix text-center">
                        <h3>Bank Account Deposit</h3>
                        <hr>
                        @Html.ValidationMessage("", "", new { @class = "text-danger" })
                        @Html.HiddenFor(x => x.CountryCode)
                        <div class="form-group mb30" style="display:none">

                            @Html.DropDownListFor(model => model.CountryCode, (IEnumerable<SelectListItem>)ViewBag.Countries, "Select Country", new { @class = "form-blue", id = "CountryCode", @onchange = "GetBanks()" })
                            @Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group mb30">

                            @Html.DropDownListFor(model => model.RecentAccountNumber, (IEnumerable<SelectListItem>)ViewBag.RecentAccountNumbers, "Select Recent Account No.", new { @class = "form-blue", @id = "recentAccountNumber", onchange = "GetBanks()" })
                            @Html.ValidationMessageFor(model => model.RecentAccountNumber, "", new { @class = "text-danger" })

                        </div>


                        @*<div class="form-group mb20">
                                <h2 class="text-primary text-center">OR</h2>
                            </div>*@



                        <div class="form-group   mb20">
                            @Html.TextBoxFor(x => x.AccountOwnerName, new { @class = "form-blue", @placeholder = "Account owner Name", @maxlength = "21" })
                            @Html.ValidationMessageFor(model => model.AccountOwnerName, "", new { @class = "text-danger" })
                        </div>

                        @if (Model.IsEuropeTransfer == true)
                        {

                            <div class="form-group contact-no-group mb20">
                                <div class="countr-code-lg">
                                    @ViewBag.CountryPhoneCode
                                    <span id="CountryPhoneCode"> </span>
                                </div>
                                @Html.TextBoxFor(x => x.MobileNumber, new { @class = "form-blue contact-no-lg", @placeholder = "Enter Mobile Number", @type = "number"})
                                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group   mb20">
                                @Html.TextBoxFor(x => x.BankName, new { @class = "form-blue", @placeholder = "Enter Bank Name" })
                                @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group   mb20">
                                @Html.TextBoxFor(x => x.BranchCode, new { @class = "form-blue", @placeholder = "Enter BIC/SWIFT" })
                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                @Html.ValidationMessage("BranchCode", "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group mb20">
                                @Html.TextBoxFor(x => x.AccountNumber, new { @class = "form-blue", @placeholder = "Enter IBAN" })
                                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })

                            </div>
                        }

                        else if (Model.IsWestAfricaTransfer == true)
                        {
                            <div class="form-group contact-no-group mb20">
                                <div class="countr-code-lg">
                                    @ViewBag.CountryPhoneCode
                                    <span id="CountryPhoneCode"> </span>
                                </div>
                                @Html.TextBoxFor(x => x.MobileNumber, new { @class = "form-blue contact-no-lg", @placeholder = "Enter Mobile Number", @type = "number"})
                                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group mb30" id="dropdown">
                                @Html.DropDownListFor(model => model.BankId, (IEnumerable<SelectListItem>)ViewBag.BankNames, "Select Bank Name", new { @class = "form-blue", @id = "BankId", @data_show_subtext = "true", @data_live_search = "true", onchange = "GetBankCode()" })
                                @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group mb20">
                                @Html.TextBoxFor(x => x.AccountNumber, new { @class = "form-blue", @placeholder = "Enter IBAN" })
                                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })

                            </div>
                        }
                        else if (Model.IsSouthAfricaTransfer == true)
                        {

                            <div class="form-group contact-no-group mb20">
                                <div class="countr-code-lg">
                                    @ViewBag.CountryPhoneCode
                                    <span id="CountryPhoneCode"> </span>
                                </div>
                                @Html.TextBoxFor(x => x.MobileNumber, new { @class = "form-blue contact-no-lg", @placeholder = "Enter Mobile Number", @type = "number"})
                                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group mb30">

                                @Html.TextBoxFor(x => x.ReceiverStreet, new { @class = "form-blue", @placeholder = "Enter Address" })
                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group mb30">

                                @Html.TextBoxFor(x => x.ReceiverPostalCode, new { @class = "form-blue", @placeholder = "Enter Postcode" })
                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group mb30">

                                @Html.TextBoxFor(x => x.ReceiverCity, new { @class = "form-blue", @placeholder = "Enter City" })
                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group mb30">
                                @Html.TextBoxFor(x => x.ReceiverEmail, new { @class = "form-blue", @placeholder = "Enter Email Address" })
                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group mb20">
                                @Html.TextBoxFor(x => x.AccountNumber, new { @class = "form-blue", @placeholder = "Enter Account Number" })
                                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group mb30" id="dropdown">
                                @Html.DropDownListFor(model => model.BankId, (IEnumerable<SelectListItem>)ViewBag.BankNames, "Select Bank Name", new { @class = "form-blue selectpicker", @id = "BankId", @data_show_subtext = "true", @data_live_search = "true", onchange = "GetBankCode()" })
                                @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group mb30">
                                @Html.HiddenFor(x => x.BranchCode, new { @class = "form-blue", @placeholder = "Enter code", @readonly = true, @style = "display:none" })
                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                @*<p style="font-size:15px"><i> Bank code / branch code / sort code / routing number etc</i> </p>*@
                            </div>
                        }
                        else
                        {

                            <div class="form-group mb20">
                                @Html.TextBoxFor(x => x.AccountNumber, new { @class = "form-blue", @placeholder = "Enter Account Number", @maxlength = "10" })
                                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })


                            </div>

                            <div class="form-group mb30" id="dropdown">
                                @Html.DropDownListFor(model => model.BankId, (IEnumerable<SelectListItem>)ViewBag.BankNames, "Select Bank Name", new { @class = "form-blue selectpicker", @id = "BankId", @data_show_subtext = "true", @data_live_search = "true", onchange = "GetBankCode()" })
                                @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })

                            </div>

                            if (Model.CountryCode == "GH")
                            {
                                <div class="form-group mb30">

                                    @*<select name="BranchCode" id="BranchCode" class="form-blue">
                                            <option value=""> Select Branch</option>
                                        </select>*@
                                    @Html.DropDownListFor(model => model.BranchCode, (IEnumerable<SelectListItem>)ViewBag.Branches, "Select Branch", new { @class = "form-blue" })
                                    @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                    @Html.ValidationMessage("BranchCode", "", new { @class = "text-danger" })
                                </div>
                            }
                            else if (Model.CountryCode == "NG")
                            { <div class="form-group mb30">
                                    @Html.HiddenFor(x => x.BranchCode, new { @class = "form-blue", @placeholder = "Enter code", @readonly = true, @style = "display:none" })
                                    @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                    @*<p style="font-size:15px"><i> Bank code / branch code / sort code / routing number etc</i> </p>*@
                                </div>
                            }
                            else
                            {

                                <div class="form-group   mb20">
                                    @Html.TextBoxFor(x => x.BranchCode, new { @class = "form-blue", name = "BranchCode", @placeholder = "Branch Code" })
                                    @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                    @Html.ValidationMessage("BranchCode", "", new { @class = "text-danger" })

                                </div>
                            }
                        }
                        <div class="form-group   mb20">
                            @Html.EnumDropDownListFor(x => x.ReasonForTransfer, new { @class = "form-blue" })
                            @Html.ValidationMessageFor(model => model.ReasonForTransfer, "", new { @class = "text-danger" })
                        </div>

                        @Html.ValidationMessage("InvalidBankAccount", "", new { @class = "text-danger" })
                        @Html.ValidationMessage("ServiceNotAvialable", "", new { @class = "text-danger" })
                    </div>
                    <div class="clearfix"></div>


                    <div class="text-center   clearfix">
                        <hr>

                        <button type="submit" class="btn btn-primary btn-lg" id="submit">Continue <i class="fa fa-chevron-right" aria-hidden="true"></i></button>
                        <div class="clearfix mb30"> </div>
                        <a href="@Url.Action("BankDepositAbroadEnterAmount","AgentBankAccountDeposit")" class=" "><i class="fa fa-chevron-left" aria-hidden="true"></i> Go Back </a>
                    </div>
                </div>

                <!--  -->

            </div>

        </div>
    </div>

}
<!--  -->


@section Scripts{

    <script type="text/javascript">

        $("#submit").click(function () {
            $("#loader").show();
            $("form").submit();
        })
        function GetBanks() {
            $("#loader").show();
            var countryCode = $("#CountryCode").val();

            var accountNo = $("#recentAccountNumber").val();
            window.location.href = "/Agent/AgentBankAccountDeposit/BankAccountDepositSecond?RecentAcccountNo=" + accountNo;
        }

        //function GetBankCode() {

        //    var bankId = $("#BankId").val();
        //    $.getJSON("/SenderBankAccountDeposit/GetBankCode?bankId=" + bankId, function (result) {

        //        for (var item in result) {

        //            var selector = '[name="' + item + '"]';
        //            $(selector).val(result[item]);
        //            $(selector).text(result[item]);
        //        }

        //    })



        function GetBankCode() {

            var bankId = $("#BankId").val();
            $.getJSON("/SenderBankAccountDeposit/GetBankCode?bankId=" + bankId, function (result) {

                debugger;
                for (var item in result) {

                    var selector = '[name="' + item + '"]';
                    $(selector).val(result[item]);
                    $(selector).text(result[item]);
                }

                if (result.Branches != null) {

                    $("#BranchCode option").remove();
                    $("#BranchCode").append('<option value="">Select Branch</option>');

                    for (var item in result.Branches) {
                        debugger
                        $("#BranchCode ").append('<option value="' + result.Branches[item].Code + '">' + result.Branches[item].Name + '</option>');
                    }

                }
            })

        }


    </script>
}
