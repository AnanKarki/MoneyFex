@model FAXER.PORTAL.Areas.Admin.ViewModels.TransferFeePercentageViewModel

@{
    ViewBag.Title = "SetAUXExchangeFeeForAux";
    Layout = "~/Areas/Admin/Views/Shared/New_Layout.cshtml";
}


@using (Html.BeginForm())
{
    <div class="pcoded-content">
        <div class="pcoded-inner-content">

            <div class="main-body">
                <div class="page-wrapper">

                    <div class="page-body">
                        <div class="row">

                            <div class="col-sm-12">

                                <div class="card">

                                    <div class="card-header border-bottom">
                                        <h4 class="f-left f-left m-t-5 m-b-0">Set Transfer Fee  </h4>
                                        <a href="@Url.Action("Index", "AUXAgentExchangeFee")" class=" btn btn-primary f-right btn-round">
                                            <i class="icofont icofont-eye m-r-5"></i> View Transfer Fee
                                        </a>
                                    </div>

                                    <div class="card-body">

                                        @Html.HiddenFor(x => x.Id)
                                        @Html.HiddenFor(x => x.TransferType)
                                        @Html.HiddenFor(x => x.TransfeFeeByCurrencyId)
                                        <form action="set-commission_submit" method="get" accept-charset="utf-8">
                                            <div class="row">
                                                <div class="col-lg-4  col-sm-12 col-xs-12 offset-lg-4">
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Sending Currency</label>

                                                        @Html.DropDownListFor(x => x.SendingCurrency, (IEnumerable<SelectListItem>)ViewBag.sendingCurrency, "Select Sending Currency", new { @class = "form-control  form-control-lg form-control-round form-control-bold", @id = "SendingCurrency", @onchange = "GetSendingCountryByCurrency()" })
                                                        @Html.ValidationMessageFor(x => x.SendingCurrency, "", new { @class = "text-danger" })


                                                    </div>
                                                    <div class="form-group">
                                                        <label>Sending Country</label>

                                                        @Html.DropDownListFor(x => x.SendingCountry, (IEnumerable<SelectListItem>)ViewBag.SendingCountries, "Select Sending Country", new { @class = "form-control  form-control-lg form-control-round form-control-bold", @id = "SendingCountry", @onchange = "GetAgentByCountry()" })
                                                        @Html.ValidationMessageFor(x => x.SendingCountry, "", new { @class = "text-danger" })


                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Receiving Country</label>

                                                        @Html.DropDownListFor(x => x.ReceivingCurrency, (IEnumerable<SelectListItem>)ViewBag.ReceivingCurrency, "Select Receiving Currency", new { @class = "form-control form-control-lg form-control-round form-control-bold", @id = "ReceivingCurrency", @onchange = "GetReceivingCountryByCurrency();" })
                                                        @Html.ValidationMessageFor(x => x.ReceivingCurrency, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Receiving Country</label>

                                                        @Html.DropDownListFor(x => x.ReceivingCountry, (IEnumerable<SelectListItem>)ViewBag.ReceivingCountries, "Select Receiving Country", new { @class = "form-control form-control-lg form-control-round form-control-bold", @id = "ReceivingCountry" })
                                                        @Html.ValidationMessageFor(x => x.ReceivingCountry, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Method</label>
                                                        @Html.EnumDropDownListFor(x => x.TransferMethod, new { @class = "form-control form-control-lg form-control-round form-control-bold", @id = "TransferMethod" })
                                                        @Html.ValidationMessageFor(x => x.TransferMethod, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->
                                                    <div class="form-group" id="AgentDiv">
                                                        <label>Agent</label>
                                                        @Html.DropDownListFor(x => x.AgentId, (IEnumerable<SelectListItem>)ViewBag.Agent, "All", new { @class = "form-control  form-control-lg form-control-round form-control-bold", @id = "AgentId" })

                                                    </div>

                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Range</label>
                                                        <select class="form-control form-control-lg form-control-round form-control-bold" name="RangeName" id="RangeName">
                                                            <option value="">Select Range</option>
                                                            <option>1-100</option>
                                                            <option>101-500</option>
                                                            <option>501-1000</option>
                                                            <option>1001-1500</option>
                                                            <option>1501-2000</option>
                                                            <option>2001-3000</option>
                                                            <option>3001-5000</option>
                                                            <option>5001-10000</option>
                                                            <option>11000+</option>
                                                        </select>
                                                        @Html.ValidationMessage("Range", "", new { @class = "text-danger" })

                                                    </div>
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Other</label>
                                                        @Html.TextBoxFor(x => x.OtherRange, new { @class = "form-control  form-control-lg form-control-round", @placeholder = "Enter Range", @id = "OtherRange" })
                                                        @Html.ValidationMessageFor(x => x.OtherRange, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Fee Type</label>
                                                        @Html.EnumDropDownListFor(x => x.FeeType, new { @class = "form-control form-control-lg form-control-round form-control-bold", @id = "FeeType", @onchange = "getPreviousRate();" })
                                                        @Html.ValidationMessageFor(x => x.FeeType, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Transfer Fee</label>
                                                        @Html.TextBoxFor(x => x.Fee, new { @class = "form-control  form-control-lg form-control-round autonumber", @id = "Fee", @placeholder = "Enter Transfer Fee" })
                                                        @Html.ValidationMessageFor(x => x.Fee, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->

                                                </div>

                                            </div>

                                        </form>
                                    </div>

                                    <div class="card-footer bg-light">
                                        <div class="row">
                                            <div class="col-lg-4  col-sm-12 col-xs-12 offset-lg-4">
                                                <a href="@Url.Action("Index","AUXAgentExchangeFee")" class="btn btn-danger btn-round pull-left"><i class="fa fa-remove"></i> Cancel</a>

                                                <button type="submit" class="btn btn-primary btn-round pull-right"><i class="fa fa-save"></i> Save</button>

                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>
}

@section scripts
{
    <script type="text/javascript">
         $("#SendingCurrency").val('@ViewBag.SelectedSendingCurrency');
        $("#ReceivingCurrency").val('@ViewBag.SelectedReceivingCurrency');
    

        function GetSendingCountryByCurrency() {
            var Currency = $("#SendingCurrency").val();

            $.getJSON("/Admin/AdminCommon/GetCountryByCurrency?currency=" + Currency, function (result) {

                var countrySelector = $("#SendingCountry");
                $("#SendingCountry option").remove();
                countrySelector.append('<option value="All">All </option>');

                for (var i = 0; i <= result.Data.length; i++) {

                    countrySelector.append('<option value="' + result.Data[i].Code + '">' + result.Data[i].Name + '</option>');
                }

            })
            GetAgentByCountry();
        }

        function GetReceivingCountryByCurrency() {
            var Currency = $("#ReceivingCurrency").val();
            $.getJSON("/Admin/AdminCommon/GetCountryByCurrency?currency=" + Currency, function (result) {
                var countrySelector = $("#ReceivingCountry");
                $("#ReceivingCountry option").remove();
                countrySelector.append('<option value="All">All </option>');

                for (var i = 0; i <= result.Data.length; i++) {
                    countrySelector.append('<option value="' + result.Data[i].Code + '">' + result.Data[i].Name + '</option>');
                }

            })
        }


        function GetAgentByCountry() {
            sendingCountry = $("#SendingCountry").val();
            $.getJSON("/Admin/TransferExchangeRate/GetAgentByCountry?Country=" + sendingCountry, function (result) {
                var agentselector = $("#AgentId");
                $("#AgentId option").remove();
                agentselector.append('<option value="0">All </option>');

                for (var i = 0; i <= result.Data.length; i++) {

                    agentselector.append('<option value="' + result.Data[i].AgentId + '">' + result.Data[i].AgentName + '</option>');
                }
            })
            search();
        }

        search();
        function search() {
            var data = {
                id: $("#AgentId"),
                country: $("#SendingCountry").val(),
                Currecny: $("#SendingCurrency").val(),
                isBusiness: false,
                isAuxAgent: true,
                url: '/Admin/AdminCommon/GetAgents',
                identifier: "AgentId",
                placeholder: "All"
            }
            SelectSearch(data);
        }

        $("#RangeName").val('@Model.RangeName');
        function getPreviousRate() {

            var sendingCurrency = $("#SendingCurrency").val();
            var SendingCountry = $("#SendingCountry").val();
            var ReceivingCurrency = $("#ReceivingCurrency").val();
            var ReceivingCountry = $("#ReceivingCountry").val();
            var TransferMethod = $("#TransferMethod").val();
            var Range = $("#RangeName").val();
            var AgentId = $("#AgentId").val();
            var Feetype = $("#FeeType").val();
            $.getJSON("/Admin/AUXAgentExchangeFee/GetPreviousRate?sendingCurrency=" + sendingCurrency +
                "&ReceivingCurrency=" + ReceivingCurrency +
                "&SendingCountry=" + SendingCountry +
                "&ReceivingCountry=" + ReceivingCountry +
                "&TransferMethod=" + TransferMethod +
                "&Range=" + Range+
                "&AgentId=" + AgentId+
                "&Feetype=" + Feetype
                , function (result) {

                    for (var item in result) {
                        var selector = '[name="' + item + '"]';
                        $(selector).val(result[item]);
                    }
                })

        }


    </script>
}
