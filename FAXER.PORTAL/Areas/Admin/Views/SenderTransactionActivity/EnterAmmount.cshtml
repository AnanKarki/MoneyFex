@model FAXER.PORTAL.Areas.Agent.Models.CashPickUpEnterAmountViewModel
@{
    ViewBag.Title = "EnterAmmount";
    Layout = "~/Areas/Admin/Views/Shared/New_Layout.cshtml";

}
@using (Html.BeginForm())
{

    @Html.HiddenFor(x => x.Fee)
    @Html.HiddenFor(x => x.ExchangeRate)
    @Html.HiddenFor(x => x.TotalAmount)

    @Html.HiddenFor(model => model.SendingCountry)
    @Html.HiddenFor(model => model.ReceivingCountry)
    @Html.HiddenFor(model => model.SendingCurrencyCode)
    @Html.HiddenFor(model => model.ReceivingCurrencyCode)

    @Html.HiddenFor(model => model.SendingCurrencySymbol)
    @Html.HiddenFor(model => model.ReceivingCurrencySymbol)
    @Html.HiddenFor(model => model.AgentCommission)

    <div class="pcoded-content">
        <div class="pcoded-inner-content">

            <div class="main-body">
                <div class="page-wrapper">

                    <div class="page-body">
                        <div class="row">

                            <div class="col-sm-12">

                                <div class="card">

                                    <div class="card-header border-bottom">
                                        <h4 class="f-left f-left m-t-5 m-b-0">Sender <label class="text-primary">@ViewBag.SenderName</label> <span>Account Number: @ViewBag.SenderAccountNo<br>Country:@ViewBag.SenderCountry</span></h4>
                                        <a href="@Url.Action("CreateNewbankDeposit","SenderTransactionActivity")" class=" btn btn-primary f-right btn-round">
                                            <i class="fa fa-angle-left m-r-5"></i> Back
                                        </a>
                                    </div>

                                    <div class="card-body p-t-30 b-b-30">

                                        <div class="row">
                                            <div class="col-lg-6  col-sm-12 col-xs-12 offset-lg-3">
                                                <div class="d-flex align-items-center amount-group  m-b-25">
                                                    <div>
                                                        <div class="userimage  ">
                                                            <img src="assets/images/user.svg" alt="">
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <h2 class="text-primary"> @ViewBag.ReceiverName</h2>
                                                    </div>
                                                </div>

                                                <div class="amount-group mb5  row  text-center">

                                                    <div class="col-lg-5">
                                                        <label class="text-bold">Sending Amount</label>

                                                        <input type="number" id="SendingAmount" class="amount" required placeholder="0.00" name="SendingAmount" onkeyup="GetPaymentSummary(false)" step=".03">
                                                        @*@Html.TextBoxFor(model => model.SendingAmount, new { @class = "amount", type = "number", placeholder = Model.SendingCurrencySymbol + "0.00", @id = "SendingAmount", @onKeyUp = "GetPaymentSummary(false)" })*@

                                                        <div class="gbpusd">
                                                            @Model.SendingCurrencyCode

                                                        </div> <div class="clearfix"></div>
                                                        @Html.ValidationMessageFor(model => model.SendingAmount, "", new { @class = "text-danger" })

                                                    </div>
                                                    <div class="col-lg-2">
                                                        <span class="text-primary font-20">OR</span>
                                                    </div>
                                                    <div class="col-lg-5">
                                                        <label class="text-bold">Receiving Amount</label>
                                                        <input type="number" class=" amount" id="ReceivingAmount" placeholder="0.00" name="ReceivingAmount" onkeyup="GetPaymentSummary(true)" >

                                                        @*@Html.TextBoxFor(model => model.ReceivingAmount, new { @class = "amount", type = "number", placeholder = Model.ReceivingCurrencySymbol + "0.00", @id = "ReceivingAmount", @onKeyUp = "GetPaymentSummary(true)" })*@

                                                        <div class="gbpusd">
                                                            @Model.ReceivingCurrencyCode
                                                        </div>
                                                        <div class="clearfix"></div>
                                                        @Html.ValidationMessageFor(model => model.ReceivingAmount, "", new { @class = "text-danger" })

                                                    </div>
                                                </div>

                                                <div class="m-t-20">

                                                    <div class="estimate-calculator" style="">
                                                        <div class="wrapper">

                                                            <dl>
                                                                <dt>Fee</dt>
                                                                <dd class="fee" data-outbound-currency="USD"><span name="SendingCurrencySymbol"> @Model.SendingCurrencySymbol</span><span name="Fee">@Model.Fee</span></dd>
                                                            </dl>
                                                            <dl>
                                                                <dt>You pay</dt>
                                                                <dd class="fee" data-outbound-currency="USD" id="TotalAmount"> <span name="SendingCurrencySymbol">@Model.SendingCurrencySymbol </span><span name="TotalAmount">@Model.TotalAmount</span></dd>
                                                            </dl>
                                                            <dl>
                                                                <dt>They receive</dt>
                                                                <dd class="fee" data-outbound-currency="USD"> <span name="ReceivingAmount">@Model.ReceivingAmount</span> <span name="ReceivingCurrency">@Model.ReceivingCurrencyCode</span></dd>
                                                            </dl>
                                                            <div class="clearfix">

                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="exchange-rate-holder">
                                                        Exchange rate
                                                        @*<span data-outbound-currency="GBP">GBP 1</span> = <span class="exchange-rate" data-inbound-currency="GHS">GHS 6.9994</span>*@
                                                        1&nbsp;<span data-outbound-currency="GBP" name="SendingCurrencyCode">@Model.SendingCurrencyCode</span>&nbsp;=&nbsp;<span name="ExchangeRate">@Model.ExchangeRate</span>&nbsp;<span class="exchange-rate" data-inbound-currency="GHS" name="ReceivingCurrency">@Model.ReceivingCurrencyCode</span>

                                                    </div>
                                                    <div>
                                                        <label>@Html.CheckBoxFor(model => model.InculdeFee, new { id = "InculdeFee", @onclick = "IncludeFeeOrExcludeFee();" }) Include Fee</label>
                                                    </div>
                                                    <!--  -->
                                                    <!--  -->

                                                </div>

                                            </div>

                                        </div>

                                    </div>

                                    <div class="card-footer bg-light p-40">
                                        <div class="row">
                                            <div class="col-lg-4  col-sm-12 col-xs-12 offset-lg-4">

                                                <a class="btn btn-lg btn-block btn-primary btn-round" id="btnSubmit"> Continue <i class="fa fa-angle-right"></i></a>

                                                <a href="@Url.Action("CreateNewbankDeposit","SenderTransactionActivity")" class="btn btn-lg  btn-block btn-link btn-round pull-left">
                                                    <i class="fa fa-angle-left m-r-5"></i> Back
                                                </a>

                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>
}


@section Scripts{

    <script type="text/javascript">


        $("#btnSubmit").click(function () {

            $("form")[0].submit()
        });
          $("#SendingAmount").val('@Model.SendingAmount');

         var SendingCountry = "@Model.SendingCountry";
         var ReceivingCountry = "@Model.ReceivingCountry";

        GetPaymentSummary(false);
        var IncludeFee = true;
        function IncludeFeeOrExcludeFee() {
            if (event.currentTarget.checked == true) {
                IncludeFee = true;
            }
            else {
                IncludeFee = false;
            }

            GetPaymentSummary(false);
        }

        function GetPaymentSummary(IsReceivingAmount) {

            debugger;
            var SendingAmount = $("#SendingAmount").val();
            var ReceivingAmount = $("#ReceivingAmount").val();
            var SendingCountry = "@Model.SendingCountry";
            var ReceivingCountry = "@Model.ReceivingCountry";
            var SendingCurrency = "@Model.SendingCurrencyCode";
            var ReceivingCurrency = "@Model.ReceivingCurrencyCode";

            if (SendingAmount == "") {

                SendingAmount = 0;
            }
            if (ReceivingAmount == "") {

                ReceivingAmount = 0;
            }

            var SendingAmount = $("#SendingAmount").val();
            var ReceivingAmount = $("#ReceivingAmount").val();
            var IsReceivingAmount = IsReceivingAmount;


            transferMethodvalue = @ViewBag.TransferMethod;



            var data = {

                SendingAmount: SendingAmount,
                ReceivingAmount: ReceivingAmount,
                SendingCurrency: SendingCurrency,
                ReceivingCurrency: ReceivingCurrency,
                SendingCountry: SendingCountry,
                ReceivingCountry: ReceivingCountry,
                IsReceivingAmount: IsReceivingAmount,
                TransferMethod: transferMethodvalue,
                SenderId: '@ViewBag.SenderId'
            };



            Riddha.ajax.post("/EstimationSummary/GetTransferSummary", data)
                .done(function (result) {

                    result = result.response;
                    for (var item in result) {

                        var selector = '[name="' + item + '"]';
                        $(selector).val(result[item]);
                        $(selector).text(result[item]);
                    }


                });


            //$.getJSON("/Admin/SenderTransactionActivity/GetPaymentSummary?SendingAmount=" + SendingAmount
            //    + "&ReceivingAmount=" + ReceivingAmount + "&IsReceivingAmount=" + IsReceivingAmount +
            //    "&receiverCountry=" + ReceivingCountry + "&sendingCountry=" + SendingCountry
            //    +"&IncludeFee=" + IncludeFee, function (result) {

            //        for (var item in result) {

            //            var selector = '[name="' + item + '"]';
            //            $(selector).val(result[item]);
            //            $(selector).text(result[item]);
            //        }


            //    })
        }


        $("#SendingAmount").focus(function () {

            if ($("#SendingAmount").val() <= 1) {

                $("#SendingAmount").val("");
                $("#ReceivingAmount").val("");
            }


        })

        $("#ReceivingAmount").focus(function () {

            if ($("#SendingAmount").val() <= 1) {

                $("#SendingAmount").val("");
                $("#ReceivingAmount").val("");
            }

        })

    </script>
}