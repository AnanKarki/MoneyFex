@model FAXER.PORTAL.Areas.Admin.ViewModels.ServiceSettingViewModel
@{
    ViewBag.Title = "CurrentSetting";
    Layout = "~/Areas/Admin/Views/Shared/New_Layout.cshtml";

}

@*@using (Html.BeginForm())
    {
        <div id="page-wrapper">
            <div class="container-fluid">
                <div class="row bg-title">

                </div>

                <div class="row">

                    <div class="col-md-12">
                        <div class="white-box">
                            <div class="card" style="">

                                <div class="card-header border-bottom">
                                    <div style="float:left;">
                                        <h2 class="f-left f-left m-t-5 m-b-0">Transfer Services </h2>
                                    </div>
                                    <div style="float:right;">

                                        <a href="@Url.Action("Index","ServiceSettings")" class="btn btn-info pull-right m-l-20 hidden-xs hidden-sm waves-effect waves-light">
                                            <i class="icofont icofont-eye m-r-5"></i> View Settings
                                        </a>
                                    </div>

                                </div>

                                <div class="card-body">


                                    <div class="row">

                                        <div class="col-md-12">
                                            <hr />
                                            <div class="col-lg-4  col-sm-12 col-xs-12 offset-lg-4">

                                                @Html.HiddenFor(x => x.Master.Id)
                                                <div class="form-group">

                                                    <label>Sending Country</label>
                                                    @Html.DropDownListFor(x => x.Master.SendingCountry, (IEnumerable<SelectListItem>)ViewBag.sendingcountries, "Select Sending Country", new { @class = "form-control", @id = "SendingCountry" })
                                                    @Html.ValidationMessageFor(x => x.Master.SendingCountry, "", new { @class = "text-danger" })

                                                </div>




                                                <div class="form-group">

                                                    <label>Receiving Country</label>
                                                    @Html.DropDownListFor(x => x.Master.ReceivingCountry, (IEnumerable<SelectListItem>)ViewBag.ReceivingCountries, "Select Receiving Country", new { @class = "form-control", @id = "ReceivingCountry" })
                                                    @Html.ValidationMessageFor(x => x.Master.ReceivingCountry, "", new { @class = "text-danger" })

                                                </div>



                                                <div class="box-border row">
                                                    <div class="col-lg-12">
                                                        <h6 class="m-b-20">Select Services</h6>

                                                    </div>
                                                    @{
                                                        int i = 0;
                                                        foreach (var item in Model.Details)
                                                        {
                                                            <div class="col-sm-4 text-center @i" , id="@i">
                                                                <label for="checkbox1" class="custom-checkbox">
                                                                    <img src="@item.ImageUrl" alt="" width="40">
                                                                    <div class="text">@item.ServiceType</div>
                                                                    @Html.CheckBoxFor(x => Model.Details[i].IsChecked)
                                                                    @Html.HiddenFor(x => Model.Details[i].ServiceType)

                                                                    <span class="checkmark"></span>

                                                                </label>
                                                            </div>

                                                            i = i + 1;
                                                        }
                                                    }
                                                </div>
                                                @Html.ValidationMessage("Invalid", "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-footer bg-light">
                                        <div class="row">
                                            <div class="col-lg-4  col-sm-12 col-xs-12 offset-lg-4">
                                                <a href="@Url.Action("Index", "ServiceSettings")" class="btn btn-danger btn-round pull-left"><i class="fa fa-remove"></i> Cancel</a>

                                                <button type="submit" class="btn btn-primary btn-round pull-right"><i class="fa fa-save"></i> Save</button>


                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>

                        </div>


                    </div>

                </div>
            </div>
        </div>
    }*@



@using (Html.BeginForm("CurrentSetting", "ServiceSettings", FormMethod.Post, new { @Id = "CurrentSetting" }))

{
    <div class="pcoded-content">
        <div class="pcoded-inner-content">

            <div class="main-body">
                <div class="page-wrapper">

                    <div class="page-body">
                        <div class="row">

                            <div class="col-sm-12">

                                <div class="card">

                                    <div class="card-header border-bottom">
                                        <h4 class="f-left f-left m-t-5 m-b-0">Transfer Services</h4>
                                        <a href="@Url.Action("Index","ServiceSettings")" class=" btn btn-primary f-right btn-round">
                                            <i class="fa fa-angle-left m-r-5"></i> View Transfer Services
                                        </a>
                                    </div>

                                    <div class="card-body">

                                        @Html.HiddenFor(x => x.Master.Id)
                                        <div class="row">
                                            <div class="col-lg-6  col-sm-12 col-xs-12 offset-lg-3">

                                                <div class="form-group">
                                                    <label>Sending Currency</label>
                                                    @Html.DropDownListFor(x => x.Master.SendingCurrrency, (IEnumerable<SelectListItem>)ViewBag.SendingCurrencies, "Select Currency", new { @class = "form-control form-control-lg form-control-round form-control-bold", @id = "SendingCurrency", @onchange = "GetSendingCountryBycurrency();" })
                                                    @Html.ValidationMessageFor(x => x.Master.SendingCurrrency, "", new { @class = "text-danger" })

                                                </div>
                                                <div class="form-group">
                                                    <label>Sending Country</label>
                                                    @Html.DropDownListFor(x => x.Master.SendingCountry, (IEnumerable<SelectListItem>)ViewBag.SendingCountries, "Select  Country", new { @class = "form-control form-control-lg form-control-round form-control-bold", @id = "SendingCountry" })
                                                    @Html.ValidationMessageFor(x => x.Master.SendingCountry, "", new { @class = "text-danger" })


                                                </div>

                                                <div class="form-group">
                                                    <label>Receiving Currency</label>
                                                    @Html.DropDownListFor(x => x.Master.ReceivingCurrency, (IEnumerable<SelectListItem>)ViewBag.ReceivingCurrencies, "Select  Currency", new { @class = "form-control form-control-lg form-control-round form-control-bold", @id = "ReceivingCurrency" })
                                                    @Html.ValidationMessageFor(x => x.Master.ReceivingCurrency, "", new { @class = "text-danger" })

                                                </div>
                                                <div class="form-group">
                                                    <label>Receiving Country</label>
                                                    @Html.DropDownListFor(x => x.Master.ReceivingCountry, (IEnumerable<SelectListItem>)ViewBag.ReceivingCountries, "Select Country", new { @class = "form-control form-control-lg form-control-round form-control-bold", @id = "ReceivingCountry" })
                                                    @Html.ValidationMessageFor(x => x.Master.ReceivingCountry, "", new { @class = "text-danger" })

                                                </div>

                                                <div class="form-group">
                                                    <label>Default service</label>
                                                    @Html.DropDownListFor(x => x.Master.ServiceType, (IEnumerable<SelectListItem>)ViewBag.ServiceTypes, "", new { @class = "form-control form-control-lg form-control-round form-control-bold", @id = "ServiceType" })

                                                </div>

                                            </div>
                                        </div>


                                        <div class="row">

                                            <div class="col-lg-12" id="serviceSettingDetail">
                                                <h5 class="m-b-15">Transfer Services</h5>
                                                <div class="box-border row">
                                                    <div class="col-lg-12">
                                                        <h6 class="m-b-20">Select Services</h6>
                                                    </div>
                                                    @{
                                                        int i = 0;
                                                        foreach (var item in Model.Details)
                                                        {
                                                            <div class="col-sm-4 text-center @i" , id="@i">

                                                                <label class="custom-checkbox">
                                                                    <a onclick="GetBank('@item.ServiceType');">
                                                                        <img src="@item.ImageUrl" alt="" width="40">
                                                                        <div class="text">@item.ServiceType</div>
                                                                        @Html.CheckBoxFor(x => Model.Details[i].IsChecked)
                                                                        @Html.HiddenFor(x => Model.Details[i].ServiceType)

                                                                        <span class="checkmark"></span>
                                                                    </a>
                                                                </label>
                                                            </div>

                                                            i = i + 1;
                                                        }
                                                    }


                                                </div>
                                                @Html.ValidationMessage("Invalid", "", new { @class = "text-danger" })

                                            </div>



                                            @if (ViewBag.ShowBankList == true)
                                            {
                                                <div class="col-lg-6" id="Banksdiv" style="height:350px; overflow: auto; ">
                                                    <div>
                                                        <table class="table table-striped table-bordered">
                                                            <thead>
                                                                <tr>
                                                                    <th align="center">
                                                                        <input id="checkAll" type="checkbox" class="check_boxa">
                                                                        All
                                                                    </th>
                                                                    <th align="center">
                                                                        Bank
                                                                    </th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                @{
                                                                    int j = 0;
                                                                    foreach (var item in Model.BankDetails)
                                                                    {
                                                                        <tr>
                                                                            <td>
                                                                                @Html.CheckBoxFor(x => Model.BankDetails[j].IsChecked, new { @name = "selectAll", @class = "idRow" })
                                                                                @Html.HiddenFor(x => Model.BankDetails[j].Id)
                                                                            </td>

                                                                            <td><span id="BankName">@item.Name</span></td>
                                                                        </tr>
                                                                        j = j + 1;
                                                                    }
                                                                }

                                                            </tbody>

                                                        </table>
                                                    </div>

                                                </div>
                                            }






                                        </div>
                                    </div>

                                    <div class="card-footer bg-light">
                                        <div class="row">
                                            <div class="col-lg-4  col-sm-12 col-xs-12 offset-lg-4">

                                                <a href="@Url.Action("Index", "ServiceSettings")" class="btn btn-danger btn-round pull-left"><i class="fa fa-remove"></i> Cancel</a>

                                                <button type="submit" class="btn btn-primary btn-round pull-right"><i class="fa fa-save"></i> Save</button>



                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>
}

@section scripts{
    <script type="text/javascript">

        $("#checkAll").click(function () {
            $('.idRow').prop("checked", this.checked);
        });

     
       function GetBank(method) {

            if (method == "@FAXER.PORTAL.DB.TransferService.BankDeposit") {

                $('input[type="checkbox"]').click(function () {
                    if ($(this).prop("checked") == true) {
                        var id = @Model.Master.Id ??0;
                        var sendingCurrency = $("#SendingCurrency").val();
                        var sendingCountry = $("#SendingCountry").val();
                        var receivingCountry = $("#ReceivingCountry").val();
                        var receivingCountry = $("#ReceivingCountry").val();
                        var Currency = $("#ReceivingCurrency").val();
                        var IsBankChecked = true;
                        //$("#CurrentSetting").submit();
                        window.location.href = "/Admin/ServiceSettings/CurrentSetting?Id="+id + "&sendingCountry=" + sendingCountry +
                            "&receivingCountry=" + receivingCountry +
                            "&receivngCurrecny=" + Currency +
                            "&sendingCurrency=" + sendingCurrency +
                            "&IsBankChecked=" + IsBankChecked;
                    }
                    else if ($(this).prop("checked") == false) {
                         $("#Banksdiv").hide();
                        $('.idRow').prop("checked", false);
                        $("#serviceSettingDetail")[0].className = 'col-lg-12';
                    }
                });
            }
        }


        if ('@ViewBag.ShowBankList' == 'True') {

            $("#serviceSettingDetail")[0].className = 'col-lg-6';
        }


        GetSendingCountryBycurrency();
        function GetSendingCountryBycurrency() {
            var sendingCurrency = $("#SendingCurrency").val();
            var sendingCountry = $("#SendingCountry").val();
            if ("@Model.Master.SendingCountry" != "") {
                sendingCountry = "@Model.Master.SendingCountry";
            } else {
                sendingCountry = "All";
            }
            GetSendingCountryByCurrency(sendingCurrency, sendingCountry);
         }




    </script>
}
