@model FAXER.PORTAL.Models.SenderBankAccountDepositVm
@{
    ViewBag.Title = "BankAccountDeposit";
    Layout = "~/Areas/Admin/Views/Shared/New_Layout.cshtml";

}

@using (Html.BeginForm())
{
    <div class="pcoded-content">
        <div class="pcoded-inner-content">

            @Html.HiddenFor(x => x.CountryCode)
            <div class="main-body">
                <div class="page-wrapper">

                    <div class="page-body">
                        <div class="row">

                            <div class="col-lg-6  col-sm-12 col-xs-12 offset-lg-3">

                                <div class="card">

                                    <div class="card-header border-bottom">
                                        <h4 class="f-left f-left m-t-5 m-b-0">Bank Account Deposit</h4>

                                    </div>

                                    <div class="card-body p-40">
                                        @Html.ValidationMessage("", "", new { @class = "text-danger" })
                                        <!--  -->
                                        <div class="form-group m-b-35">
                                            @Html.DropDownListFor(model => model.RecentAccountNumber, (IEnumerable<SelectListItem>)ViewBag.RecentAccountNumbers, "Select Recent Account No.", new { @class = "form-control form-control-lg form-control-round", @id = "recentAccountNumber", onchange = "GetAccountInformation()" })
                                            @Html.ValidationMessageFor(model => model.RecentAccountNumber, "", new { @class = "text-danger" })
                                        </div>
                                        <!--  -->
                                        <!--  -->
                                        <div class="form-group m-b-35 text-center">
                                            <h3 class="text-primary">OR</h3>
                                        </div>
                                        <!--  -->
                                        <!--  -->
                                        <div class="form-group m-b-35">
                                            @Html.TextBoxFor(x => x.AccountOwnerName, new { @class = "form-control form-control-lg form-control-round", @placeholder = "Account owner Name" })
                                            @Html.ValidationMessageFor(model => model.AccountOwnerName, "", new { @class = "text-danger" })

                                        </div>
                                        <!--  -->
                                        <!--  -->
                                        <div class="form-group m-b-35">
                                            <label>Mobile Number</label>
                                            <div class="input-group input-group-round input-group-lg">
                                                <span class="input-group-addon" id="CountryPhoneCodeSpan"> @Model.CountryPhoneCode </span>

                                                @Html.TextBoxFor(model => model.MobileNumber, new { @class = "form-control form-control-lg form-control-round", @placeholder = "Enter Mobile Number ", @autocomplete = "off" })

                                            </div>
                                            @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                                        </div>
                                        <!--  -->
                                        <!--  -->
                                        @if (Model.IsEuropeTransfer == true)
                                        {

                                            <div class="form-group   mb20">
                                                @Html.TextBoxFor(x => x.BankName, new { @class = "form-control form-control-lg form-control-round", @placeholder = "Enter Bank Name" })
                                                @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group   mb20">
                                                @Html.TextBoxFor(x => x.BranchCode, new { @class = "form-control form-control-lg form-control-round", @placeholder = "Enter BIC/SWIFT" })
                                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group mb20">
                                                @Html.TextBoxFor(x => x.AccountNumber, new { @class = "form-control form-control-lg form-control-round", @placeholder = "Enter IBAN" })
                                                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })

                                            </div>
                                        }

                                        else if (Model.IsWestAfricaTransfer == true)
                                        {

                                            <div class="form-group mb30" id="dropdown">
                                                @Html.DropDownListFor(model => model.BankId, (IEnumerable<SelectListItem>)ViewBag.BankNames, "Select Bank Name", new { @class = "form-control form-control-lg form-control-round selectpicker", @id = "BankId", @data_show_subtext = "true", @data_live_search = "true", onchange = "GetBankCode()" })
                                                @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group mb20">
                                                @Html.TextBoxFor(x => x.AccountNumber, new { @class = "form-control form-control-lg form-control-round", @placeholder = "Enter IBAN" })
                                                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })

                                            </div>
                                        }
                                        else if (Model.IsSouthAfricaTransfer == true)
                                        {

                                            <div class="form-group mb30">

                                                @Html.TextBoxFor(x => x.ReceiverStreet, new { @class = "form-control form-control-lg form-control-round", @placeholder = "Enter Address" })
                                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group mb30">

                                                @Html.TextBoxFor(x => x.ReceiverPostalCode, new { @class = "form-control form-control-lg form-control-round", @placeholder = "Enter Postcode" })
                                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group mb30">

                                                @Html.TextBoxFor(x => x.ReceiverCity, new { @class = "form-control form-control-lg form-control-round", @placeholder = "Enter City" })
                                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group mb30">
                                                @Html.TextBoxFor(x => x.ReceiverEmail, new { @class = "form-control form-control-lg form-control-round", @placeholder = "Enter Email Address" })
                                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group mb20">
                                                @Html.TextBoxFor(x => x.AccountNumber, new { @class = "form-control form-control-lg form-control-round", @placeholder = "Enter Account Number" })
                                                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group mb30" id="dropdown">
                                                @Html.DropDownListFor(model => model.BankId, (IEnumerable<SelectListItem>)ViewBag.BankNames, "Select Bank Name", new { @class = "form-control form-control-lg form-control-round selectpicker", @id = "BankId", @data_show_subtext = "true", @data_live_search = "true", onchange = "GetBankCode()" })
                                                @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group mb30">
                                                @Html.HiddenFor(x => x.BranchCode, new { @class = "form-control form-control-lg form-control-round", @placeholder = "Enter code", @readonly = true, @style = "display:none" })
                                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                                @*<p style="font-size:15px"><i> Bank code / branch code / sort code / routing number etc</i> </p>*@
                                            </div>
                                        }

                                        else
                                        {
                                            <!--  -->
                                            <div class="form-group m-b-35">
                                                @Html.TextBoxFor(x => x.AccountNumber, new { @class = "form-control form-control-lg form-control-round", @placeholder = "Account Number" })
                                                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                                            </div>
                                            <!--  -->
                                            <!--  -->
                                            <div class="form-group m-b-35">
                                                @Html.DropDownListFor(model => model.BankId, (IEnumerable<SelectListItem>)ViewBag.BankNames, "Select Bank", new { @class = "form-control form-control-lg form-control-round", @id = "BankId", @data_show_subtext = "true", @data_live_search = "true", onchange = "GetBankCode()" })
                                                @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })
                                            </div>
                                            <!--  -->
                                            <!--  -->
                                            <div class="form-group m-b-35">
                                                @Html.TextBoxFor(x => x.BranchCode, new { @class = "form-control form-control-lg form-control-round ", @placeholder = "Enter Branch Code", id = "BranchCode", name = "BranchCode" })
                                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                            </div>
                                            <!--  -->
                                            <!--  -->
                                            <div class="form-group m-b-35 text-center">
                                                <h3 class="text-primary">OR</h3>
                                            </div>


                                            <div class="form-group m-b-35">
                                                @Html.DropDownListFor(model => model.BranchId, (IEnumerable<SelectListItem>)ViewBag.Branches, "Select Branch", new { @class = "form-control form-control-lg form-control-round selectpicker", @id = "BranchId" })
                                                @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                                            </div>
                                        }
                                        <!--  -->
                                    </div>
                                </div>
                                <div class="card-footer bg-light">
                                    <div class="row">
                                        <div class="col-lg-4  col-sm-12 col-xs-12 offset-lg-4">
                                            <button type="submit" class="btn btn-primary btn-lg btn-round  btn-block"> Continue <i class="fa fa-angle-right m-l-5"></i></button>
                                            <button onclick="window.history.go(-1);" class=" btn btn-link  btn-lg btn-round btn-block">
                                                <i class="fa fa-angle-left m-r-5"></i> Back
                                            </button>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>

}

@section Scripts{

    <script type="text/javascript">

        $("#submit").click(function () {
            $("#loader").show();
            $("form").submit();
        })
        function GetAccountInformation() {
            $("#loader").show();
            var accountNo = $("#recentAccountNumber").val();
            window.location.href = "/Admin/StaffBankAccountDeposit/BankAccountDeposit?RecentAcccountNo=" + accountNo;
        }


        @*function GetAccountInformation() {
            $("#loader").show();
            var country = "@Model.CountryCode";
            var accountNo = $("#recentAccountNumber").val();

            $.getJSON("/Admin/StaffBankAccountDeposit/GetAccountInformation?accountNo=" + accountNo + "&CountryCode=" + country, function (result) {
                for (var item in result) {
                    var selector = '[name="' + item + '"]';
                    $(selector).val(result[item]);
                    $(selector).text(result[item]);
                }
                //debugger;
                $("#BankId").val(result["BankId"]);
                $("#CountryPhoneCode").val(result["CountryPhoneCode"]);
                $("#CountryPhoneCode").text(result["CountryPhoneCode"]);
            })
        }*@

        function GetBankCode() {

            var bankId = $("#BankId").val();
            $.getJSON("/Admin/StaffBankAccountDeposit/GetBankCode?bankId=" + bankId, function (result) {

                debugger;
                for (var item in result) {

                    var selector = '[name="' + item + '"]';
                    $(selector).val(result[item]);
                    $(selector).text(result[item]);
                }

                if (result.Branches != null) {

                    $("#BranchCode option").remove();
                    $("#BranchCode").append('<option value="">Select Branch</option>');

                    for (var item in result.Branches) {
                        debugger
                        $("#BranchCode ").append('<option value="' + result.Branches[item].Code + '">' + result.Branches[item].Name + '</option>');
                    }

                }
            })

        }


    </script>
}
