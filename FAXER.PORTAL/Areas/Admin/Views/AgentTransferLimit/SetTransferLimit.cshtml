@model FAXER.PORTAL.Areas.Admin.ViewModels.AgentTransferLimtViewModel
@{
    ViewBag.Title = "SetTransferLimit";
    Layout = "~/Areas/Admin/Views/Shared/New_Layout.cshtml";
}

@using (Html.BeginForm())
{


    <div class="pcoded-content">
        <div class="pcoded-inner-content">

            <div class="main-body">
                <div class="page-wrapper">

                    <div class="page-body">
                        <div class="row">

                            <div class="col-sm-12">

                                <div class="card">

                                    <div class="card-header border-bottom">
                                        <h4 class="f-left f-left m-t-5 m-b-0">Set Transfer Limit   </h4>
                                        <a href="@Url.Action("Index","AgentTransferLimit")" class=" btn btn-primary f-right btn-round">
                                            <i class="icofont icofont-eye m-r-5"></i> View Limit
                                        </a>
                                    </div>

                                    <div class="card-body">

                                        <form action="set-commission_submit" method="get" accept-charset="utf-8">
                                            <div class="row">
                                                <div class="col-lg-4  col-sm-12 col-xs-12 offset-lg-4">
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Country</label>
                                                        @Html.DropDownListFor(x => x.Country, (IEnumerable<SelectListItem>)ViewBag.Countries, "Select  Country", new { @class = "form-control  form-control-lg form-control-round form-control-bold", @id = "Country", @onchange = "GetCitesByCountry()" })
                                                        @Html.ValidationMessageFor(x => x.Country, "", new { @class = "text-danger" })
                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>City</label>
                                                        @Html.DropDownListFor(x => x.City, (IEnumerable<SelectListItem>)ViewBag.Cities, "Select City", new { @class = "form-control  form-control-lg form-control-round form-control-bold", @id = "City", @onchange = "GetAgentByCity()" })
                                                        @Html.ValidationMessageFor(x => x.City, "", new { @class = "text-danger" })
                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Agent</label>
                                                        @Html.DropDownListFor(x => x.AgentId, (IEnumerable<SelectListItem>)ViewBag.Agents, "Select Agent", new { @class = "form-control  form-control-lg form-control-round form-control-bold", @id = "AgentId", @onchange = "GetAgentAccountNo();" })
                                                        @Html.ValidationMessageFor(x => x.AgentId, "", new { @class = "text-danger" })
                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Account No.</label>
                                                        @Html.TextBoxFor(x => x.AccountNo, new { @class = "form-control  form-control-lg form-control-round", @placeholder = "Enter AccountNo", @id = "accountno", @readonly = "readonly" })
                                                        @Html.ValidationMessageFor(x => x.AccountNo, "", new { @class = "text-danger" })


                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Services</label>
                                                        @Html.EnumDropDownListFor(x => x.TransferMethod, new { @class = "form-control form-control-lg form-control-round form-control-bold", @id = "TransferMethod" })
                                                        @Html.ValidationMessageFor(x => x.TransferMethod, "", new { @class = "text-danger" })
                                                        @Html.ValidationMessage("", "", new { @class = "text-danger" })
                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Frequency</label>
                                                        @Html.EnumDropDownListFor(x => x.Frequency, new { @class = "form-control form-control-lg form-control-round form-control-bold", @id = "Frequency" })
                                                        @Html.ValidationMessageFor(x => x.Frequency, "", new { @class = "text-danger" })
                                                        @Html.ValidationMessage("", "", new { @class = "text-danger" })
                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Amount</label>
                                                        @Html.TextBoxFor(x => x.Amount, new { @class = "form-control  form-control-lg form-control-round", @placeholder = "Enter Amount", @id = "Amount" })
                                                        @Html.ValidationMessageFor(x => x.Amount, "", new { @class = "text-danger" })
                                                    </div>

                                                    <!--  -->


                                                </div>

                                            </div>

                                        </form>
                                    </div>

                                    <div class="card-footer bg-light">
                                        <div class="row">
                                            <div class="col-lg-4  col-sm-12 col-xs-12 offset-lg-4">
                                                <a href="@Url.Action("Index", "AgentTransferLimit")" class="btn btn-danger btn-round pull-left"><i class="fa fa-remove"></i> Cancel</a>


                                                <button type="submit" class="btn btn-primary btn-round pull-right"><i class="fa fa-save"></i> Save</button>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>
}

@section Scripts{
    <script type="text/javascript">



        function GetCitesByCountry() {
            debugger;
            var country = $("#Country").val();
            $.getJSON("/Admin/AdminCommon/GetCityByCountry?countryCode=" + country, function (result) {

                var citySelector = $("#City");
                $("#City option").remove();
                citySelector.append('<option value="">Select</option>');
                if (result.Data.length != 0) {
                    for (var i = 0; i <= result.Data.length; i++) {
                        citySelector.append('<option value="' + result.Data[i].City + '">' + result.Data[i].City + '</option>');
                    }
                }

            })
            search();
        }
        function GetAgentByCity() {
          
            search();
            $("#accountno").val("");
            $("#AgentId").val(0);
        }

        function GetAgentAccountNo() {
            var AgentId = $("#AgentId").val();
            $.getJSON("/Admin/AdminCommon/GetAgentAccountNumber?agentId=" + AgentId, function (result) {

                var AccountNumber = result.Data;
                $("#accountno").val(AccountNumber);
            })
        }
        search();
        function search() {
            var data = {
                id: $("#AgentId"),
                country: $("#Country").val(),
                Currecny: "",
                isBusiness: false,
                isAuxAgent: false,
                url: '/Admin/AdminCommon/GetAgents',
                identifier: "AgentId",
                placeholder: "All",
                City: $("#City").val()
            }
            SelectSearch(data);
        }

    </script>
}