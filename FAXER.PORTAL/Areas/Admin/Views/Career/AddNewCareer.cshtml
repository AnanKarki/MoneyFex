@model FAXER.PORTAL.Areas.Admin.ViewModels.CareerViewModel
@{
    ViewBag.Title = "AddNewCareer";
    Layout = "~/Areas/Admin/Views/Shared/New_Layout.cshtml";
}


@*@using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()
        <div id="page-wrapper">
            <div class="container-fluid">
                <div class="row bg-title">
                    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
                        <h4 class="page-title">Add New Career</h4>
                    </div>
                    <div class="col-lg-9 col-sm-8 col-md-8 col-xs-12">

                        <a href="@Url.Action("Index", "Career")" class="btn btn-info pull-right m-l-20 hidden-xs hidden-sm waves-effect waves-light btn-rounded">View all Jobs</a>

                        <ol class="breadcrumb">
                            <li><a href="/Admin/AdminDashboard">Dashboard</a></li>
                            <li class="active">Add New Career</li>
                        </ol>

                    </div>
                     /.col-lg-12
                </div>
                 /.row
                <div class="row">
                    <div class="col-md-12">
                        <div class="white-box">
                            <div class="col-lg-8">

                                <div class="form-body">

                                    <div class="row">
                                        <div class="col-lg-6">

                                            <div class="form-group">
                                                <label>Country </label>
                                                @Html.DropDownListFor(model => model.Country, (IEnumerable<SelectListItem>)ViewBag.Countries, "Choose Country", new { @class = "form-control", id = "country", onchange = "GetCities();" })
                                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                            </div>

                                        </div>


                                        <div class="col-lg-6">

                                            <div class="form-group">
                                                <label>City </label>

                                                @Html.DropDownListFor(model => model.City, (IEnumerable<SelectListItem>)ViewBag.Cities, "Choose City", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                    </div>
                                    <div class="clearfix"></div>

                                    <div class="form-group">
                                        <label>Job Title     </label>
                                        @Html.TextBoxFor(model => model.JobTitle, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                                    </div>


                                    <div class="form-group">
                                        <label>Description   </label>
                                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-6">

                                            <div class="form-group">
                                                <label>Contract Type   </label>

                                                @Html.TextBoxFor(model => model.ContractType, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ContractType, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <label>Salary  </label>
                                    <div class="row">




                                        <div class="col-lg-4 no-right-padding">
                                            @Html.TextBoxFor(model => model.SalaryRange, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SalaryRange, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-2 no-left-padding">
                                            @Html.TextBoxFor(model=>model.CountryCurrency, new { @class="form-control", @readonly="readonly"})
                                        </div>





                                    </div>
                                    <br />
                                    <div class="clearfix"></div>
                                    <div class="row">
                                        <div class="col-lg-6">

                                            <div class="form-group">
                                                <label>Closing Date   </label>
                                                @Html.TextBoxFor(model => model.ClosingDate, new { @class = "form-control" , @type="date" })
                                           @Html.ValidationMessageFor(model=>model.ClosingDate, "", new { @class="text-danger"})
                                            </div>

                                        </div>
                                        <div class="col-lg-6">

                                            <div class="form-group">
                                                <label>Closing Time   </label>
                                                @Html.EditorFor(model => model.ClosingTime,  new { @class = "form-control" })
                                            </div>

                                        </div>
                                    </div>
                                    <hr>

                                    <div class="form-group">
                                        <button class="btn btn-success btn-lg  btn-rounded pull-right">Publish </button>
                                    </div>


                                </div>


                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }*@
@using (Html.BeginForm("AddNewCareer", "Career", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()
    <div class="pcoded-content">
        <div class="pcoded-inner-content">

            <div class="main-body">
                <div class="page-wrapper">

                    <div class="page-body">
                        <div class="row">

                            <div class="col-sm-12">

                                <div class="card">

                                    <div class="card-header border-bottom">
                                        <h4 class="f-left f-left m-t-5 m-b-0">Add Career</h4>
                                        <a href="@Url.Action("Index", "Career")" class=" btn btn-primary f-right btn-round">
                                            <i class="icofont icofont-eye m-r-5"></i> View Career
                                        </a>
                                    </div>

                                    <div class="card-body">

                                        <form action="set-commission_submit" method="get" accept-charset="utf-8">
                                            <div class="row">
                                                <div class="col-lg-4  col-sm-12 col-xs-12 offset-lg-4">


                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label> Country</label>
                                                        @Html.DropDownListFor(model => model.Country, (IEnumerable<SelectListItem>)ViewBag.Countries, "Choose Country", new { @class = "form-control form-control-lg form-control-round form-control-bold", id = "country", onchange = "GetCities();" })
                                                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>City</label>
                                                        @Html.DropDownListFor(model => model.City, (IEnumerable<SelectListItem>)ViewBag.Cities, "Choose City", new { @class = "form-control form-control-lg form-control-round form-control-bold" })
                                                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Contract </label>
                                                        @Html.TextBoxFor(model => model.ContractType, new { @class = "form-control form-control-lg form-control-round form-control-bold" })
                                                        @Html.ValidationMessageFor(model => model.ContractType, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Salary</label>
                                                        @Html.TextBoxFor(model => model.SalaryRange, new { @class = "form-control form-control-lg form-control-round form-control-bold", @placeholder = "Enter Salary" })
                                                        @Html.ValidationMessageFor(model => model.SalaryRange, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Closing Date</label>
                                                        @Html.TextBoxFor(model => model.ClosingDate, new { @class = "form-control form-control-lg form-control-round form-control-bold", @type = "date" })
                                                        @Html.ValidationMessageFor(model => model.ClosingDate, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Job Title</label>
                                                        @Html.TextBoxFor(model => model.JobTitle, new { @class = "form-control form-control-lg form-control-round form-control-bold", placeholder = "Enter Job Title", id = "JobTitle" })
                                                        @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Description</label>
                                                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control form-control-lg form-control-round form-control-bold", placeholder = "Enter Job Description", id = "JobDescription" })
                                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })


                                                    </div>

                                                    <!--  -->
                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Photo</label>
                                                        <input type="file" id="carrersImage" name="carrersImage" class="form-control form-control-lg form-control-round" placeholder="Title">

                                                    </div>

                                                    <!--  -->




                                                </div>

                                            </div>

                                        </form>
                                    </div>

                                    <div class="card-footer bg-light">
                                        <div class="row">
                                            <div class="col-lg-4  col-sm-12 col-xs-12 offset-lg-4">
                                                <a href="@Url.Action("Index", "Career")" class="btn btn-danger btn-round pull-left"><i class="fa fa-remove"></i> Cancel</a>

                                                <a onclick="loadData();" class="btn btn-primary btn-round pull-right"><i class="fa fa-eye"></i> Preview</a>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>


    <!-- popup -->
    <div class="modal fade" id="previwe_before_publish" tabindex="-1" role="dialog" aria-labelledby="exampleModalScrollableTitle" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">

                <div class="modal-body text-justify">
                    <img src="https://dummyimage.com/800x600/e6e6e6/00000" id="Image" name="Image" alt=" " style="float: left; margin-right: 15px; width: 300px;">
                    <h5><span id="Head"></span></h5>
                    <p><span id="Para"></span></p>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger btn-round" data-dismiss="modal"><i class="fa fa-remove"></i> Close</button>
                    <button onclick="Submit()" class="btn btn-primary btn-round"><i class="fa fa-send"></i> Publish</button>
                </div>
            </div>
        </div>
    </div>
    <!-- popup -->
}

    @section scripts{
        <script type="text/javascript">

            function GetCities() {
                var country = document.getElementById("country").value;
                window.location.href = "/Admin/Career/AddNewCareer?CountryCode=" + country;
            }

            function loadData() {

                var head = $("#JobTitle").val();

                var para = $("#JobDescription").val();
                document.getElementById("Para").innerHTML = para;
                document.getElementById("Head").innerHTML = head;
                readURL(document.getElementById("carrersImage"));

                $("#previwe_before_publish").modal("show");
            }
            function readURL(input) {

                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#Image').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }

            $("#imgInp").change(function () {
                readURL(this);
            });
            function Submit() {

                $("form")[0].submit();
            }
        </script>
    }
