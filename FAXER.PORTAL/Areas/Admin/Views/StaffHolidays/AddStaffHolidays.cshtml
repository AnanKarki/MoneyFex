@model FAXER.PORTAL.Areas.Admin.ViewModels.AddStaffHolidaysViewModel
@{
    ViewBag.Title = "AddStaffHolidays";
    Layout = "~/Areas/Admin/Views/Shared/New_Layout.cshtml";
}



@*@using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()
        <div id="page-wrapper">
            <div class="container-fluid">
                <div class="row bg-title">
                    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
                        <h4 class="page-title">Add Holidays</h4>
                    </div>
                    <div class="col-lg-9 col-sm-8 col-md-8 col-xs-12">

                        <a href="@Url.Action("Index", "StaffHolidays")" class="btn btn-info pull-right m-l-20 hidden-xs hidden-sm waves-effect waves-light btn-rounded">View - Staff Holidays</a>

                        <ol class="breadcrumb">
                            <li><a href="/Admin/AdminDashboard">Dashboard</a></li>
                            <li class="active">Add Holidays</li>
                        </ol>

                    </div>
                     /.col-lg-12
                </div>
                 /.row
                <div class="row">
                    <div class="col-md-12">
                        <div class="white-box">
                            <div class="col-lg-8">

                                <div class="form-body">

                                    <div class="form-group">

                                        @Html.DropDownListFor(model => model.Country, (IEnumerable<SelectListItem>)ViewBag.Countries, "All Countries", new { @class = "form-control", id = "country" })
                                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                    </div>


                                    <div class="form-group">

                                        @Html.DropDownListFor(model => model.City, (IEnumerable<SelectListItem>)ViewBag.Cities, "All Cities", new { @class = "form-control", id = "city" })
                                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                    </div>


                                    <div class="form-group">
                                        @Html.DropDownListFor(model => model.StaffId, (IEnumerable<SelectListItem>)ViewBag.Staffs, "All Staffs", new { @class = "form-control", id = "StaffId" })
                                        @Html.ValidationMessageFor(model => model.StaffId, "", new { @class = "text-danger" })
                                    </div>


                                    <div class="form-group">
                                        <label>No. Of Days</label>
                                        @Html.TextBoxFor(model => model.NoOfDays, new { @class = "form-control", placeholder = " No. Days", id = "noOfDays" })
                                    </div>


                                    <div class="form-group">
                                        <label>Start Date</label>
                                        @Html.TextBoxFor(model => model.StartDate, new { id = "startDate", @class = "date", @data_date_change = "DateOfStartChange" })
                                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                    </div>


                                    <div class="form-group">
                                        <label>Finish Date</label>
                                        @Html.TextBoxFor(model => model.FinishDate, new { id = "finishDate", @class = "date", @data_date_change = "DateOfFinishChange" })
                                           @Html.EditorFor(model => model.FinishDate, new { htmlAttributes = new { @class = "form-control", type = "date" }, @id = "finishDate", @data_date_change = "DateOfFinishChange()" })
                                        @Html.ValidationMessageFor(model => model.FinishDate, "", new { @class = "text-danger" })
                                    </div>


                                    <div class="form-group">
                                        <label>No. Of Days Taken</label>
                                        @Html.TextBoxFor(model => model.NoTaken, new { @class = "form-control", placeholder = "No. Taken" })
                                    </div>


                                    <div class="form-group">
                                        <label>No. Of Days Left</label>
                                        @Html.TextBoxFor(model => model.NoLeft, new { @class = "form-control", placeholder = "No. Left" })
                                        @Html.HiddenFor(model => model.AlreadyTaken, new { id = "AlreadyTaken" })
                                    </div>

                                    <hr>

                                    <div class="form-group">
                                        <button class="btn btn-success btn-lg  btn-rounded pull-right">Publish Holidays</button>
                                    </div>

                                </div>

                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }*@
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()
    <div class="pcoded-content">
        <div class="pcoded-inner-content">

            <div class="main-body">
                <div class="page-wrapper">

                    <div class="page-body">
                        <div class="row">

                            <div class="col-sm-12">

                                <div class="card">

                                    <div class="card-header border-bottom">
                                        <h4 class="f-left f-left m-t-5 m-b-0">Add Holidays  </h4>
                                        <a href="@Url.Action("Index", "StaffHolidays")" class=" btn btn-primary f-right btn-round">
                                            <i class="icofont icofont-eye m-r-5"></i> View Holidays
                                        </a>
                                    </div>

                                    <div class="card-body">

                                        <form action="set-commission_submit" method="get" accept-charset="utf-8">
                                            <div class="row">
                                                <div class="col-lg-4  col-sm-12 col-xs-12 offset-lg-4">
                                                    <!--  -->

                                                    <div class="form-group">
                                                        @Html.DropDownListFor(model => model.Country, (IEnumerable<SelectListItem>)ViewBag.Countries, "Select Country", new { @class = "form-control form-control-lg form-control-round form-control-bold", id = "country", @onchange = "GetStaffAccToCountryAndCity()" })
                                                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>City</label>

                                                        @Html.DropDownListFor(model => model.City, (IEnumerable<SelectListItem>)ViewBag.Cities, "Select City", new { @class = "form-control form-control-lg form-control-round form-control-bold", id = "city", @onchange = "GetStaffAccToCountryAndCity()" })
                                                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Staff</label>
                                                        @Html.DropDownListFor(model => model.StaffId, (IEnumerable<SelectListItem>)ViewBag.Staffs, "Select Staff", new { @class = "form-control form-control-lg form-control-round form-control-bold", id = "StaffId" })
                                                        @Html.ValidationMessageFor(model => model.StaffId, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Number of Days Entitled</label>
                                                        @Html.TextBoxFor(model => model.NoOfDaysEntitled, new { @class = "form-control form-control-lg form-control-round form-control-bold", placeholder = " No of Days Entitled", id = "noOfDaysEntitled" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Number of Days Taken Already</label>
                                                        @Html.TextBoxFor(model => model.NoTaken, new { @class = "form-control form-control-lg form-control-round form-control-bold", placeholder = "No. Taken" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Number of Days Requested</label>
                                                        @Html.TextBoxFor(model => model.NoOfDays, new { @class = "form-control form-control-lg form-control-round form-control-bold", placeholder = " No. Days", id = "noOfDays" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->
                                                    <div class="form-group">
                                                        <label>Start Date</label>
                                                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @id = "startDate", @class = "form-control form-control-lg form-control-round form-control-bold", type = "date", @data_date_change = "DateOfStartChange" } })
                                                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })

                                                    </div>

                                                    <!--  -->
                                                    <!--  -->

                                                    <div class="form-group">
                                                        <label>Finish Date</label>
                                                        @Html.EditorFor(model => model.FinishDate, new { htmlAttributes = new { @id = "finishDate", @class = "form-control form-control-lg form-control-round form-control-bold", type = "date", @data_date_change = "DateOfFinishChange" } })
                                                        @Html.ValidationMessageFor(model => model.FinishDate, "", new { @class = "text-danger" })


                                                    </div>

                                                    <!--  -->

                                                </div>


                                        </form>
                                    </div>

                                    <div class="card-footer bg-light">
                                        <div class="row">
                                            <div class="col-lg-4  col-sm-12 col-xs-12 offset-lg-4">
                                                <a href="@Url.Action("Index","StaffHolidays")" class="btn btn-danger btn-round pull-left"><i class="fa fa-remove"></i> Cancel</a>

                                                <button type="submit" class="btn btn-primary btn-round pull-right"><i class="fa fa-save"></i> Submit</button>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>

    </div>
}
@section Scripts{

    <script type="text/javascript">
        //$(document).ready(function () {
        //    $("#country").change(function (e) {
        //        var country = $(this).val();
        //        window.location.href = "/Admin/StaffHolidays/AddStaffHolidays?country=" + country;

        //    });

        //    $("#city").change(function (e) {
        //        var country = $("#country").val();
        //        var city = $(this).val();
        //        window.location.href = "/Admin/StaffHolidays/AddStaffHolidays?country=" + country + "&city=" + city;

        //    });
        //});
        function GetStaffAccToCountryAndCity() {
            var country = $("#country").val();
            var city = $("#city").val();
            $.getJSON("/Admin/AdminCommon/GetStaffAccToCountryAndCity?countryCode=" + country + "&city=" + city, function (result) {
                var staffselector = $("#StaffId");
                $("#StaffId option").remove();
                staffselector.append('<option value="0">All </option>');
                for (var i = 0; i <= result.Data.length; i++) {
                    staffselector.append('<option value=" ' + result.Data[i].staffId + ' "> ' + result.Data[i].staffName + '</option>');
                }
            })
        }

        function DateOfStartChange(date) {

            Date.prototype.addDays = function (days) {
                var date = new Date(this.valueOf());
                date.setDate(date.getDate() + days);
                return date;
            }

            var startDate = $("#startDate").val();
            var finishDate = $("#finishDate").val();

            var parts = startDate.split('/');
            var partsFinish = finishDate.split('/');

            var HolidaysStartDate = new Date(parts[2], parts[1] - 1, parts[0]);
            var HolidaysFinishDate = new Date(partsFinish[2], partsFinish[1] - 1, partsFinish[0]);

            var currentdate = new Date();
            var dateAfterdays = currentdate.addDays(5);
            if (HolidaysStartDate.getFullYear().toString().length != 4) {
                alert("Please enter a Valid date");
            }
            else if (!(HolidaysStartDate > dateAfterdays)) {

                alert("You Are Only Allowed to Request 5 days After Date to current date ");
                $("#startDate").val("");
            }
            else if (HolidaysFinishDate < HolidaysStartDate) {
                alert("Finish Date can't be smaller than Start Date !");
                $("#startDate").val("");
            }

        }

        function DateOfFinishChange(date) {

            var startDate = $("#startDate").val();
            var finishDate = $("#finishDate").val();
            var staffId = $("#StaffId").val();

            var partsStart = startDate.split('/');
            var partsFinish = finishDate.split('/');

            var HolidaysStartDate = new Date(partsStart[2], partsStart[1] - 1, partsStart[0]);
            var HolidaysFinishDate = new Date(partsFinish[2], partsFinish[1] - 1, partsFinish[0]);

            if (HolidaysFinishDate.getFullYear().toString().length != 4) {
                alert("Please enter a Valid date");
            }
            else if (HolidaysFinishDate < HolidaysStartDate) {
                alert("Finish Date can't be smaller than Start Date !");
                $("#finishDate").val("");
            }

            else {
                //var oneDay = 24 * 60 * 60 * 1000;
                //var diffDays = Math.round(Math.abs((HolidaysStartDate.getTime() - HolidaysFinishDate.getTime()) / (oneDay)));
                //$("#noOfDays").val(diffDays);
                $.getJSON("/Admin/StaffHolidays/NoOfDaysCalculation?StaffId=" + staffId + "&StartDate=" + startDate.toString("dd/MM/yyyy") + "&FinishDate=" + finishDate.toString("dd/MM/yyyy"), function (data) {
                    for (var item in data) {
                        var selector = '[name="' + item + '"]';
                        $(selector).val(data[item]);
                    }
                    //if ($("#AlreadyTaken").val() == "false") {
                    //    alert("Sorry, The holiday on this date is already taken !");
                    //    $("#NoLeft").val("");
                    //    $("#noOfDays").val("");
                    //    $("#NoTaken").val("");
                    //    $("#finishDate").val("");
                    //}
                    if ($("#NoLeft").val() < 0) {
                        alert("The number of requested days is greater than the no. of holidays left !");
                        $("#NoLeft").val("");
                        $("#noOfDays").val("");
                        $("#NoTaken").val("");
                        $("#finishDate").val("");

                    }
                    if ($("#AlreadyTaken").val() == "false") {
                        alert("The selected date is already taken");
                    }

                });
            }
        }




    </script>
}
