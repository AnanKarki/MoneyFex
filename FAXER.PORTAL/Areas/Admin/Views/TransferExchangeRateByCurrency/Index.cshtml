@using PagedList;
@using PagedList.Mvc;
@model IPagedList<FAXER.PORTAL.Areas.Admin.ViewModels.TransferExchangeRateByCurrencyViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/New_Layout.cshtml";
}


<div class="pcoded-content">
    <div class="pcoded-inner-content">

        <div class="main-body">
            <div class="page-wrapper">

                <div class="page-body">
                    <div class="row">

                        <div class="col-sm-12">

                            <div class="card">

                                <div class="card-header border-bottom">
                                    <h4 class="f-left m-t-5 m-b-0">Exchange Rate</h4>
                                    <a href="@Url.Action("SetTransferExchangeRate", "TransferExchangeRateByCurrency")" class="btn btn-primary f-right btn-round">
                                        <i class="icofont icofont-plus m-r-5"></i> Set Exchange Rate
                                    </a>
                                </div>

                                <div class="card-body">
                                    <div class="row m-t-20 m-b-20">

                                        <!--  -->
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">
                                                <select class="js-example-data-array form-control form-control-round form-control-bold" id="TransferType" name="TransferType" onchange="filter();">
                                                    <option value="0">Select Transfer Type</option>
                                                    <option value="1">Online</option>
                                                    <option value="2">Agent</option>
                                                </select>

                                            </div>
                                        </div>
                                        <!--  -->
                                        <!--  -->
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">
                                                <select class="js-example-data-array form-control form-control-round form-control-bold" id="TransferMethod" name="TransferMethod" onchange="filter();">
                                                    <option value="0">Select Transfer Method</option>
                                                    <option value="7">All</option>
                                                    <option value="1">CashPickUp</option>
                                                    <option value="2">KiiPayWallet</option>
                                                    <option value="3">OtherWallet</option>
                                                    <option value="4">BankDeposit</option>
                                                    <option value="5">BillPayment</option>
                                                    <option value="6">ServicePayment</option>
                                                </select>

                                            </div>

                                        </div>
                                        <!--  -->
                                        <!--  -->
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">
                                                @Html.DropDownList("SendingCurrency", (IEnumerable<SelectListItem>)ViewBag.SendingCurrencies, "Select Sending Currency", new { @class = "form-control   form-control-round form-control-bold", @id = "SendingCurrency", @onchange = "filter();" })

                                            </div>
                                        </div>
                                        <!--  -->
                                        <!--  -->
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">
                                                @Html.DropDownList("ReceivingCurrency", (IEnumerable<SelectListItem>)ViewBag.ReceivingCurrencies, "Select Receiving Currency", new { @class = "form-control   form-control-round form-control-bold", @id = "ReceivingCurrency", @onchange = "filter();" })

                                            </div>
                                        </div>
                                        <!--  -->
                                        <!--  -->
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">
                                                @Html.DropDownList("Agent", (IEnumerable<SelectListItem>)ViewBag.Agents, "Select Agent", new { @class = "form-control form-control-round form-control-bold", @id = "Agent", @onchange = "filter();" })

                                            </div>
                                        </div>
                                        <!--  -->

                                    </div>

                                    <div class="dt-responsive table-responsive">
                                        <table class="table table-striped table-bordered nowrap ">
                                            <thead>
                                                <tr>
                                                    <th>Sending Country</th>
                                                    <th>Receiving Country</th>
                                                    <th>Agent</th>
                                                    <th>Method</th>
                                                    <th>Range</th>
                                                    <th>Rate</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @foreach (var item in Model)
                                                {

                                                    <tr>

                                                        <td><i class="flag-icon flag-icon-@item.SendingCountryFlag"></i>@item.SendingCurrency</td>
                                                        <td><i class="flag-icon flag-icon-@item.ReceivingCountryFlag"></i>@item.ReceivingCurrency</td>
                                                        <td>@item.AgentName</td>
                                                        <td>@item.TransferMethodName</td>
                                                        @if (item.Range.Contains("11000"))
                                                        {
                                                            <td>11000+</td>
                                                        }
                                                        else
                                                        {
                                                            <td>@item.Range</td>
                                                        }
                                                        <td>@item.Rate</td>
                                                        <td class="action-icon">
                                                            <a href="@Url.Action("SetTransferExchangeRate", "TransferExchangeRateByCurrency", new { @id = item.Id })" class="m-r-15 text-success" data-toggle="tooltip" data-placement="top" title="" data-original-title="Edit"><i class="icofont icofont-ui-edit"></i></a>
                                                            <a href="#" onclick="DeletePopUp(@item.Id)" class="text-red alert-confirm " data-toggle="tooltip" data-placement="top" title="" data-original-title="Delete"><i class="icofont icofont-delete-alt"></i></a>
                                                        </td>

                                                    </tr>
                                                }


                                            </tbody>

                                        </table>
                                        Page @(Model.PageCount < Model.PageNumber ? 0 :
                                        Model.PageNumber) of @Model.PageCount

                                        @Html.PagedListPager(Model, page => Url.Action("Index",
                                        new { @page = page }))
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>


@section scripts{
    <script type="text/javascript">


        function filter() {

            var transferType = $("#TransferType").val();
            var transferMethod = $("#TransferMethod").val();
            var sendingCurrency = $("#SendingCurrency").val();
            var receivingCurrency = $("#ReceivingCurrency").val();
            var agent = $("#Agent").val();

            window.location.href = "/Admin/TransferExchangeRateByCurrency/Index?SendingCountry=" + sendingCurrency + "&ReceivingCountry=" + receivingCurrency + "&TransferType=" + transferType + "&Agent=" + agent + "&TransferMethod=" + transferMethod;

        }
        function DeletePopUp(id) {
            Riddha.UI.Confirm("Are you sure you want to Delete?", function () {
                Riddha.ajax.get("/Admin/TransferExchangeRateByCurrency/Delete?id=" + id, null)
                    .done(function (result) {
                        if (result.Data == true) {
                            Riddha.UI.SuccessPopUp(result.Message, "Success", 0);
                        }
                        else {
                            Riddha.UI.Alert(result.Message, "Warning", 0);
                        }
                    });
            });
        }


    </script>
}


