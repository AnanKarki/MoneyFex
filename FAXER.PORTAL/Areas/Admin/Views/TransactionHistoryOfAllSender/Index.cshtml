@model FAXER.PORTAL.Areas.Admin.ViewModels.SenderTransactionActivityWithSenderDetails
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Areas/Admin/css/toastr.min.css" rel="stylesheet" />
@{
    ViewBag.Title = "Index";
    //Layout = "~/Areas/Admin/Views/Shared/New_Layout.cshtml";
    Layout = "~/Areas/Admin/Views/Shared/New_Layout.cshtml";
    string Status = ViewBag.Status;
    int TotalPageCount = ViewBag.NumberOfPage;
    int CurrentpageCount = ViewBag.CurrentpageCount;

}
@*<div id="page-wrapper">
        <div class="row">
            <div class="col-md-12">
                <div class="white-box">

                    <div class="card-header border-bottom">
                        @if (TempData["message"] != null)
                        {
                            try
                            {
                                if (TempData["status"].ToString() == "true")
                                {
                                    <label class="text-danger">@TempData["message"]</label>
                                }
                                else
                                {
                                    <label class="text-success">@TempData["message"]</label>
                                }
                            }
                            catch (Exception)
                            {

                            }

                        }
                        <h2 class="f-left m-t-5 m-b-0" style="float:left;">Sender Transaction Statement </h2>

                    </div>

                    <div class="col-md-12">
                        <hr />
                        <div class="col-lg-4">
                                <div class="form-group">
                                    <select class="form-control" id="Month" name="Month" onchange="filter();">
                                        <option value="0">Select Month </option>
                                        <option value="1">January</option>
                                        <option value="2">February</option>
                                        <option value="3">March</option>
                                        <option value="4">April</option>
                                        <option value="5">May</option>
                                        <option value="6">June</option>
                                        <option value="7">July</option>
                                        <option value="8">August</option>
                                        <option value="9">September</option>
                                        <option value="10">October</option>
                                        <option value="11">November</option>
                                        <option value="12">December</option>

                                    </select>
                                </div>
                            </div>

                        <div class="col-lg-4">
                            <div class="form-group">
                                <select class="form-control" id="TransferMethod" name="TransferMethod" onchange="filter();" value="@ViewBag.TransferMethod">
                                    <option value="0">All</option>
                                    <option value="1">MobileWallet</option>
                                    <option value="2">KiiPayWallet</option>
                                    <option value="3">BillPayment</option>
                                    <option value="4">ServicePayment</option>
                                    <option value="5">CashPickUp</option>
                                    <option value="6">BankDeposit</option>
                                </select>
                            </div>
                        </div>


                    </div>

                    <div class="hideoption id=" pop"">
                        <div class="btn-  pull-left">
                            <button href="" class="btn btn-success btn-sm  waves-effect waves-light">
                                <span class="btn-label"><i class="fa fa-envelope"></i></span> SMS
                            </button>
                            <button data-toggle="modal" data-target="#emailpopup" href="" class="btn btn-warning btn-sm  waves-effect waves-light">
                                <span class="btn-label"><i class="fa fa-envelope"></i></span> Email
                            </button>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="table-responsive">

                        <table class="table table-bordered table-striped csvprint  " cellspacing="0" width="300%">

                            <thead>
                                <tr>

                                    <td><b>SN</b></td>
                                    <td><b>Sending Country</b></td>
                                    <td><b>Receiving Country</b></td>
                                    <td><b>Sender</b></td>
                                    <td><b>Receiver</b></td>
                                    <td><b>Amount</b></td>
                                    <td><b>Fee</b></td>
                                    <td><b>Identifier</b></td>
                                    <td><b>Date</b></td>
                                    <td><b>Time</b></td>
                                    <td><b>Responsible</b></td>
                                    <td><b>Status</b></td>
                                    <td><b>Action</b></td>
                                </tr>
                            </thead>
                            <tbody style="margin-bottom: 30px !important;">

                                @{ int i = 0;}
                                @foreach (var item in Model.SenderTransactionStatement)
                                {
                                    i++;
                                    <tr>
                                        <td>@i</td>
                                        <td>@item.SendingCountry</td>
                                        <td>@item.ReceivingCountry</td>
                                        <td>
                                            <a href="@Url.Action("Index", "SenderTransactionActivity", new { @Area = "Admin", SenderId = item.SenderId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.All })">
                                                @item.SenderName

                                            </a>
                                        </td>
                                        <td>@item.ReceiverName</td>
                                        <td>
                                            @item.Amount
                                        </td>
                                        <td>
                                            @item.Fee
                                        </td>
                                        @if (item.TransferMethod == "Bank Deposit")
                                        {

                                            <td>

                                                <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.BankDeposit, SenderId = item.SenderId })">
                                                    @item.identifier
                                                </a>
                                            </td>

                                        }
                                        else if (item.TransferMethod == "Cash Pickup")
                                        {
                                            <td>
                                                <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.CashPickUp, SenderId = item.SenderId })">
                                                    @item.identifier
                                                </a>
                                            </td>
                                        }

                                        else if (item.TransferMethod == "Service Payment")
                                        {
                                            <td>
                                                <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.ServicePayment, SenderId = item.SenderId })">

                                                    @item.identifier
                                                </a>Bn
                                            </td>
                                        }
                                        else if (item.TransferMethod == "Bill Payment")
                                        {
                                            <td>
                                                <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.BillPayment, SenderId = item.SenderId })">

                                                    @item.identifier
                                                </a>
                                            </td>
                                        }
                                        else if (item.TransferMethod == "KiiPay Wallet")
                                        {
                                            <td>
                                                <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.KiiPayWallet, SenderId = item.SenderId })">
                                                    @item.identifier
                                                </a>
                                            </td>
                                        }
                                        else if (item.TransferMethod == "Mobile Wallet")
                                        {
                                            <td>
                                                <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.MobileWallet, SenderId = item.SenderId })">

                                                    @item.identifier
                                                </a>
                                            </td>
                                        }

                                        <td>@item.DateTime</td>
                                        <td>@item.TransactionTime</td>
                                        <td>

                                            @if (item.TransactionPerformedBy == "Sender")
                                            {
                                                <a href="@Url.Action("Index", "SenderTransactionActivity",
                                                        new { @Area = "Admin", SenderId = item.SenderId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.All })">

                                                    @item.TransactionPerformedBy
                                                </a>
                                            }
                                            else if (item.TransactionPerformedBy == "Agent")
                                            {

                                                <a href="@Url.Action("AgentDetails", "TransactionHistoryOfAllSender", new { @Area = "Admin", @AgentStaffId = item.AgentStaffId })">

                                                    @item.TransactionPerformedBy
                                                </a>
                                            }
                                            else
                                            {
                                                @item.TransactionPerformedBy
                                            }
                                        </td>
                                        @if (item.Reference != "" && item.Reference != null)
                                        {
                                            <td>@item.TransactionStatusForAdmin ( @item.Reference )</td>
                                        }
                                        else
                                        {

                                            <td>@item.TransactionStatusForAdmin </td>
                                        }
                                        <td>
                                            @if (item.IsAbnormalTrans == true)
                                            {

                                                if (item.TransferMethod == "Mobile Wallet")
                                                {
                                                    <a href="@Url.Action( "ReInitialMobileTransfer", "TransactionHistoryOfAllSender" , new { id = item.TransactionId })" class="btn btn-danger">Re-Initate</a>
                                                }
                                                else if (item.TransferMethod == "Bank Deposit")
                                                {
                                                    <a href="@Url.Action("ReInitialBankDepositTransfer", "TransactionHistoryOfAllSender", new { id = item.TransactionId })" class="btn btn-danger">Re-Initate</a>
                                                }
                                            }

                                            @if (item.ReceivingCountry == "Cameroon" && item.TransferMethod == "Mobile Wallet" && item.Status != "Paid")
                                            {
                                                <a href="@Url.Action("ConfirmMobileTransferTransaction", "TransactionHistoryOfAllSender", new { id = item.TransactionId })" class="btn btn-success">Confirm </a>

                                            }


                                            @if (item.IsAwaitForApproval == true)
                                            {
                                                <a class="btn btn-danger" onclick="ApproveTransaction('@item.TransactionId' , '@item.TransactionServiceType')">Approve </a>

                                            }


                                            <a></a>

                                        </td>

                                    </tr>

                                }

                            </tbody>
                        </table>
                        <div class="clearfix mt100"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>*@

<!---->
@*<div class="pcoded-content">
        <div class="pcoded-inner-content">

            <div class="main-body">
                <div class="page-wrapper">

                    <div class="page-body">
                        <div class="row">
                            @if (TempData["message"] != null)
                            {
                                try
                                {
                                    if (TempData["status"].ToString() == "true")
                                    {
                                        <label class="text-danger">@TempData["message"]</label>
                                    }
                                    else
                                    {
                                        <label class="text-success">@TempData["message"]</label>
                                    }
                                }
                                catch (Exception)
                                {

                                }

                            }
                            <div class="col-sm-12">

                                <div class="card">


                                    <div class="card-header border-bottom">


                                        @if (ViewBag.SenderId != 0)
                                        {
                                            <h4 class="f-left f-left m-t-5 m-b-0">
                                                <h4>Sender Transaction Statement <label class="text-primary">@Model.SenderName </label> </h4>
                                                <span>
                                                    Account No: @Model.SenderAccountNumber
                                                    <br>Country: @Model.SenderCountry
                                                </span>
                                            </h4>
                                        }
                                        else
                                        {
                                            <h4 class="f-left f-left m-t-5 m-b-0">

                                                Recent Transactions

                                            </h4>


                                        }

                                        <button onclick="window.history.go(-1);" class=" btn btn-primary f-right btn-round">
                                            <i class="fa fa-angle-left m-r-5"></i> Back
                                        </button>
                                    </div>

                                    <div class="card-body">
                                        <div class="row m-t-20 m-b-20">
                                            <!--  -->
                                            <div class="col-xl-3 col-md-6">
                                                <div class="form-group">
                                                    <input type="text" name="dates" class="form-control form-control-round form-control-bold" placeholder="From to Date" id="dates" onchange="filter();">
                                                </div>
                                            </div>
                                            <!--  -->
                                            <!--  -->
                                            <div class="col-xl-3 col-md-6">
                                                <div class="form-group">
                                                    @Html.DropDownList("SendingCountry", (IEnumerable<SelectListItem>)ViewBag.SendingCountries, "Select Sending Country", new { @class = "form-control form-control-round form-control-bold", @id = "SendingCountry", @onchange = "filter();" })
                                                </div>
                                            </div>
                                            <!--  -->
                                            <!--  -->
                                            <div class="col-xl-3 col-md-6">
                                                <div class="form-group">
                                                    @Html.DropDownList("ReceivingCountry", (IEnumerable<SelectListItem>)ViewBag.ReceivingCountries, "Select Receiving Country", new { @class = "form-control form-control-round form-control-bold", @id = "ReceivingCountry", @onchange = "filter();" })
                                                </div>
                                            </div>
                                            <!--  -->
                                            <!--  -->
                                            <div class="col-xl-3 col-md-6">
                                                <div class="form-group">
                                                    <select class="form-control form-control-round form-control-bold" id="TransferMethod" name="TransferMethod" onchange="filter();" value="@ViewBag.TransferMethod">
                                                        <option value="0">All</option>
                                                        <option value="1">MobileWallet</option>
                                                        <option value="2">KiiPayWallet</option>
                                                        <option value="3">BillPayment</option>
                                                        <option value="4">ServicePayment</option>
                                                        <option value="5">CashPickUp</option>
                                                        <option value="6">BankDeposit</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <!--  -->
                                        </div>
                                        <div class="dt-responsive table-responsive">
                                            <table class="table table-striped table-bordered  print">
                                                <thead>
                                                    <tr>
                                                        <th>#SN</th>
                                                        <th>Sending Country</th>
                                                        <th>Receiving Country</th>
                                                        <th>Sender</th>
                                                        <th>Receiver</th>
                                                        <th>Amount + Fee</th>
                                                        <th>Identifier</th>
                                                        <th>Date & Time</th>
                                                        <td>Responsible</td>
                                                        <th>Status</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>


                                                    @{
                                                        int i = 0;}
                                                    @foreach (var item in Model.SenderTransactionStatement)
                                                    {
                                                        i++;
                                                        <tr>
                                                            <td>@i</td>
                                                            <td>@item.SendingCountry</td>
                                                            <td>@item.ReceivingCountry</td>
                                                            <td>
                                                                <a href="@Url.Action("Index", "SenderTransactionActivity", new { @Area = "Admin", SenderId = item.SenderId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.All })">
                                                                    @item.SenderName

                                                                </a>
                                                            </td>
                                                            <td>@item.ReceiverName</td>
                                                            <td>
                                                                @item.Amount<br />
                                                                @item.Fee
                                                            </td>

                                                            @if (item.TransferMethod == "Bank Deposit")
                                                            {

                                                                <td>

                                                                    <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.BankDeposit, SenderId = item.SenderId })">
                                                                        @item.identifier
                                                                    </a>
                                                                </td>

                                                            }
                                                            else if (item.TransferMethod == "Cash Pickup")
                                                            {
                                                                <td>
                                                                    <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.CashPickUp, SenderId = item.SenderId })">
                                                                        @item.identifier
                                                                    </a>
                                                                </td>
                                                            }

                                                            else if (item.TransferMethod == "Service Payment")
                                                            {
                                                                <td>
                                                                    <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.ServicePayment, SenderId = item.SenderId })">

                                                                        @item.identifier
                                                                    </a>
                                                                </td>
                                                            }
                                                            else if (item.TransferMethod == "Bill Payment")
                                                            {
                                                                <td>
                                                                    <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.BillPayment, SenderId = item.SenderId })">

                                                                        @item.identifier
                                                                    </a>
                                                                </td>
                                                            }
                                                            else if (item.TransferMethod == "KiiPay Wallet")
                                                            {
                                                                <td>
                                                                    <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.KiiPayWallet, SenderId = item.SenderId })">
                                                                        @item.identifier
                                                                    </a>
                                                                </td>
                                                            }
                                                            else if (item.TransferMethod == "Mobile Wallet")
                                                            {
                                                                <td>
                                                                    <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.MobileWallet, SenderId = item.SenderId })">

                                                                        @item.identifier
                                                                    </a>
                                                                </td>
                                                            }

                                                            <td>@item.DateTime @item.TransactionTime</td>


                                                            <td>

                                                                @if (item.TransactionPerformedBy == "Sender")
                                                                {
                                                                    <a href="@Url.Action("Index", "SenderTransactionActivity",
                                                    new { @Area = "Admin", SenderId = item.SenderId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.All })">

                                                                        @item.TransactionPerformedBy
                                                                    </a>
                                                                }
                                                                else if (item.TransactionPerformedBy == "Agent")
                                                                {

                                                                    <a href="@Url.Action("AgentDetails", "TransactionHistoryOfAllSender", new { @Area = "Admin", @AgentStaffId = item.AgentStaffId })">

                                                                        @item.TransactionPerformedBy
                                                                    </a>
                                                                }
                                                                else
                                                                {
                                                                    @item.TransactionPerformedBy
                                                                }
                                                            </td>
                                                            @if (item.Reference != "" && item.Reference != null)
                                                            {
                                                                <td>@item.TransactionStatusForAdmin ( @item.Reference )</td>
                                                            }
                                                            else
                                                            {

                                                                <td>@item.TransactionStatusForAdmin </td>
                                                            }


                                                            <td>
                                                                @if (item.IsAbnormalTrans == true)
                                                                {

                                                                    if (item.TransferMethod == "Mobile Wallet")
                                                                    {
                                                                        <a href="@Url.Action( "ReInitialMobileTransfer", "TransactionHistoryOfAllSender" , new { id = item.TransactionId })" class="btn btn-danger">Re-Initate</a>
                                                                    }
                                                                    else if (item.TransferMethod == "Bank Deposit")
                                                                    {
                                                                        <a href="@Url.Action("ReInitialBankDepositTransfer", "TransactionHistoryOfAllSender", new { id = item.TransactionId })" class="btn btn-danger">Re-Initate</a>
                                                                    }
                                                                }

                                                                @if (item.ReceivingCountry == "Cameroon" && item.TransferMethod == "Mobile Wallet" && item.Status != "Paid")
                                                                {
                                                                    <a href="@Url.Action("ConfirmMobileTransferTransaction", "TransactionHistoryOfAllSender", new { id = item.TransactionId })" class="btn btn-success">Confirm </a>

                                                                }


                                                                @if (item.IsAwaitForApproval == true && item.TransactionStatusForAdmin != "Abnormal")
                                                                {
                                                                    <a class="btn btn-danger" onclick="ApproveTransaction('@item.TransactionId' , '@item.TransactionServiceType')">Approve </a>

                                                                }


                                                                <a></a>

                                                            </td>

                                                        </tr>

                                                    }


                                                </tbody>

                                            </table>
                                        </div>

                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>*@

<div class="pcoded-content">
    <div class="pcoded-inner-content">

        <div class="main-body">
            <div class="page-wrapper">

                <div class="page-body">
                    <div class="row">
                        @if (TempData["message"] != null)
                        {
                            try
                            {
                                if (TempData["status"].ToString() == "true")
                                {
                                    <label class="text-danger">@TempData["message"]</label>
                                }
                                else
                                {
                                    <label class="text-success">@TempData["message"]</label>
                                }
                            }
                            catch (Exception)
                            {

                            }

                        }

                        <label class="text-success">@TempData["message"]</label>

                        <div class="col-sm-12">

                            <div class="card">

                                <div class="card-header border-bottom">
                                    <h4 class="f-left f-left m-t-5 m-b-0">
                                        Recent Transactions
                                        @*<label class="text-primary">Rohan </label>  <span>
                                                Account No: 15484814
                                                <br>Country: United Kingdom
                                            </span>*@
                                    </h4>
                                    @*<button onclick="window.history.go(-1);" class=" btn btn-primary f-right btn-round">
                                            <i class="fa fa-angle-left m-r-5"></i> Back
                                        </button>*@

                                    <a class=" btn btn-primary f-right btn-round" href="@Url.Action("Index")">
                                        <i class="fa fa-refresh m-r-5"></i>Refresh
                                    </a>

                                </div>

                                <div class="card-body">
                                    <div class="row m-t-20 m-b-20">
                                        <!--  -->
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">
                                                <input type="text" name="dates" class="form-control form-control-round form-control-bold" placeholder="From to Date" id="dates" onchange="filter();">
                                            </div>
                                        </div>
                                        <!--  -->
                                        <!--  -->
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">
                                                @Html.DropDownList("SendingCountry", (IEnumerable<SelectListItem>)ViewBag.SendingCountries, "Select Sending Country", new { @class = "form-control form-control-round form-control-bold", @id = "SendingCountry", @onchange = "filter();" })
                                            </div>
                                        </div>
                                        <!--  -->
                                        <!--  -->
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">
                                                @Html.DropDownList("ReceivingCountry", (IEnumerable<SelectListItem>)ViewBag.ReceivingCountries, "Select Receiving Country", new { @class = "form-control form-control-round form-control-bold", @id = "ReceivingCountry", @onchange = "filter();" })
                                            </div>
                                        </div>
                                        <!--  -->
                                        <!--  -->
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">

                                                <select class="form-control form-control-round form-control-bold" id="TransferMethod" name="TransferMethod" onchange="filter();" value="@ViewBag.TransferMethod">
                                                    <option value="0">All</option>
                                                    <option value="1">MobileWallet</option>
                                                    <option value="2">KiiPayWallet</option>
                                                    <option value="3">BillPayment</option>
                                                    <option value="4">ServicePayment</option>
                                                    <option value="5">CashPickUp</option>
                                                    <option value="6">BankDeposit</option>
                                                </select>
                                            </div>
                                        </div>


                                    </div>
                                    <div class="row m-t-20 m-b-20">
                                        <!--  -->
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">
                                                <input type="text" placeholder="Search By ReceiptNo" class="form-control form-control-round form-control-bold" name="SearchName" id="SearchName" onchange="filter();" value="@ViewBag.SearchString">
                                            </div>
                                        </div>
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">
                                                <input type="text" placeholder="Search By Sender Name" class="form-control form-control-round form-control-bold" name="SenderName" id="SenderName" onchange="filter();" value="@ViewBag.SenderName">
                                            </div>
                                        </div>
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">
                                                <input type="text" placeholder="Search By Receiver Name" class="form-control form-control-round form-control-bold" name="ReceiverName" id="ReceiverName" onchange="filter();" value="@ViewBag.ReceiverName">
                                            </div>
                                        </div>
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">
                                                <input type="text" placeholder="Search By Status" class="form-control form-control-round form-control-bold" name="Status" id="Status" onchange="filter();" value="@ViewBag.Status">
                                            </div>
                                        </div>
                                        <div class="col-xl-3 col-md-6">
                                            <div class="form-group">
                                                <input type="text" placeholder="Search By Telephone" class="form-control form-control-round form-control-bold" name="PhoneNumber" id="PhoneNumber" onchange="filter();" value="@ViewBag.PhoneNumber">
                                            </div>
                                        </div>

                                    </div>

                                    @if (FAXER.PORTAL.Common.AdminSession.StaffLoginLevel == FAXER.PORTAL.DB.SystemLoginLevel.Level1 ||
                                     FAXER.PORTAL.Common.AdminSession.StaffLoginLevel == FAXER.PORTAL.DB.SystemLoginLevel.Level2)
                                    {
                                        <div class="row m-t-20 m-b-20">

                                            <div class="col-xl-3 col-md-6">
                                                <div class="form-group">
                                                    @Html.DropDownList("SendingCurrency", (IEnumerable<SelectListItem>)ViewBag.SendingCurrencies, "Select Sending Currency", new { @class = "form-control form-control-round form-control-bold", @id = "SendingCurrency", @onchange = "filter();" })
                                                </div>
                                            </div>

                                            <div class="col-xl-3 col-md-6">
                                                <div class="form-group">
                                                    <select class="form-control form-control-round form-control-bold" id="transactionWithAndWithoutFee" name="transactionWithAndWithoutFee" onchange="filter();" value="@ViewBag.TransactionWithAndWithoutFee">
                                                        <option value="">Select Transaction With and Without Fee</option>
                                                        <option value="0">Transacaction With Fee</option>
                                                        <option value="1">Transacaction Without Fee</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-xl-3 col-md-6">
                                                <div class="form-group">
                                                    <select class="form-control form-control-round form-control-bold" id="ResponsiblePerson" name="ResponsiblePerson" onchange="filter();" value="@ViewBag.ResponsiblePerson">
                                                        <option value="">Select Responsible Person</option>
                                                        <option value="sender">Sender</option>
                                                        <option value="agent">Agent</option>
                                                        <option value="admin">Admin Staff</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-xl-3 col-md-6">
                                                <div class="form-group">
                                                    <select class="form-control form-control-round form-control-bold" id="SearchByStatus" name="SearchByStatus" onchange="filter();" value="@ViewBag.SearchByStatus">
                                                        <option value="">Select Status</option>
                                                        <option value="Paid">Paid</option>
                                                        <option value="Cancelled">Cancelled</option>
                                                        <option value="Payment Pending">Pending</option>
                                                        <option value="Refunded">Refund</option>
                                                        <option value="In Progress (ID Check)">In Progress(ID check)</option>
                                                        <option value="In Progress ">In Progress(Compliance check)</option>
                                                        <option value="In Progress">In Progress(API Delay)</option>
                                                        <option value="In Progress">In Progress(Not on API)</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-xl-3 col-md-6">
                                                <div class="form-group">
                                                    <input type="text" placeholder="Enter MF Code" class="form-control form-control-round form-control-bold" name="MFCode" id="MFCode" onchange="filter();" value="@ViewBag.MFCode">
                                                </div>
                                            </div>
                                            <div class="col-xl-3 col-md-6">
                                                <div class="form-group">
                                                    <input type="text" placeholder="Enter Sender Email" class="form-control form-control-round form-control-bold" name="SenderEmail" id="SenderEmail" onchange="filter();" value="@ViewBag.SenderEmail">
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row m-t-20 m-b-20">
                                            <div class="btn-  pull-left">
                                                <div class="col-lg-4">
                                                    <a id="downloadButton" title="" class="btn btn-primary mb20 pull-left" onclick="ExportExcelOfTransactionStatement();">Download Excel File</a>
                                                </div>
                                            </div>

                                        </div>

                                        <div class="form-group pull-right">
                                            <strong>Total number :</strong> @Model.TotalNumberOfTransaction<br />
                                            <strong>Total Amount : </strong> @Model.TotalAmountWithCurrency<br />
                                            <strong> Fee paid    :</strong> @Model.TotalFeePaidwithCurrency
                                        </div>
                                    }

                                    <div class="row m-t-20 m-b-20">
                                        <div class="btn-  pull-left">

                                            <button class="btn btn-warning btn-sm  waves-effect waves-light" onclick="SendEmail()">
                                                <span class="btn-label"><i class="fa fa-envelope"></i></span> Email
                                            </button>

                                            <select name="EmailType" id="EmailType" class="custom-select">
                                                <option value="InProgress">Select Email Type</option>
                                                <option value="InProgress">In Progress</option>
                                                <option value="IdCheck">Id Check</option>
                                                <option value="InCorrectRecipient">InCorrect Recipient</option>
                                                <option value="ratesalert">Rates Alert</option>
                                                <option value="proofofsourceoffunds">ProofOfSourceOfFunds</option>
                                                @*<option value="RatesUp">Rates Up</option>
                                                    <option value="RatesDown">Rates Down</option>
                                                    <option value="RatesSame">Rate Same</option>*@
                                            </select>
                                        </div>
                                    </div>


                                    <div class="dt-responsive table-responsive" >
                                        <table id="basic-btn" class="table table-striped table-bordered no-sor">
                                            <thead>
                                                <tr>
                                                    <th align="center" class="no-sor">
                                                        <input id="checkAll" type="checkbox" class="check_boxa">
                                                        Select All
                                                    </th>
                                                    <th>#SN</th>
                                                    <th>Sending Country</th>
                                                    <th>Receiving Country</th>
                                                    <th>Sending Currency</th>
                                                    <th>Receiving Currency</th>
                                                    <th>Sender</th>
                                                    <th>Sender Email</th>
                                                    <th>Telephone No</th>
                                                    <th>Receiver</th>
                                                    <th>Amount + Fee</th>
                                                    <th>Identifier</th>
                                                    <th>Date & Time</th>
                                                    <th>Note</th>
                                                    <th>Responsible</th>
                                                    <th>Status</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>


                                                @{ int i = 0;}
                                                @foreach (var item in Model.SenderTransactionStatement)
                                                {
                                                    i++;
                                                    <tr>
                                                        <td>
                                                            <input type="checkbox" id="@item.TransactionId/@item.TransferMethod" name="@item.TransactionId/@item.TransferMethod"
                                                                   value="@item.TransactionId/@item.TransferMethod"
                                                                   onchange="AddTransactionList('@item.TransactionId' , '@item.TransferMethod')">
                                                        </td>
                                                        <td>@i</td>
                                                        <td>@item.SendingCountry</td>
                                                        <td>@item.ReceivingCountry</td>
                                                        <td>@item.SendingCurrency</td>
                                                        <td>@item.ReceivingCurrency</td>
                                                        <td>
                                                            @*<a href="@Url.Action("Index", "SenderTransactionActivity", new { @Area = "Admin", SenderId = item.SenderId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.All })">
                                                                    @item.SenderName
                                                                </a>*@

                                                            <a href="@Url.Action("NewTransactionStatement", "ViewRegisteredFaxers", new { SenderId = @item.SenderId })">

                                                                @item.SenderName
                                                            </a>

                                                        </td>
                                                        <td>
                                                            @item.SenderEmail
                                                        </td>

                                                        <td>@item.SenderPhoneNumber</td>
                                                        @*<td><a href="@Url.Action("ReceiverTransactionStatement" , "Receiver" , new { @area="admin" , @Id= item.RecipentId})">@item.ReceiverName</a> </td>*@
                                                        <td>
                                                            <a href="@Url.Action("ReceiverNewTransactionStatement", "Receiver", new { @area = "admin", @ReceiverId = item.RecipentId })">
                                                                @item.ReceiverName
                                                            </a>
                                                        </td>
                                                        <td>
                                                            @item.Amount <br />
                                                            @item.Fee
                                                        </td>

                                                        @if (item.TransferMethod == "Bank Deposit")
                                                        {

                                                            <td>

                                                                <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity",
        new
        {
            @Area = "Admin",
            id = item.TransactionId,
            transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.BankDeposit,
            SenderId = item.SenderId
        })">

                                                                    @item.identifier
                                                                    @if (item.IsReInitializedTransaction)
                                                                    {
                                                                        <br />
                                                                        <span>( @item.ReInitializedReceiptNo  )</span>

                                                                    }
                                                                </a>

                                                                @*@if (item.IsReInitializedTransaction)
                                                                    {
                                                                        <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity",
                                                                                        new
                                                                                        {
                                                                                            @Area = "Admin",
                                                                                            id = item.TransactionId,
                                                                                            transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.BankDeposit,
                                                                                            SenderId = item.SenderId
                                                                                        })"
                                                                           title="New Receipt No  : @item.ReInitializedReceiptNo &#013;DateTime: @item.ReInitializedDateTime &#013; Staff Name: @item.ReInitializeStaffName "
                                                                           class="text-danger">

                                                                            @item.identifier
                                                                        </a>
                                                                    }
                                                                    else
                                                                    {
                                                                        <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity",
                                                                                        new
                                                                                        {
                                                                                            @Area = "Admin",
                                                                                            id = item.TransactionId,
                                                                                            transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.BankDeposit,
                                                                                            SenderId = item.SenderId
                                                                                        })">

                                                                            @item.identifier
                                                                            @if (item.IsReInitializedTransaction)
                                                                            {
                                                                                <span>( @item.ReInitializedReceiptNo  )</span>

                                                                            }
                                                                        </a>

                                                                    }*@
                                                            </td>


                                                        }
                                                        else if (item.TransferMethod == "Cash Pickup")
                                                        {
                                                            <td>
                                                                <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.CashPickUp, SenderId = item.SenderId })">
                                                                    @item.identifier
                                                                    @if (item.IsReInitializedTransaction)
                                                                    {
                                                                        <br />
                                                                        <span>( @item.ReInitializedReceiptNo  )</span>
                                                                    }

                                                                </a>
                                                            </td>
                                                        }

                                                        else if (item.TransferMethod == "Service Payment")
                                                        {
                                                            <td>
                                                                <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.ServicePayment, SenderId = item.SenderId })">

                                                                    @item.identifier
                                                                </a>
                                                            </td>
                                                        }
                                                        else if (item.TransferMethod == "Bill Payment")
                                                        {
                                                            <td>
                                                                <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.BillPayment, SenderId = item.SenderId })">

                                                                    @item.identifier
                                                                </a>
                                                            </td>
                                                        }
                                                        else if (item.TransferMethod == "KiiPay Wallet")
                                                        {
                                                            <td>
                                                                <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.KiiPayWallet, SenderId = item.SenderId })">
                                                                    @item.identifier
                                                                </a>
                                                            </td>
                                                        }
                                                        else if (item.TransferMethod == "Mobile Wallet")
                                                        {
                                                            <td>
                                                                <a href="@Url.Action("CashPickUpDetails", "SenderTransactionActivity", new { @Area = "Admin", id = item.TransactionId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.MobileWallet, SenderId = item.SenderId })">

                                                                    @item.identifier
                                                                    @if (item.IsReInitializedTransaction)
                                                                    {
                                                                        <br />
                                                                        <span>( @item.ReInitializedReceiptNo  )</span>
                                                                    }
                                                                </a>
                                                            </td>
                                                        }

                                                        <td>@item.DateTime @item.TransactionTime</td>

                                                        @*<td>

                                                                    @if (item.TransactionPerformedBy == "Sender")
                                                                    {
                                                                        <a href="@Url.Action("Index", "SenderTransactionActivity",
                                                            new { @Area = "Admin", SenderId = item.SenderId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.All })">

                                                                            @item.TransactionPerformedBy
                                                                        </a>
                                                                    }
                                                                    else if (item.TransactionPerformedBy == "Agent")
                                                                    {

                                                                        <a href="@Url.Action("AgentDetails", "TransactionHistoryOfAllSender", new { @Area = "Admin", @AgentStaffId = item.AgentStaffId })">

                                                                            @item.TransactionPerformedBy
                                                                        </a>
                                                                    }
                                                                    else
                                                                    {
                                                                        @item.TransactionPerformedBy
                                                                    }
                                                                </td>*@
                                                        <td>
                                                            @if (item.NoteCount > 0)
                                                            {
                                                                <a onclick="ShowPopUp('@item.TransactionId' , '@item.TransactionServiceType')" class="text-danger">
                                                                    <i class="fa fa-plus"> </i> Note
                                                                </a>
                                                            }
                                                            else
                                                            {
                                                                <a onclick="ShowPopUp('@item.TransactionId' , '@item.TransactionServiceType')" style="color:#007bff">
                                                                    <i class="fa fa-plus"> </i> Note
                                                                </a>
                                                            }

                                                        </td>
                                                        <td>

                                                            @if (item.TransactionPerformedBy == "Sender")
                                                            {
                                                                <a href="@Url.Action("Index", "SenderTransactionActivity",
new { @Area = "Admin", SenderId = item.SenderId, transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.All })">

                                                                    @item.TransactionPerformedBy
                                                                </a>
                                                            }
                                                            else if (item.TransactionPerformedBy == "Agent")
                                                            {

                                                                <a href="@Url.Action("AgentDetails", "TransactionHistoryOfAllSender", new { @Area = "Admin", @AgentStaffId = item.AgentStaffId })">

                                                                    @item.TransactionPerformedBy
                                                                </a>
                                                            }
                                                            else
                                                            {
                                                                @item.TransactionPerformedBy
                                                            }
                                                        </td>
                                                        @if (item.Reference != "" && item.Reference != null)
                                                        {
                                                            <td>@item.TransactionStatusForAdmin ( @item.Reference )</td>
                                                        }
                                                        else
                                                        {

                                                            <td>@item.TransactionStatusForAdmin </td>
                                                        }


                                                    <td>

                                                        <a class="btn btn-primary"
                                                           onclick="CheckPGStatus('@item.identifier' , '@item.TransactionServiceType')"
                                                           id="@item.TransactionId" style="color:white">Check Pay't</a>
                                                        @if (item.IsAbnormalTrans == true)
                                                        {

                                                            if (item.TransferMethod == "Mobile Wallet")
                                                            {
                                                                <a href="@Url.Action("ReInitialMobileTransfer", "TransactionHistoryOfAllSender", new { id = item.TransactionId })" class="btn btn-danger">Re-Initate</a>
                                                            }
                                                            else if (item.TransferMethod == "Bank Deposit")
                                                            {
                                                                <a href="@Url.Action("ReInitialBankDepositTransfer", "TransactionHistoryOfAllSender", new { id = item.TransactionId })" class="btn btn-danger">Re-Initate</a>
                                                            }
                                                        }

                                                        @if (item.ReceivingCountry == "Cameroon" && item.TransferMethod == "Mobile Wallet" && item.Status != "Paid")
                                                        {
                                                            //<a href="@Url.Action("ConfirmMobileTransferTransaction", "TransactionHistoryOfAllSender", new { id = item.TransactionId })" class="btn btn-success">Confirm </a>
                                                            <a class="btn btn-success" onclick="MobileDepositManualConfirm('@item.identifier')">Confirm </a>
                                                        }
                                                        @if (item.TransferMethod == "Bank Deposit" && item.IsManualApprovalNeeded)
                                                        {
                                                            <a class="btn btn-success" onclick="BankDepositManualConfirm('@item.identifier')">Confirm </a>
                                                        }


                                                        @if ((item.Status == "In progress" || item.TransactionStatusForAdmin == "On Hold" || item.TransactionStatusForAdmin == "Un Hold") && item.TransferMethod == "Bank Deposit")
                                                        {

                                                            <a class="btn btn-danger" onclick="CancelTransaction('@item.identifier')" id="@item.identifier">Cancel </a>
                                                        }
                                                        @if (item.TransferMethod == "Cash Pickup" && (item.Status == "Not Received" || item.Status == "Payment Pending"
                                                                    || item.Status == "In Progress"))
                                                        {
                                                            <a class="btn btn-danger" onclick="CancelCashPickUpTransaction('@item.TransactionId' , '@item.identifier')" id="@item.identifier">Cancel</a>
                                                        }

                                                        @if (item.TransferMethod == "Mobile Wallet" && (item.Status == "Payment Pending" || item.Status == "In Progress" || item.TransactionStatusForAdmin == "On Hold"))
                                                        {
                                                            <a class="btn btn-danger" onclick="CancelOtherWalletTransaction('@item.identifier')" id="@item.identifier">Cancel</a>
                                                        }

                                                        @if (item.IsAwaitForApproval == true)
                                                        {
                                                            <a class="btn btn-danger"
                                                               onclick="ApproveTransaction('@item.TransactionId' , '@item.TransactionServiceType')"
                                                               id="@item.TransactionId">Approve</a>
                                                        }


                                                    </td>

                                                    </tr>

                                                }

                                            </tbody>

                                        </table>

                                        @*Page @(Model.SenderTransactionStatement.PageCount < Model.SenderTransactionStatement.PageNumber ? 0 :
                                            Model.SenderTransactionStatement.PageNumber) of @Model.SenderTransactionStatement.PageCount*@


                                        @*<div id="pagination">

                                                @Html.PagedListPager(Model.SenderTransactionStatement, page => Url.Action("Index",
                                                    new
                                                    {
                                                        @page = page,
                                                        @id = page
                                                    }
                                                    ))
                                            </div>*@

                                        <div>

                                            <div class="form-group">
                                                @*Page @(Model.SenderDocumentationViewModel.PageCount < Model.SenderDocumentationViewModel.PageNumber ? 0 :
                                                    Model.SenderDocumentationViewModel.PageNumber) of @Model.SenderDocumentationViewModel.PageCount*@

                                                Page @ViewBag.PageNumber of @TotalPageCount
                                            </div>
                                            @if (TotalPageCount != 0)
                                            {
                                                <div class="form-group">

                                                    @{int pagecount = CurrentpageCount;}
                                                    <button style="color:white; background-color:#428bca; border-color:#428bca;" id="backButton" onclick="ChangeButton(false);">
                                                        <<
                                                    </button>
                                                    <div id="pageCountbtn">

                                                        @*@for (int buttonCount = 1; buttonCount <= ViewBag.ButtonCount; buttonCount++)
                                                            {
                                                                pagecount++;
                                                                <button style="color:white; background-color:#428bca; border-color:#428bca;">
                                                                    @pagecount
                                                                </button>
                                                            }*@
                                                        @for (int buttonCount = 1; buttonCount <= 10; buttonCount++)
                                                        {
                                                            pagecount++;
                                                            <button style="color:white; background-color:#428bca; border-color:#428bca;">
                                                                @pagecount
                                                            </button>
                                                        }
                                                    </div>
                                                    <span style="display:none" id="pagecount">@pagecount</span>
                                                    @if (TotalPageCount > 10 && TotalPageCount != pagecount)
                                                    {
                                                        <button style="color:white; background-color:#428bca; border-color:#428bca;" id="nextButton" onclick="ChangeButton(true);">
                                                            >>
                                                        </button>
                                                    }
                                                </div>
                                            }

                                            <div class="form-group">
                                                Display <select onchange="GetDataForPageSizeFilter()" id="PageSize">
                                                    <option value="10">
                                                        10
                                                    </option>
                                                    <option value="20">
                                                        20
                                                    </option>
                                                    <option value="40">
                                                        40
                                                    </option>
                                                    <option value="50">
                                                        50
                                                    </option>
                                                    <option value="100">
                                                        100
                                                    </option>
                                                    <option value="500">
                                                        500
                                                    </option>
                                                    <option value="1000">
                                                        1000
                                                    </option>

                                                </select> Transactions

                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>


<div class="modal" id="Message" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <button type="button" class="close ml-auto mr-3" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            <div class="modal-body">
                <p><span id="MessageText"></span></p>
            </div>

        </div>
    </div>
</div>

<div id="complianceAddNote" class="modal fade show" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Note</h5>
                <a class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </a>
            </div>


            <div class="modal-body">

                <a onclick="AddNewNotePopup();" @*data-toggle="modal" data-dismiss="modal" aria-label="Close" data-target="#addnewnote"*@ class="btn btn-primary  btn-round m-b-10">Add New Note</a>
                <div class="table-responsive">


                    <table class="table table-bordered" id="Note">
                        <thead>
                            <tr>
                                <th>Notes</th>
                                <th>Date</th>
                                <th>Time</th>
                                <th>Staff Name</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>

        </div>
    </div>
</div>

<div id="addnewnote" class="modal fade show" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" style="display: none; padding-left: 17px;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Note</h5>
                <a class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </a>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Date:</th>
                                <th>Time:</th>
                                <th>Staff:</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                @Html.HiddenFor(x => x.TransactionStatementNote.TransactionId, new { @id = "TransactionId" })
                                @Html.HiddenFor(x => x.TransactionStatementNote.TransactionMethodName, new { @id = "TransactionMethod" })
                                <td colspan="3">
                                    @Html.TextAreaFor(x => x.TransactionStatementNote.Note, new { @class = "form-control", @rows = "8", @id = "TransactionNote" })

                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button onclick="saveNote()" class="btn btn-primary  btn-round" id="Notebtn">Save</button>
            </div>

        </div>
    </div>
    <!-- add note ad -->


</div>

<div class="modal" id="PGTransactionStatus" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Card Payment</h5>
                <a class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </a>
            </div>
            <div class="modal-body">
                <div id="PGTransactionResult"></div>
            </div>

        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/Riddha/knockout-2.3.0.js"></script>
    <script src="~/Scripts/Riddha/Riddha.Globals.ko.js"></script>
    <script src="~/Areas/Admin/css/toastr.js"></script>

    <script type="text/javascript">


        var CurrentpageCount = '@ViewBag.CurrentpageCount';
        
        function GetDataForPageSizeFilter() {
            var pageSize = $("#PageSize :selected").val();
            var page = 1;
            //window.location.href = "/Admin/TransactionHistoryOfAllSender/Index?PageSize=" + size;
            filter(page , pageSize);
        }

       $("#PageSize").val('@ViewBag.PageSize')

        $("#pagination a").each(function () {
            $($(this)[0]).removeAttr('href');
            $($(this)[0]).click(function () {
               var page = $(this)[0].text;
                filter(page);
            })
        })

           var transactionId = 0;
           var transactionMethod ="";
           function TransactionModel(item) {
                          var self = this;
                          item = item || {};
                          self.TransactionId = ko.observable(item.TransactionId || 0);
                          self.Method = ko.observable(item.Method || 0);
            }

        function PGTransactionStatusModel(item) {

            var pgTransactionmodel = {
                Status : item.Status,
                Amount : item.Amount,
                Reference : item.Reference,
                Date : item.Date
            }
            return pgTransactionmodel;


        };

        function CheckPGStatus(identifier , transferMethod)
        {
            $.getJSON("/Admin/TransactionHistoryOfAllSender/CheckPGStatus?refno=" + identifier + "&transferMethod=" + transferMethod, function (result) {
                $("#PGTransactionResult p").remove();
                var pgTransactionmodel = PGTransactionStatusModel(result.Data);
                for (var item in pgTransactionmodel) {

                    $("#PGTransactionResult").append('<p>' + '<b> ' + item + '</b> :' + pgTransactionmodel[item] + '</p>');
                }
                $("#PGTransactionStatus").modal('show');
            });

        }

        function BankDepositManualConfirm(identifier) {
            $.getJSON("/Admin/TransactionHistoryOfAllSender/ManualApproveTransaction?refno=" + identifier , function (result) {
                $("#PGTransactionResult p").remove();
                
                $("#PGTransactionResult").append('<p>' + result.Data + '</p>');
              
                $("#PGTransactionStatus").modal('show');
            });

        }
        function MobileDepositManualConfirm(identifier) {
            $.getJSON("/Admin/TransactionHistoryOfAllSender/ConfirmMobileTransfer?refno=" + identifier, function (result) {
                $("#PGTransactionResult p").remove();

                $("#PGTransactionResult").append('<p>' + result.Data + '</p>');

                $("#PGTransactionStatus").modal('show');
            });

        }
        function ExportExcelOfTransactionStatement() {
            var date = $('input[name="dates"]').val();
            if (date == "" || date == undefined) {
                return toastr.warning('Select Date Range to Download Excel File');
            }

            var TransferMethod = $("#TransferMethod").val();
            var SendingCountry = $("#SendingCountry ").val();
            var ReceivingCountry = $("#ReceivingCountry").val();
            var searchParam = $("#SearchName").val();
            var senderName = $("#SenderName").val();
            var receiverName = $("#ReceiverName").val();
            var Status = $("#Status").val();
            var telephone = $("#PhoneNumber").val();
            var SendingCurrency = $("#SendingCurrency").val();
            var transactionWithAndWithoutFee = $("#transactionWithAndWithoutFee").val();
            var ResponsiblePerson = $("#ResponsiblePerson").val();
            var SearchByStatus = $("#SearchByStatus").val();
            var MFCode = $("#MFCode").val();
            var SenderEmail = $("#SenderEmail").val();
            var PageNum = 1;
            var PageSize= @Model.TotalNumberOfTransaction;
            window.location.href = "/Admin/TransactionHistoryOfAllSender/ExportExcelOfTransactionStatement?DateRange=" + date +
                "&TransferMethod=" + TransferMethod + "&SendingCountry=" + SendingCountry + "&ReceivingCountry=" + ReceivingCountry +
                "&searchParam=" + searchParam + "&senderName=" + senderName + "&receiverName=" + receiverName + "&Status=" + Status +
                "&telephone=" + telephone + "&SendingCurrency=" + SendingCurrency + "&transactionWithAndWithoutFee=" + transactionWithAndWithoutFee +
                "&ResponsiblePerson=" + ResponsiblePerson + "&SearchByStatus=" + SearchByStatus + "&MFCode=" + MFCode +
                "&SenderEmail=" + SenderEmail + "&PageNum=" + PageNum + "&PageSize=" + PageSize  ;

            @*var searchParamVm = {
                TransactionServiceType: TransferMethod || 0,
                SendingCountry: SendingCountry || '',
                ReceivingCountry: ReceivingCountry || '',
                DateRange: date || '',
                searchString: searchParam || '',
                SenderName: senderName || '',
                ReceiverName: receiverName || '',
                Status: Status || '',
                PhoneNumber: telephone || '',
                SendingCurrency: SendingCurrency || '',
                TransactionWithAndWithoutFee: transactionWithAndWithoutFee || '',
                ResponsiblePerson: ResponsiblePerson || '',
                SearchByStatus: SearchByStatus || '',
                MFCode: MFCode || '',
                SenderEmail: SenderEmail || '',
                CurrentpageCount: CurrentpageCount || 0,
                PageNum:  1,
                PageSize: @Model.TotalNumberOfTransaction,
            };
            Riddha.ajax.post("/Admin/TransactionHistoryOfAllSender/ExportExcelOfTransactionStatement", ko.toJS(searchParamVm))
                .done(function (result) {
                    toastr.success('success');
                });*@
        }

            var self = this;
            self.Transaction = ko.observable();

                        //var TransactionList = [];
        self.TransactionList = ko.observableArray([]);
        function AddTransactionList(Id, method) {
            if (event.currentTarget.checked == true) {
                //TransactionList.push(new TransactionModel({ TransactionId: Id, Method: method }));
                self.TransactionList.push(ko.toJS( new TransactionModel({ TransactionId: Id, Method: method })));
            } else
            {
                var mapped =  ko.utils.arrayFirst(self.TransactionList(), function (item)
                {
                    if (item.TransactionId == Id && item.Method == method) {
                        return item;
                    }
                })
                self.TransactionList.remove(mapped);
            }
        }

        $("#checkAll").click(function () {
          $('input:checkbox').not(this).prop('checked', this.checked);

             if (event.currentTarget.checked == true) {
                   self.TransactionList([]);
                   $("tbody tr").each(function () {
                       if ($(this).find("td")[0].children[0].checked) {
                           var model = $(this).find("td")[0].children[0].id;
                           var detail = model.split("/");
                           var trans = new TransactionModel({ TransactionId: detail[0], Method: detail[1] });
                           self.TransactionList.push(ko.toJS( trans));
                       }
                   });
             } else {
                self.TransactionList([]);
             }
        });
        function SendEmail() {
            if (ko.toJS(TransactionList().length) == 0) {
                return toastr.warning('select transaction');
            }

            var EmailType = $("#EmailType").val();
                  var data = {
                      Transactions: TransactionList,
                      EmailType: EmailType
            };

            Riddha.ajax.post("/Admin/TransactionHistoryOfAllSender/SendEMail", ko.toJS(data))
                .done(function (result) {
                    console.log('result aayo');
                    //Riddha.UI.Toast('Email Sent Successfully', 4);

                    return   toastr.success('Email Sent Successfully');

                      });

        }


        function ShowPopUp(Id, method) {
            transactionId = Id;
            transactionMethod = method;
            $("#complianceAddNote td").remove();
            $.getJSON("/Admin/TransactionHistoryOfAllSender/GetTransactionNote?TransactionId=" + Id ,
                function (result) {
                    var tr;
                    //Append each row to html table
                           for (var i = 0; i < result.result.length; i++) {
                    tr = $('<tr/>');
                    tr.append("<td>" + result.result[i].Note + "</td>");
                    tr.append("<td>" + result.result[i].CreatedDate + "</td>");
                    tr.append("<td>" + result.result[i].CreatedTime + "</td>");
                    tr.append("<td>" + result.result[i].CreatedByName + "</td>");
                    $('#Note').append(tr);
                }
                });

            $('#complianceAddNote').modal('show');
        }
        function AddNewNotePopup() {
            $("#TransactionId").val(transactionId);
            $("#TransactionMethod ").val(transactionMethod);
            $('#addnewnote').modal('show');
        }

       function saveNote() {

           $("#Notebtn").prop('disabled', true);
           var Note = $("#TransactionNote").val();
            var data = {
                TransactionId: transactionId,
                Note: Note,
                TransactionMethodName: transactionMethod,
            };
           Riddha.ajax.post("/Admin/TransactionHistoryOfAllSender/SaveNote", ko.toJS(data))
               .done(function (result) {
                   $("#Notebtn").prop('disabled', false);
                console.log('result aayo');
                $('#addnewnote').modal('hide');
                $('#complianceAddNote').modal('hide');
                return toastr.success('Note Added');
            });

       }
        function filter(page) {
           var TransferMethod = $("#TransferMethod").val();
            var SendingCountry = $("#SendingCountry ").val();
            var ReceivingCountry = $("#ReceivingCountry").val();
            var date = $('input[name="dates"]').val();
            var searchParam = $("#SearchName").val();
            var senderName = $("#SenderName").val();
            var receiverName = $("#ReceiverName").val();
            var Status = $("#Status").val();
            var telephone = $("#PhoneNumber").val();
            var SendingCurrency = $("#SendingCurrency").val();
            var transactionWithAndWithoutFee = $("#transactionWithAndWithoutFee").val();
            var ResponsiblePerson = $("#ResponsiblePerson").val();
            var SearchByStatus = $("#SearchByStatus").val();
            var MFCode = $("#MFCode").val();
            var SenderEmail = $("#SenderEmail").val();
            var pageSize = $("#PageSize").val();
            var searchParamVm = {
                TransactionServiceType: TransferMethod || 0 ,
                SendingCountry: SendingCountry || '',
                ReceivingCountry: ReceivingCountry || '',
                DateRange: date || '',
                searchString: searchParam || '',
                SenderName: senderName || '',
                ReceiverName: receiverName || '',
                Status: Status || '',
                PhoneNumber: telephone || '',
                SendingCurrency: SendingCurrency || '',
                TransactionWithAndWithoutFee: transactionWithAndWithoutFee || '',
                ResponsiblePerson: ResponsiblePerson || '',
                SearchByStatus: SearchByStatus || '',
                MFCode: MFCode || '',
                SenderEmail: SenderEmail || '',
                PageNum: page || 1,
                PageSize: pageSize || 10,
                CurrentpageCount: CurrentpageCount || 0,
            };
            post("/Admin/TransactionHistoryOfAllSender", searchParamVm);


        }

        function post(path, params, method = 'post') {

            // The rest of this code assumes you are not using a library.
            // It can be made less wordy if you use one.
            const form = document.createElement('form');
            form.method = method;
            form.action = path;

            for (const key in params) {
                if (params.hasOwnProperty(key)) {
                    const hiddenField = document.createElement('input');
                    hiddenField.type = 'hidden';
                    hiddenField.name = key;
                    hiddenField.value = params[key];
                    form.appendChild(hiddenField);
                }
            }

            document.body.appendChild(form);
            form.submit();
        }

       $(".applyBtn").click(function () {
           filter();
       });


       $('input[name="dates"]').val('@ViewBag.DateRange');
       $("#TransferType").val('@ViewBag.TransferType');
       $("#Month").val('@ViewBag.Month');
       $("#TransferMethod").val('@ViewBag.TransferMethod');
       $("#Status").val('@ViewBag.Status');

       $("#transactionWithAndWithoutFee").val('@ViewBag.TransactionWithAndWithoutFee');
       $("#ResponsiblePerson").val('@ViewBag.ResponsiblePerson');
       $("#SearchByStatus").val('@ViewBag.SearchByStatus');
       $("#MFCode").val('@ViewBag.MFCode');


       function ApproveTransaction(Id, method) {

           $.getJSON("/Admin/TransactionHistoryOfAllSender/ApproveHoldTransaction?Id=" + Id + "&method=" + method,
               function (result) {

                   if (result.result.Status == 1) {

                       $("#" + transactionId).hide();
                          $("#MessageText").text(result.result.Message);
                          $("#Message").modal('show');
                      }
                       else {

                           $("#MessageText").text(result.result.Message);
                           $("#Message").modal('show');

                       }

               });
       }

       function CancelTransaction(receiptNo) {
           $.getJSON("/TransferZeroWebHook/CancelTransactionByReceiptNo?receiptNo=" + receiptNo,
               function (result) {
                   $("#" + receiptNo).hide();
                       $("#MessageText").text(result.Message);
                   $("#Message").modal('show');
               });
       }
       //function CancelCashPickUpTransaction(receiptNo) {

       // $.getJSON("/TransferZeroWebHook/CancelCashPickUpTransactionByReceiptNo?receiptNo=" + receiptNo,
       //        function (result) {

       //            $("#" + receiptNo).hide();
       //                $("#MessageText").text(result.Message);
       //            $("#Message").modal('show');

       //        });
       //                         }


       function CancelCashPickUpTransaction(Id, receiptNo) {

                $.getJSON("/Admin/SenderTransactionActivity/CancelCashPickUpTransaction?transactionId=" + Id,

                    function (result) {
                        $("#" + receiptNo).hide();
                        $("#MessageText").text(result.Message);
                        $("#Message").modal('show');

                    });
       }

       function CancelOtherWalletTransaction(receiptNo) {
          $.getJSON("/TransferZeroWebHook/CancelOtherWalletTransactionByReceiptNo?receiptNo=" + receiptNo,
              function (result) {
                  $("#" + receiptNo).hide();
                      $("#MessageText").text(result.Message);
                  $("#Message").modal('show');
              });
        }
        function ChangeButton(isGoToNextPage) {
              var TotalNumberOfpage = '@ViewBag.NumberOfPage';
            var pageCount = $("#pagecount").text();
            GetPagignationButton(TotalNumberOfpage, pageCount, isGoToNextPage);
        }

        $("#pageCountbtn button").each(function () {
            $($(this)[0]).on('click', function () {
                var pageno = $(this).text().trim();
                console.log($(this).text());
                filter(pageno);
            });
        })

        ShowBackButton();
        function ShowBackButton() {
            if (@CurrentpageCount != 0) {
                $("#backButton").show();
            } else {
                $("#backButton").hide();
            }

            if ('@ViewBag.ButtonCount'< 10) {
                $("#nextButton").hide();
                for (var x ='@ViewBag.ButtonCount' ; x <= 10; x++) {
                try {
                    $("#pageCountbtn button")[x].value = 0;
                    $("#pageCountbtn button")[x].innerText = 0;
                    $("#pageCountbtn button")[x].style.visibility = 'hidden';
                } catch (e) {

                }
            }
           }

        }




    </script>
}
