@model FAXER.PORTAL.Areas.KiiPayPersonal.ViewModels.KiiPayEnterAmountTwoViewModel
@{
    ViewBag.Title = "BankAccountAmountAbroad";
    Layout = "~/Areas/KiiPayPersonal/Views/Shared/_Layout_KiiPayPersonal.cshtml";
}



<!--  -->
<div class="real_form pattern2 pdt40 ">
    <div class="container">

        <div class="row">
            <!-- Available balance -->
            <div class="col-lg-4 col-lg-offset-4 ">
                <div class="text-right wallet-balance  mb15">
                    <h5>Available balance</h5>
                    <h1 class="text-primary">@FAXER.PORTAL.Common.CardUserSession.LoggedCardUserViewModel.CardUserCurrencySymbol @FAXER.PORTAL.Common.CardUserSession.LoggedCardUserViewModel.BalanceOnCard </h1>
                </div>
            </div>
            <!-- Available balance -->
            @using (Html.BeginForm())
            {


                <div class="col-lg-6 col-lg-offset-3 col-md-6 col-md-offset-3 ">

                    <div class="login_signup mb50 clearfix text-center">
                        <div class="flex-container amount-group flex-middle">
                            <div>
                                <div class="userimage  ">
                                    <img src="@Model.PhotoUrl" alt="">
                                </div>
                            </div>
                            <div>
                                <span class="font-30 text-primary"> @Model.ReceiverName</span>
                            </div>
                        </div>

                        <div class="amount-group mb5  row ">

                            <div class="col-lg-5">
                                <label>Sending Amount</label>
                                @Html.TextBoxFor(model => model.SendingAmount, new { @type = "number", @class = "amount", @placeholder = FAXER.PORTAL.Common.CardUserSession.LoggedCardUserViewModel.CardUserCurrencySymbol + "0.00", @onchange= "calculateSummary('sending')", @id= "sendingAmount" })

                                <div class="gbpusd">
                                    @FAXER.PORTAL.Common.CardUserSession.LoggedCardUserViewModel.CardUserCurrency
                                </div>
                                @Html.ValidationMessageFor(model => model.SendingAmount, "", new { @class = "text-danger", @name= "sendingAmountValidation" })
                            </div>
                            <div class="col-lg-2">
                                <span class="text-primary font-20">OR</span>
                            </div>
                            <div class="col-lg-5">
                                <label>Receiving Amount</label>
                                @Html.TextBoxFor(model => model.ReceivingAmount, new { @class = "amount", @placeholder = Model.ReceivingCurrencySymbol + "0.00", @onchange = "calculateSummary('receiving')", @id= "receivingAmount" })

                                <div class="gbpusd">
                                    @Model.ReceivingCurrencyCode
                                </div>
                                @Html.ValidationMessageFor(model => model.ReceivingAmount, "", new { @class = "text-danger", @name= "receivingAmountValidation" })
                            </div>
                        </div>


                        <div class="pinside20">

                            <div class="estimate-calculator" style="">
                                <div class="wrapper">

                                    <dl>
                                        <dt>Fee</dt>
                                        <dd class="fee" data-outbound-currency="USD"> @FAXER.PORTAL.Common.CardUserSession.LoggedCardUserViewModel.CardUserCurrencySymbol <span name="Fee"> @Model.Fee</span></dd>
                                    </dl>
                                    <dl>
                                        <dt>You pay</dt>
                                        <dd class="fee" data-outbound-currency="USD"> @FAXER.PORTAL.Common.CardUserSession.LoggedCardUserViewModel.CardUserCurrency <span name="PayingAmount"> @Model.PayingAmount</span></dd>
                                    </dl>
                                    <dl>
                                        <dt>They receive</dt>
                                        <dd class="fee" data-outbound-currency="USD"> @Model.ReceivingCurrencySymbol <span name="ReceivingAmount"> @Model.ReceivingAmount </span> </dd>
                                    </dl>
                                    <div class="clearfix">

                                    </div>
                                </div>
                                <div class="exchange-rate-holder">
                                    Exchange rate
                                    <span data-outbound-currency="GBP">@FAXER.PORTAL.Common.CardUserSession.LoggedCardUserViewModel.CardUserCurrency 1</span> = <span class="exchange-rate" data-inbound-currency="GHS">@Model.ReceivingCurrencyCode @Model.ExchangeRate</span>
                                </div>
                            </div>


                        </div>

                    </div>
                    <div class="clearfix"></div>
                    @Html.HiddenFor(x=>x.Id)
                    @Html.HiddenFor(x=>x.ReceivingCurrencySymbol)
                    @Html.HiddenFor(x=>x.SendingCurrencySymbol)
                    @Html.HiddenFor(x=>x.ReceivingCurrencyCode)
                    @Html.HiddenFor(x=>x.SendingCurrencyCode)
                    @Html.HiddenFor(x=>x.PhotoUrl)
                    @Html.HiddenFor(x=>x.SendingAmount)
                    @Html.HiddenFor(x=>x.ReceivingAmount)
                    @Html.HiddenFor(x=>x.PayingAmount)
                    @Html.HiddenFor(x=>x.Fee)
                    @Html.HiddenFor(x=>x.ExchangeRate)
                    @Html.HiddenFor(x=>x.PaymentReference)
                    @Html.HiddenFor(x=>x.ReceiverName)
                    
                    <div class="text-center   clearfix">

                        <hr>

                        <button type="submit" class="btn btn-primary btn-lg   ">Send This Amount <i class="fa fa-chevron-right" aria-hidden="true"></i></button>
                        <div class="clearfix mb30"> </div>
                        <a href="@Url.Action("Index")" class=" "><i class="fa fa-chevron-left" aria-hidden="true"></i> Go Back </a>
                    </div>
                </div>
            }
            <!--  -->

        </div>

    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        function calculateSummary(value) {
            debugger;
            var letters = /[a-zA-Z ]+/;
            if (value == "sending") {

                var sendingAmount = $("#sendingAmount").val();

                if (sendingAmount.match(letters)) {
                    $("[name=sendingAmountValidation]").text('Invalid Value !');
                    return;
                }
                $("[name=sendingAmountValidation]").text('');
                $("[name=receivingAmountValidation]").text('');
                $.getJSON("/KiiPayPersonal/BankAccountDeposit/calculatePaymentSummary?amount=" + sendingAmount + "&type=" + value, function (data) {
                    for (var item in data) {

                        var selector = '[name="' + item + '"]';
                        $(selector).val(data[item]);
                        $(selector).text(data[item]);
                    }
                });
                return;
            }
            else if (value == "receiving") {
                var receivingAmount = $("#receivingAmount").val();
                if (receivingAmount.match(letters)) {
                    $("[name=receivingAmountValidation]").text('Invalid Value !');
                    return;
                }
                $("[name=receivingAmountValidation]").text('');
                $("[name=sendingAmountValidation]").text('');
                $.getJSON("/KiiPayPersonal/BankAccountDeposit/calculatePaymentSummary?amount=" + receivingAmount + "&type=" + value, function (data) {
                    for (var item in data) {

                        var selector = '[name="' + item + '"]';
                        $(selector).val(data[item]);
                        $(selector).text(data[item]);
                    }
                });
                return;

            }
        }


    </script>

}






















