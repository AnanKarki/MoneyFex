@model FAXER.PORTAL.Models.SenderTransferMoneyBetweenWalletsVm


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_New_Dashboard_Layout.cshtml";
    string[] AvailableBalance =@Model.AvailableBalance.ToString().Split('.');
}
@using (Html.BeginForm())
{
    <div class="real_form pattern2 pdt40 ">
        <div class="container">
            @Html.HiddenFor(x => x.Currency)
            @Html.HiddenFor(x=>x.AvailableBalance)
            <div class="row">
                <!-- Available balance -->
                <div class="col-lg-4 col-lg-offset-4 ">
                    <div class="text-right wallet-balance  mb15">
                        <h5>Wallet Balance</h5>
                        <h1 class="text-primary">@Model.Currency@AvailableBalance[0].<small class="text-primary">@AvailableBalance[1]</small></h1>
                    </div>
                </div>
                <!-- Available balance -->
                <div class="col-lg-6 col-lg-offset-3 col-md-6 col-md-offset-3 ">


                    <div class="login_signup mb50 clearfix text-center">
                        <h3>Transfer Money Between Wallets </h3>
                        <hr>

                        <div class="form-group mb30">
                            <div class="form-group">

                                @Html.DropDownListFor(model => model.TransferringWalletId, (IEnumerable<SelectListItem>)ViewBag.Wallets, "Select Transferring Wallet", new { @class = "form-blue", id = "senderId", @onchange = "GetReceivers()" })
                                @Html.ValidationMessageFor(model => model.TransferringWalletId, "", new { @class = "text-danger" })

                            </div>
                        </div>



                        <div class="form-group mb30">
                            @Html.DropDownListFor(model => model.ReceivingWalletId, (IEnumerable<SelectListItem>)ViewBag.ReceivingWallets, "Select Receiving Wallet", new { @class = "form-blue" })
                            @Html.ValidationMessageFor(model => model.ReceivingWalletId, "", new { @class = "text-danger" })

                        </div>


                        <div class="amount-group  ">

                            <div>
                                <label>Enter Amount</label>
                                @Html.TextBoxFor(x => x.Amount, new { @class = "amount", @placeholder = "£0.00" })
                            </div>
                        </div>

                        <div class="gbp">
                            @Model.Currency
                        </div>

                        <label>Only possible with same currency</label>

                    </div>
                    <div class="clearfix"></div>


                    <div class="text-center   clearfix">
                        <hr>

                        <button type="submit" class="btn btn-primary btn-lg   ">Confirm & Transfer <i class="fa fa-chevron-right" aria-hidden="true"></i></button>
                        <div class="clearfix mb30"> </div>
                        <a href="@Url.Action("","")" class=" "><i class="fa fa-chevron-left" aria-hidden="true"></i> Go Back </a>
                    </div>
                </div>

                <!--  -->

            </div>

        </div>
    </div>

}

@section Scripts{
    
    <script type="text/javascript">

        function GetReceivers(){

            var senderId = $("#senderId").val();
            window.location.href = "/SenderTransferMoneyBetweenWallets/Index?TransferringWalletId=" + senderId;
        }

    </script>
    }