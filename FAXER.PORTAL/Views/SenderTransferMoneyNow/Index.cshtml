@model FAXER.PORTAL.Models.RecentTranferAndRecipientViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_New_Dashboard_Layout.cshtml";

    string btnText = "Send Again";
    string[] MeterBalance = Model.SenderMonthlyTransaction.SenderMonthyTransactionMeterBalance.ToString("0.00").Split('.');
    string currency = Model.SenderMonthlyTransaction.SenderCurrencySymbol;

    var ReceivingCountries = new List<FAXER.PORTAL.Models.CountryViewModel>(ViewBag.ReceivingCountries);

    string CountryNameWithCur = FAXER.PORTAL.Common.Common.GetCountryCurrency(ViewBag.ReceivingCountry) + " &nbsp;&nbsp; " +
    FAXER.PORTAL.Common.Common.GetCountryName(ViewBag.ReceivingCountry);

}

<section class="dashboard">
    <div class="container">
        <div class="row">
            <div class="col-lg-4 col-lg-offset-4 ">
                <div class="text-right wallet-balance mb30 ">
                    <h5>Monthly Transaction Meter</h5>
                    <h1 class="text-primary">@currency@MeterBalance[0].<small class="text-primary">@MeterBalance[1]</small></h1>
                </div>


            </div>
            <!--  -->
            <div class="col-lg-8 ">
                <!--  -->
                <div class="dashboard_body mb10">
                    @*@if (ViewBag.DocumentStatus == FAXER.PORTAL.DB.DocumentApprovalStatus.InProgress)
                        {
                            <div class="alert alert-info  fade in alert-dismissible" style="margin-top:18px;">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close" title="close">×</a>
                                Your identity verification is in progress...
                            </div>
                        }
                        else if (ViewBag.DocumentStatus == FAXER.PORTAL.DB.DocumentApprovalStatus.Disapproved)
                        {
                            <div class="alert alert-redinfo  fade in alert-dismissible" style="margin-top:18px;">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close" title="close">×</a>
                                Failed identity verification.
                            </div>
                        }
                        <div class="dashboard_body">*@

                    <div class=" clearfix">
                        <h3>Transfer Money</h3>

                        <div class=" ">

                            <div class="col-lg-12">
                                <p id="validationMsg" class="text-danger"></p>
                                <div class="exchange-rate-wraper-new hidden-xs hidden-sm">
                                    <h2>
                                        1&nbsp;<span data-outbound-currency="GBP" name="SendingCurrency"></span>&nbsp;=&nbsp;<span name="ExchangeRate"></span>&nbsp;<span class="exchange-rate" data-inbound-currency="GHS" name="ReceivingCurrency"></span> <a id="IsIntroductoryRate" href="avoide:javascript;" data-container="body" data-toggle="popover" data-placement="top" data-title="Rate Details" data-trigger="focus" data-content="The introductory rate is for your first transfer with MoneyFex">  <i class="fa fa-question"></i>  </a>
                                    </h2>

                                    <p id="IsIntroductoryFee">
                                        Fee:
                                        <del>
                                            <span name="SendingCurrencySymbol"></span><span name="Fee"></span>
                                        </del> (No fee for the first transaction)
                                    </p>
                                    <p id="IsNotIntroductoryFee" style="display:none">
                                        Fee: <span name="SendingCurrencySymbol"></span><span name="Fee"></span>
                                    </p>
                                </div>
                                <div class="exchange-rate-wraper-new hidden-lg hidden-md">
                                    <h2 style="font-size:18px">
                                        1&nbsp;<span data-outbound-currency="GBP" name="SendingCurrency">
                                        </span>&nbsp;=&nbsp;<span name="ExchangeRate"></span>&nbsp;
                                        <span class="exchange-rate" data-inbound-currency="GHS" name="ReceivingCurrency"></span>
                                        <a id="IsIntroductoryRate" href="avoide:javascript;" data-container="body" data-toggle="popover" data-placement="top" data-title="Rate Details" data-trigger="focus" data-content="The introductory rate is for your first transfer with MoneyFex">
                                            <i class="fa fa-question"></i>
                                        </a>
                                    </h2>

                                    <p id="IsIntroductoryFee2">
                                        Fee:
                                        <del>
                                            <span name="SendingCurrencySymbol"></span><span name="Fee"></span>
                                        </del> (No fee for the first transaction)
                                    </p>
                                    <p id="IsNotIntroductoryFee2" style="display:none">
                                        Fee: <span name="SendingCurrencySymbol"></span><span name="Fee"></span>
                                    </p>
                                </div>
                            </div>


                            <div class="col-lg-12">
                                <div class="exchange-rate-wraper-new" style="background-color:white;display:none" id="ValidationResultdiv">
                                    <p class="text-danger" id="ValidationResult">
                                    </p>
                                </div>
                                <!--  -->
                                <div class="mf-form-calculator">
                                    <span class="mf-calculator-label">You send  </span>
                                    <input type="number" id="SendingAmount" class="primary-placeholder" required placeholder="0.00" name="SendingAmount" onkeyup="GetPaymentSummary(false)" step="any">
                                    <div class="mf-currency text-right dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="true">
                                        <span class="mf-currency-select" id="sendingCountry">GBP&nbsp;&nbsp; from United Kingdom</span>
                                        @*<span class="mf-currency-select" data-currency="GBP" id="sendingCountry">GBP&nbsp;&nbsp; from United Kingdom</span>*@
                                        <div class="arrow-wrapper"><span class="select-arrow"></span></div>
                                    </div>
                                    <!--  -->
                                    <!--  -->


                                </div>
                                <!--  -->
                                <!--  -->
                                <div class="mf-form-calculator">
                                    <span class="mf-calculator-label">They receive</span>
                                    <input type="number" class=" primary-placeholder" id="ReceivingAmount" placeholder="0.00" name="ReceivingAmount" onkeyup="GetPaymentSummary(true)" step="any">


                                    <div class="mf-currency text-right dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="true">
                                        @*<span class="mf-currency-select" data-currency="GBP" id="receivingCountry">NGN &nbsp;&nbsp;Nigeria</span>*@
                                        <span class="mf-currency-select" data-currency="GBP" id="receivingCountry">@CountryNameWithCur</span>
                                        <div class="arrow-wrapper"><span class="select-arrow"></span></div>
                                    </div>
                                    <!--  -->


                                    <div class="currency-dropdown dropdown-menu" aria-labelledby=" dropdown-toggle" id="receivingCountryList">
                                        <div class="currency-search">
                                            <div class="search-input">
                                                <input type="search" name="" class=" input-currency-search" id="searchcurency1" placeholder="Type a currency / country">
                                            </div>
                                            <div class="clearfix"></div>
                                        </div>
                                        <ul id="currencylist1">
                                            @foreach (var item in ReceivingCountries)
                                            {

                                                <li class="currency-dropdown_option" onclick="OnReceivingCountryChange('@item.CountryCode', '@item.Currency')">
                                                    <div class="currency-dropdown_option_flag flag-icon   flag-icon-@item.CountryCode.ToLower()"></div>
                                                    <span class="currency-dropdown_option_text">@item.Currency&nbsp;&nbsp;@item.CountryName</span>
                                                </li>
                                            }
                                            @*<li class="currency-dropdown_option" id="GB" onclick="OnReceivingCountryChange('GB')">
                                                    <div class="currency-dropdown_option_flag flag-icon   flag-icon-gb"></div>
                                                    <span class="currency-dropdown_option_text">GBP&nbsp;&nbsp; United Kingdom</span>
                                                </li>
                                                <li class="currency-dropdown_option" id="BE" onclick="OnReceivingCountryChange('BE')">
                                                    <div class="currency-dropdown_option_flag flag-icon   flag-icon-be"></div>
                                                    <span class="currency-dropdown_option_text">EURO&nbsp;&nbsp; Belgium</span>
                                                </li>
                                                <li class="currency-dropdown_option" id="DE" onclick="OnReceivingCountryChange('DE')">
                                                    <div class="currency-dropdown_option_flag flag-icon   flag-icon-de"></div>
                                                    <span class="currency-dropdown_option_text">EURO&nbsp;&nbsp; Germany</span>
                                                </li>
                                                <li class="currency-dropdown_option " id="NG" onclick="OnReceivingCountryChange('NG')">
                                                    <div class="currency-dropdown_option_flag flag-icon flag-icon-ng "></div>
                                                    <span class="currency-dropdown_option_text">NGN&nbsp;&nbsp; Nigeria</span>
                                                </li>

                                                <li class="currency-dropdown_option " id="CM" onclick="OnReceivingCountryChange('CM')">
                                                    <div class="currency-dropdown_option_flag flag-icon flag-icon-cm "></div>
                                                    <span class="currency-dropdown_option_text">XAF&nbsp;&nbsp; Cameroon</span>
                                                </li>
                                                <li class="currency-dropdown_option " id="GH" onclick="OnReceivingCountryChange('GH')">
                                                    <div class="currency-dropdown_option_flag flag-icon flag-icon-gh "></div>
                                                    <span class="currency-dropdown_option_text">GHS&nbsp;&nbsp; Ghana</span>
                                                </li>

                                                <li class="currency-dropdown_option " id="UG" onclick="OnReceivingCountryChange('UG')">
                                                    <div class="currency-dropdown_option_flag flag-icon flag-icon-ug "></div>
                                                    <span class="currency-dropdown_option_text">UGX&nbsp;&nbsp; Uganda</span>
                                                </li>*@

                                        </ul>
                                    </div>
                                    <!--  -->
                                </div>
                                <!--  -->

                            </div>





                            <div class=" col-lg-12">

                                <div class="form-home">
                                    <div class="transfer-type">
                                        <h4 class="text-left">Transfer to a </h4>
                                        <div class="display-inline mb10 mt10" id="transferMethod">


                                            <label class="radio-box" id="bac">

                                                <img src="~/Content/images/icon/svg/bank.svg" width="50">
                                                <h4 class="mb15 text-center"> Bank Account</h4>
                                                <input type="radio" name="transferMethod" id="BankAccount" value="4" checked onchange="GetPaymentSummary(false)">
                                                <span class="checkmark"></span>
                                            </label>
                                            <label class="radio-box" id="wal">
                                                <img src="~/Content/Images/icon/svg/mobile-money.svg" width="50" />
                                                @*<img src="~/Content/images/icon/svg/mobile-money-disabled.svg" width="50">*@
                                                <h4 class="mb15 text-center"> Mobile Wallet</h4>
                                                <input type="radio" name="transferMethod" id="MobileWallet" value="3" onchange="GetPaymentSummary(false)">
                                                <span class="checkmark"></span>
                                            </label>


                                            <label class="radio-box" id="casp">
                                                <img src="~/Content/Images/icon/svg/cash-pickup.svg" width="50" />
                                                @*<img src="~/Content/images/icon/svg/cash-pickup-disabled.svg" width="50">*@
                                                <h4 class="mb15 text-center"> Cash Pickup</h4>
                                                <input type="radio" name="transferMethod" id="CashPickup" value="1" onchange="GetPaymentSummary(false)">
                                                <span class="checkmark"></span>
                                            </label>


                                        </div>
                                        <!--  -->
                                        <div class="error-alert hidden-lg">
                                            <span class="text-danger text-center" id="transferMethodvalidationMsg"> </span>

                                        </div>
                                        <!--  -->

                                    </div>
                                </div>
                            </div>

                            <div class="form-home col-lg-12  mb30">
                                <button onclick="TransferNow()" class="btn-transfer " id="TransferNow">Transfer</button>
                                <div class="clearfix"></div>
                            </div>
                            <!--<div class="dynamic-bank-list text-center hidden-xs hidden-sm">

                                <div class="col-lg-12">
                                    <h3 class="mb30" id="logoHeaderText"></h3>
                                    <ul class="owl-carousel owl-theme bank-list">-->
                            <!--  -->
                            <!--<li class="item">

                                <a href="">
                                    <img src="~/Content/images/bank/zenith_logo.png" alt="image name ">
                                </a>
                            </li>-->
                            <!--  -->
                            <!--  -->
                            <!--<li class="item">
                                <a href="">
                                    <img src="~/Content/images/bank/United-Bank-for-Africa.logo.BK.jpg" alt="image name ">
                                </a>
                            </li>-->
                            <!--  -->
                            <!--  -->
                            <!--<li class="item">
                                <a href="">
                                    <img src="~/Content/images/bank/FirstBank.logo.BK.jpg" alt="image name ">
                                </a>
                            </li>-->
                            <!--  -->
                            <!--  -->
                            <!--<li class="item">
                                <a href="">
                                    <img src="~/Content/images/bank/polaris_duoiha.jpg" alt="image name ">
                                </a>
                            </li>-->
                            <!--  -->
                            <!--  -->
                            <!--<li class="item">
                                <a href="">
                                    <img src="~/Content/images/bank/GTBank_Logo_r5xypf.png" alt="image name ">
                                </a>
                            </li>-->
                            <!--  -->
                            <!--  -->
                            <!--<li class="item">
                                <a href="">
                                    <img src="~/Content/images/bank/polaris_duoiha.jpg" alt="image name ">
                                </a>
                            </li>-->
                            <!--  -->
                            <!--</ul>
                                </div>

                            </div>-->

                        </div>



                    </div>

                </div>
                <!--  -->

            </div>
            @*</div>
                </div>*@
            <!--  -->
            <!--  -->
            <!-- -->
            <div class="col-lg-4">
                <div class="asidebox ">
                    <div class="title">
                        <h3>Recent Transfers</h3>
                        <hr>
                    </div>
                    <ul class="recent-t">

                        @if (Model.RecentTransfer.Count > 0)
                        {
                            foreach (var item in Model.RecentTransfer)
                            {
                                <li>
                                    <div class="card-r-t-body">
                                        <div class="icon">

                                            @if (item.StatusName == "Completed" || item.StatusName == "Paid")
                                            {
                                                <i class="fa fa-check"></i>
                                            }
                                            else
                                            {
                                                <i class="fa fa-exclamation"></i>
                                            }

                                        </div>
                                        <div class="right-details">

                                            <h4 class="text-secondary">@item.ReceiverName</h4>
                                            <span class="text-primary status">
                                                @item.ReceivingCurrrency @item.ReceivingAmount-
                                                @if (item.StatusName == "Completed" || item.StatusName == "Paid")
                                                {
                                                    <span class="text-success">@item.StatusName </span>
                                                }
                                                else
                                                {

                                                    <span class="text-warning">@item.StatusName </span>
                                                }


                                            </span>
                                            <span class="date">@item.Date</span>
                                        </div>
                                    </div>
                                    <div class="clearfix"> </div>
                                    <div class="card-r-t-footer">

                                        <a href="@Url.Action("TransactionDetail", "SenderTransactionHistory", new { @id = item.Id, @transactionService = item.TransactionServiceType  ,@Year =item.TransactionDate.Year})">Details</a>



                                        <a href="@Url.Action("RecentTransfersSendAgain", "SenderTransferMoneyNow", new { @id = item.Id, @transactionServiceType = item.TransactionServiceType })">

                                            @{
                                                switch (item.TransactionServiceType)
                                                {
                                                    case FAXER.PORTAL.Models.TransactionServiceType.All:
                                                        break;
                                                    case FAXER.PORTAL.Models.TransactionServiceType.MobileWallet:
                                                        if (item.StatusofMobileTransfer == FAXER.PORTAL.DB.MobileMoneyTransferStatus.PaymentPending)
                                                        {

                                                            btnText = "Pay Now";
                                                        }
                                                        else
                                                        {

                                                            btnText = "Send Again";
                                                        }
                                                        break;
                                                    case FAXER.PORTAL.Models.TransactionServiceType.KiiPayWallet:
                                                        break;
                                                    case FAXER.PORTAL.Models.TransactionServiceType.BillPayment:
                                                        break;
                                                    case FAXER.PORTAL.Models.TransactionServiceType.ServicePayment:
                                                        break;
                                                    case FAXER.PORTAL.Models.TransactionServiceType.CashPickUp:
                                                        break;
                                                    case FAXER.PORTAL.Models.TransactionServiceType.BankDeposit:
                                                        if (item.StatusOfBankDepoist == FAXER.PORTAL.DB.BankDepositStatus.PaymentPending)
                                                        {
                                                            btnText = "Pay Now";
                                                        }
                                                        else
                                                        {

                                                            btnText = "Send Again";
                                                        }
                                                        break;
                                                    default:
                                                        break;
                                                }

                                            }
                                            @btnText
                                        </a>
                                    </div>
                                </li>
                            }

                        }
                        else
                        {
                            <li>
                                <div class="card-r-t-body">
                                    <center>
                                        <label class="center">No Transactions</label>
                                    </center>
                                </div>
                            </li>
                        }
                    </ul>
                    <div class="viewall"><a href="@Url.Action("Index","SenderTransactionHistory")">View All</a></div>

                </div>

                <div class="asidebox mt10">
                    <div class="title">
                        <h3>My Recipients  <a href="@Url.Action("Index","AddRecipients")" class="add"><i class="fa fa-plus"></i> Add</a></h3>

                        <hr>
                    </div>
                    <ul class="recent-t">
                        @foreach (var item in Model.Recipients)
                        {
                            <li>
                                <div class="card-r-t-body">
                                    <div class="first-character">@item.ReciverFirstLetter</div>
                                    <div class="right-details">
                                        <h4 class="text-secondary">@item.ReceiverName</h4>
                                        <span class="ac-details">


                                            @if (item.Service == FAXER.PORTAL.DB.Service.BankAccount)
                                            {
                                                <span>
                                                    <i class="flag-icon flag-icon-@item.ReceiverCountryLower"></i>   @item.Country   Account No. @item.AccountNo
                                                </span>
                                            }
                                            else
                                            {
                                                <span>
                                                    <i class="flag-icon flag-icon-@item.ReceiverCountryLower"></i>  @item.Country   Mobile No. @item.MobileNo
                                                </span>

                                            }


                                        </span>

                                        @if (item.Service == FAXER.PORTAL.DB.Service.BankAccount)
                                        {

                                            <span class="text-primary">@item.BankName</span>
                                        }
                                        else if (item.Service == FAXER.PORTAL.DB.Service.MobileWallet)
                                        {
                                            <span class="text-primary">@item.MobileWalletProviderName</span>
                                        }
                                        else
                                        {
                                            <span class="text-primary">@item.ServiceName</span>
                                        }


                                    </div>
                                </div>
                                <div class="card-r-t-footer">


                                    @if (item.Service == FAXER.PORTAL.DB.Service.BankAccount)
                                    {
                                        <a href="@Url.Action("RecentTransfersSendAgain","SenderTransferMoneyNow" , new { @recipientId = item.Id , @transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.BankDeposit})">Send </a>

                                        <a href="@Url.Action("RecipientsBankAccount", "AddRecipients" , new { Id =item.Id})">Edit</a>
                                    }
                                    else if (item.Service == FAXER.PORTAL.DB.Service.MobileWallet)
                                    {
                                        <a href="@Url.Action("RecentTransfersSendAgain","SenderTransferMoneyNow" , new { @recipientId = item.Id , @transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.MobileWallet})">Send </a>
                                        <a href="@Url.Action("RecipientsMobileAccount", "AddRecipients" , new { Id =item.Id})">Edit</a>
                                    }
                                    else if (item.Service == FAXER.PORTAL.DB.Service.CashPickUP)
                                    {
                                        <a href="@Url.Action("RecentTransfersSendAgain","SenderTransferMoneyNow" , new { @recipientId = item.Id , @transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.CashPickUp})">Send </a>
                                        <a href="@Url.Action("RecipientsCashPickup", "AddRecipients", new { Id =item.Id})">Edit</a>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("RecentTransfersSendAgain","SenderTransferMoneyNow" , new { @recipientId = item.Id , @transactionServiceType = FAXER.PORTAL.Models.TransactionServiceType.KiiPayWallet})">Send </a>
                                        <a href="@Url.Action("RecipientsKiipayWallet", "AddRecipients", new { Id =item.Id})">Edit</a>

                                    }

                                    <a onclick="ConfirmationDeleteShow(@item.Id);">Delete</a>
                                </div>
                            </li>

                        }
                    </ul>
                    <div class="viewall"><a href="@Url.Action("RecipientsList","SenderTransferMoneyNow")">View All</a></div>
                </div>
            </div>

            <!--  -->
        </div>
    </div>
</section>
<!--  -->
<!-- withdrawal-code -->
<div class="modal fade" tabindex="-1" id="withdrawal-code" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-card" role="document">
        <div class="modal-content">
            <div class="modal-body  text-center">
                <div class="row">
                    <div class="col-lg-6 col-lg-offset-3">
                        <div class="form-group">
                            <h3>Select Virtual Account</h3>

                            <select name="" class="form-control">
                                <option>--Select Virtual Account --</option>

                                <option value="">Card 1</option>
                                <option value="">Card 1</option>

                            </select>
                        </div>
                    </div>
                    <hr class="clearfix">
                    <h1 class="text-center">Your code is  <br> <span class="text-primary"> 121547547</span></h1>
                </div>


            </div>
        </div>
    </div>
</div>
<!-- withdrawal-code -->
<!-- Identity Verification  -->
<!-- Identity Verification  -->
<!-- Delete  -->
<div id="confirmationdelete" class="modal fade in" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="CloseButton()">×</button>
                <h4 class="modal-title"> Confirmation</h4>
            </div>
            <div class="modal-body uk-text-center ">
                <div class="form-group">
                    <p class="mb0">Do you want to delete this recipient?</p>

                </div>
            </div>
            <div class="modal-footer text-center">
                <button type="button" class="btn btn-primary radius-20" data-dismiss="modal" onclick="DeleteRecipients()">Yes</button>

                <button type="button" class="btn btn-default radius-20" data-dismiss="modal" onclick="CloseButton()">No</button>
            </div>
        </div>

    </div>
</div>

<form name="form" id="acsurl" method="post" action="https://gateway.transact365.com/process/69511641-2e368c01ef">
    <div>
        <input type="hidden" name="PaReq" id="pareq" />
        <input type="hidden" name="TermUrl" id="termurl" />
        <input type="hidden" name="MD" id="md" />
    </div>
</form>

<!-- Delete  -->



@section Scripts
    {
    <script type="text/javascript">

        var selectedSendingCountry = "@ViewBag.SendingCountry";
        var selectedReceivingCountry = "@ViewBag.ReceivingCountry";
        var selectedSendingCurrency = "@ViewBag.SendingCurrency";
        var selectedReceivingCurrency = "@ViewBag.ReceivingCurrency";
        var SendingCountry = "";
        var ReceivingCountry = "";
        var selectedTransferMethod = '@ViewBag.TransferMethod';

        $("#confirmationdelete").modal('hide');

        SetSendingCountryText(selectedSendingCountry);
        function SetSendingCountryText(countrycode) {
            //var text = $("#" + countrycode).find("span").text();
            $("#sendingCountry").html(selectedSendingCurrency + " &nbsp;&nbsp; " + countrycode);
            $("#sendingCountry").attr('data-currency', selectedSendingCurrency);
            $("#receivingCountry").attr('data-currency', selectedReceivingCurrency);
            $("#receivingCountry").html(selectedReceivingCurrency + " &nbsp;&nbsp; " + selectedReceivingCountry);

        }

        function ConfirmationDeleteShow(id){
           sessionStorage.setItem("delete_item_id", id);
            $("#confirmationdelete").modal('show');
        }
        function DeleteRecipients()
        {
            var id = sessionStorage.getItem("delete_item_id")
            window.location.href = "/AddRecipients/Delete?Id="  + id;
        }
        function CloseButton() {
            //$("#IdentityVerification").hide();
            $("#confirmationdelete").modal('show');

        }

        //ViewBag.TransferMethod = "BankDeposit";
        //ViewBag.TransferMethod = "Mobile";
        //ViewBag.TransferMethod = "CashPickup";
        //$("#receivingCountryList li").each(function () {

        //    var id = $(this)[0].id;
        //    if (selectedReceivingCountry == id) {
        //        $("#receivingCountry").text($($(this).find('span')[0]).text());
        //    }
        //})
        function OnReceivingCountryChange(val , cur) {
            selectedTransferMethod = "";
            $("#receivingCountry").text($($(event.currentTarget).find('span')[0]).text());
            $("#receivingCountry").attr('data-currency', cur);
            selectedReceivingCountry = val;
            $("#SendingAmount").val(3);
            SendingCountry = selectedSendingCountry;
            ReceivingCountry = selectedReceivingCountry;
            EnableDisableServices(SendingCountry, ReceivingCountry, function () { GetPaymentSummary(false) }, cur);

            //$("#BankAccount")[0].checked = true;
        }
        function OnSendingCountryChange(val , cur) {
            selectedTransferMethod = "";
            $("#sendingCountry").text($($(event.currentTarget).find('span')[0]).text());
            $("#sendingCountry").attr('data-currency', cur);
            selectedSendingCountry = val;
            $("#SendingAmount").val(3);
            SendingCountry = selectedSendingCountry;
            ReceivingCountry = selectedReceivingCountry;

            var ReceivingCurrency = $("#receivingCountry").attr('data-currency');
            EnableDisableServices(SendingCountry, ReceivingCountry, function () { GetPaymentSummary(false) }, ReceivingCurrency) ;
            //CheckEnabledRadio();
            //$("#BankAccount")[0].checked = true;


        }
        function CalculateSummary(IsReceivingAmount) {

            SendingCountry = selectedSendingCountry;
            ReceivingCountry = selectedReceivingCountry;
            var ReceivingCurrency = $("#receivingCountry").attr('data-currency');
            EnableDisableServices(SendingCountry, ReceivingCountry, function () { GetPaymentSummary(IsReceivingAmount) }, ReceivingCurrency);

            //CheckEnabledRadio();
        }

        function Logos() {


            $.getJSON("/Home/GetUploadedServicesLogoInJson?sendingCountry=" + SendingCountry +
                "&receivingCountry=" + ReceivingCountry + "&transferMethod=" + transferMethodvalue,
                function (result) {


                    //$(".owl-wrapper div").remove();
                    //$("#logoHeaderText").text(result.HeaderText);

                    for (var item in result.LogoList) {
                     //   $(".owl-wrapper").append('<div class="owl-item" style="width: 110px;"> <li class="item"><a href = "" ><img src="' + result.LogoList[item] + '" alt="image name "></a></li> </div>')

                    }




                })

        }

        var validationResult = null;
        function GetPaymentSummary(IsReceivingAmount) {

            var SendingAmount = $("#SendingAmount").val();
            var ReceivingAmount = $("#ReceivingAmount").val();

            var SendingCurrency = $("#sendingCountry").attr('data-currency');
            var ReceivingCurrency = $("#receivingCountry").attr('data-currency');
            SendingCountry = selectedSendingCountry;
            ReceivingCountry = selectedReceivingCountry;
            var IsReceivingAmount = IsReceivingAmount;


            transferMethod = $("#transferMethod input[type='radio']:checked")[0].id;
            transferMethodvalue = 0;
            switch (transferMethod) {

                case "BankAccount":
                    transferMethodvalue = 4;
                    break;
                case "MobileWallet":
                    transferMethodvalue = 3;
                    break;
                case "CashPickup":
                    transferMethodvalue = 1;
                    break;
                default:
            }



            var data = {

                SendingAmount: SendingAmount,
                ReceivingAmount: ReceivingAmount,
                SendingCurrency: SendingCurrency,
                ReceivingCurrency: ReceivingCurrency,
                SendingCountry: SendingCountry,
                ReceivingCountry: ReceivingCountry,
                IsReceivingAmount: IsReceivingAmount,
                TransferMethod: transferMethodvalue
            };



            Riddha.ajax.post("/EstimationSummary/GetTransferSummary", data)
                .done(function (result) {

                    result = result.response;
                    for (var item in result) {

                        var selector = '[name="' + item + '"]';
                        $(selector).val(result[item]);
                        $(selector).text(result[item]);
                    }
                    if (result.Fee == 0) {
                        $('[name="Fee"]').text(result.ActualFee);
                    }
                    if (result.IsIntroductoryRate) {

                        $("#IsIntroductoryRate").show();
                    } else {
                        $("#IsIntroductoryRate").hide();
                    }

                    if (result.IsIntroductoryFee) {

                        if (result.Fee == 0) {
                            $("#IsIntroductoryFee").show();
                            $("#IsNotIntroductoryFee").hide();
                            $("#IsIntroductoryFee2").show();
                            $("#IsNotIntroductoryFee2").hide();
                        }

                        else {

                            $("#IsIntroductoryFee").hide();
                            $("#IsNotIntroductoryFee").show();
                            $("#IsIntroductoryFee2").hide();
                            $("#IsNotIntroductoryFee2").show();

                        }
                    } else {

                        $("#IsIntroductoryFee").hide();
                        $("#IsNotIntroductoryFee").show();
                        $("#IsIntroductoryFee2").hide();
                        $("#IsNotIntroductoryFee2").show();
                    }

                    var IsValid = result.IsValid;
                    if (IsValid.Data == false) {

                        validationResult = IsValid;
                        $("#ValidationResult").text(validationResult.Message);
                        $("#ValidationResultdiv").show();

                    } else {
                        validationResult = IsValid;
                        $("#ValidationResult").text("");
                        $("#ValidationResultdiv").hide();
                    }

                });
            //GetPaymentSummary
            //$.getJSON("/SenderTransferMoneyNow/GetPaymentSummary?SendingAmount="
            //    + SendingAmount +
            //    "&ReceivingAmount=" + ReceivingAmount +
            //    "&SendingCountry=" + SendingCountry +
            //    "&ReceivingCountry=" + ReceivingCountry +
            //    "&IsReceivingAmount=" + IsReceivingAmount +
            //    "&transferMethod=" + transferMethodvalue,
            //    function (result) {

            //        debugger;
            //        for (var item in result) {

            //            var selector = '[name="' + item + '"]';
            //            $(selector).val(result[item]);
            //            $(selector).text(result[item]);
            //        }
            //        if (result.Fee == 0) {
            //            $('[name="Fee"]').text(result.ActualFee);
            //        }
            //        if (result.IsIntroductoryRate) {

            //            $("#IsIntroductoryRate").show();
            //        } else {
            //            $("#IsIntroductoryRate").hide();
            //        }

            //        if (result.IsIntroductoryFee) {

            //            if (result.Fee == 0) {
            //                $("#IsIntroductoryFee").show();
            //                $("#IsNotIntroductoryFee").hide();
            //                $("#IsIntroductoryFee2").show();
            //                $("#IsNotIntroductoryFee2").hide();
            //            }

            //            else {

            //                $("#IsIntroductoryFee").hide();
            //                $("#IsNotIntroductoryFee").show();
            //                $("#IsIntroductoryFee2").hide();
            //                $("#IsNotIntroductoryFee2").show();

            //            }
            //        } else {

            //            $("#IsIntroductoryFee").hide();
            //            $("#IsNotIntroductoryFee").show();
            //            $("#IsIntroductoryFee2").hide();
            //            $("#IsNotIntroductoryFee2").show();
            //        }

            //        var IsValid = result.IsValid;
            //        if (IsValid.Data == false) {

            //            validationResult = IsValid;
            //            $("#ValidationResult").text(validationResult.Message);
            //            $("#ValidationResultdiv").show();

            //        } else {
            //            validationResult = IsValid;
            //            $("#ValidationResult").text("");
            //            $("#ValidationResultdiv").hide();
            //        }

            //    });

            Logos();
        }


        if ($("#SendingAmount").val() == "")
        {
            $("#SendingAmount").val('@ViewBag.SendingAmount');
            CalculateSummary();
        }




        $("#SendingAmount").focus(function () {

            if ($("#SendingAmount").val() == 3 || $("#SendingAmount").val() == 0) {

                $("#SendingAmount").val("");
                $("#ReceivingAmount").val("");
            }


        })

        $("#ReceivingAmount").focus(function () {

            if ($("#SendingAmount").val() == 3 || $("#SendingAmount").val() == 0) {

                $("#SendingAmount").val("");
                $("#ReceivingAmount").val("");
            }

        })



        $(document).on('data-selectedcountry', function () {

            alert('Data changed to: ' + "");
        });


        function TransferNow() {

            if (validationResult.Data == false) {
                $("#ValidationResult").text(validationResult.Message)
                $("#ValidationResult").show();
                return;
            }
            $("#ValidationResult").hide();
            var sendingAmount = $("#SendingAmount").val();
            if (sendingAmount <= 0) {

                $("#validationMsg").text("Please enter send amount greater than or equal to GBP 0");
                $("#validationMsg").show();
                return;
            }
            else if (sendingAmount > 50000) {


                $("#validationMsg").text("Please enter send amount less than or equal to GBP 50,000");
                $("#validationMsg").show();
                return;
            } else {
                $("#validationMsg").hide();
            }

            transferMethod = $("#transferMethod input[type='radio']:checked")[0].id;

            switch (transferMethod) {

                case "BankAccount":
                    window.location.href = "/senderBankAccountDeposit/Index";
                    break;
                case "MobileWallet":
                    window.location.href = "/SenderMobileMoneyTransfer/Index";
                    break;
                case "CashPickup":
                    window.location.href = "/SenderCashPickUp/Index";
                    break;
                default:
                    $("#transferMethodvalidationMsg").text("Select a service");
                    break;
            }
        }

        function Confirm() {
            debugger;
            var FileName = $("#FileName").val();

            if (FileName == "" || FileName == null || FileName == undefined) {

                $("#ChooseAfile").text("Choose file");

            }
          else {

                $("#UploadDocumentation").submit();

            }
        }
        @*if ('@ViewBag.DocumentStatus' == 'InProgress') {
            debugger;
            $("#TransferNow").prop("disabled", "disabled");
        }*@
        function repeat(accountNo, id) {

            window.location.href = "/SenderTransactionHistory/Repeat?accountNo=" + accountNo + "&id=" + id;
        };
        function repeatCashPickUp(MFCN, id) {

            window.location.href = "/SenderTransactionHistory/RepeatCashPickUp?MFCN=" + MFCN + "&id=" + id;
        };

        function repeatKiiPayWallet(MobileNo, id) {

            window.location.href = "/SenderTransactionHistory/RepeatKiiPayWallet?MobileNo=" + MobileNo + "&id=" + id;
        };

        function repeatPayForGoodsAndServices(MobileNo, id) {

            window.location.href = "/SenderTransactionHistory/RepeatPayForGoodsAndServices?MobileNo=" + MobileNo + "&id=" + id;
        };
        function repeatMobileWallet(MobileNo, id) {

            window.location.href = "/SenderTransactionHistory/RepeatMobileWallet?MobileNo=" + MobileNo + "&id=" + id;
        };
        function repeatBillPayment(MobileNo, id) {

            window.location.href = "/SenderTransactionHistory/RepeatBillPayment?MobileNo=" + MobileNo + "&id=" + id;
        };
        function repeatTopUp(MobileNo, id) {

            window.location.href = "/SenderTransactionHistory/RepeatTopUp?MobileNo=" + MobileNo + "&id=" + id;

        }

    </script>
}