@model FAXER.PORTAL.Models.EstimateFaxingAmount

@{
    ViewBag.Title = "FaxingAmount";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var FaxingCurrencySymbol = "";
    var FaxingCurrency = "";
    var ReceivingCurrency = "";
    var ReceivingCurrencySymbol = "";

    if (Model != null)
    {
        FaxingCurrencySymbol = Model.FaxingCurrencySymbol ?? "";
        FaxingCurrency = Model.FaxingCurrency ?? "";
        ReceivingCurrency = Model.ReceivingCurrency ?? "";
        ReceivingCurrencySymbol = Model.ReceivingCurrencySymbol ?? "";
    }
}


<div class="progress">
    <div class="progress-bar  " role="progressbar" aria-valuenow="40"
         aria-valuemin="0" aria-valuemax="100" style="width:14%">

    </div>
    <div class="arrow"></div>
</div>

<div class="dynamic_bg_form">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-lg-offset-2">

                <h1>Estimate Sending Fees</h1>

            </div>

        </div>
    </div>


</div>

@using (Html.BeginForm("Index", "EstimateFaxingAmount", FormMethod.Post))
{


    <div class="real_form">

        <div class="container">
            <div class="row">
                <div class="col-lg-8 col-lg-offset-2">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="col-lg-4">
                        <label> Sending  Amount</label>
                    </div>
                    @Html.HiddenFor(model => model.FaxingCurrencySymbol)
                    @Html.HiddenFor(model => model.FaxingCurrency)
                    @Html.HiddenFor(model => model.ReceivingCurrency)
                    @Html.HiddenFor(model => model.ReceivingCurrencySymbol)
                    <div class="col-lg-6">
                        <div class="input-group">
                            <span class="input-group-addon">@FaxingCurrencySymbol</span>
                            @Html.EditorFor(model => model.FaxingAmount, new { htmlAttributes = new { @class = "form-control", id = "FaxingAmount" } })

                            <span class="input-group-addon">@FaxingCurrency</span>

                        </div>
                        @Html.ValidationMessageFor(model => model.FaxingAmount, "", new { @class = "text-danger" })
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        <center>OR</center>
                    </div>
                    <div class="col-lg-4">
                        <label> Receiving Amount</label>
                    </div>
                    <div class="col-lg-6">
                        <div class="input-group">
                            <span class="input-group-addon">@ReceivingCurrencySymbol</span>
                            @Html.EditorFor(model => model.ReceivingAmount, new { htmlAttributes = new { @class = "form-control", id = "ReceivingAmount" } })

                            <span class="input-group-addon">@ReceivingCurrency</span>
                            @Html.ValidationMessage("Error", "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <br />

                    <div class="clearfix" ></div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.IncludeFaxingFee, htmlAttributes: new { @class = "col-lg-6" })
                        <div class="col-lg-6">
                            <div class="form-check">@Html.RadioButtonFor(m => m.IncludeFaxingFee, true, new { @checked = true })Yes</div>
                            <div class="form-check">
                                @Html.RadioButtonFor(m => m.IncludeFaxingFee, false, new { @checked = true })No
                            </div>
                        </div>
                    </div>
                    <div class="clearfix">
                        @if (ViewBag.ExchangeRate != null)
                        {
                            <label style="color:red">@ViewBag.ExchangeRate </label>
                        }
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="dynamic_footer">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 col-lg-offset-2">
                    <a href="@Url.Action("Index","EstimateFee")" class="fbtn btn-back hidden-xs hidden-sm "><i class="fa fa-chevron-left" aria-hidden="true"></i> Back</a>
                    <button value="Next" class="fbtn btn-next" type="submit">Next <i class="fa fa-chevron-right" aria-hidden="true"></i></button>

                    <br />
                    <a href="@Url.Action("Index","EstimateFee")" , class="fbtn btn-back hidden-lg hidden-md"><i class="fa fa-chevron-left" aria-hidden="true"></i> Back</a>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        var FaxingAmount = document.getElementById('FaxingAmount'),
            ReceivingAmount = document.getElementById('ReceivingAmount');

        function enableToggle(current, other) {

            other.disabled = current.value.replace(/\s+/, '').length > 0;
        }


        FaxingAmount.onkeyup = function () {
            enableToggle(this, ReceivingAmount);
            document.getElementById("ReceivingAmount").value = "0";
        }
        ReceivingAmount.onkeyup = function () {
            enableToggle(this, FaxingAmount);
            document.getElementById("FaxingAmount").value = "0";
        }

    </script>
}